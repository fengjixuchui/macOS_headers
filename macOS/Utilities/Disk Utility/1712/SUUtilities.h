//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface SUUtilities : NSObject
{
}

+ (void)disableActivationLockAndDestroyDisks:(id)arg1 hostWindow:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
+ (long long)compareDisk:(id)arg1 disk:(id)arg2;
+ (id)representativeDiskForVolumeGroupMember:(id)arg1;
+ (BOOL)isColor:(id)arg1 brighterThanColor:(id)arg2;
+ (BOOL)isColor:(id)arg1 equalToColor:(id)arg2;
+ (id)systemVersionForDisk:(id)arg1;
+ (BOOL)isRenamableDisk:(id)arg1;
+ (BOOL)isBackupDisk:(id)arg1;
+ (id)raidForChildDisk:(id)arg1;
+ (id)RAIDFileSystems;
+ (id)APFSFileSystems;
+ (id)sanitizeNameForCoreStorage:(id)arg1;
+ (id)processNameForPID:(int)arg1;
+ (void)showUnmountFailureAlertForError:(id)arg1 diskName:(id)arg2 isContainer:(BOOL)arg3 isEject:(BOOL)arg4;
+ (id)unmountFailureMessageForError:(id)arg1 diskName:(id)arg2 isContainer:(BOOL)arg3 isEject:(BOOL)arg4;
+ (id)nameForNewVolumeConsideringNames:(id)arg1 ignoringNames:(id)arg2;
+ (id)nameForNewVolume;
+ (id)nameForDisk:(id)arg1;
+ (id)apfsFusionDriveLikeContainerOnWholeDisk:(id)arg1;
+ (BOOL)physicalDeviceContainsAPFSFusionLikeDisk:(id)arg1;
+ (BOOL)logicalVolumeGroupIsFusionDriveLike:(id)arg1;
+ (id)fusionDriveLikeLVGOnPhysicalWholeDisk:(id)arg1;
+ (BOOL)physicalDeviceContainsFusionLikeDisk:(id)arg1;
+ (id)mountDiskImageAtPath:(id)arg1 visible:(BOOL)arg2 readOnly:(BOOL)arg3;
+ (int)sizeUnitCount;
+ (id)sizeStringForUnitSize:(unsigned long long)arg1;
+ (BOOL)parseString:(id)arg1 toByteCount:(unsigned long long *)arg2;
+ (id)formatMenuItemForUnknownFilesystemWithDiskType:(id)arg1;
+ (id)formatMenuForDisk:(id)arg1;
+ (id)formatMenuForFileSystemTypes:(id)arg1 withPartitionMapType:(id)arg2 disableEncryptedTypes:(BOOL)arg3;
+ (id)formatMenuForFileSystemTypes:(id)arg1 withPartitionMapType:(id)arg2;
+ (BOOL)canFormatFilesystem:(id)arg1;
+ (id)formatDictionaryForFileSystemType:(id)arg1 caseSensative:(BOOL)arg2 encrypted:(BOOL)arg3;
+ (id)unmountedDiskImage:(id)arg1;
+ (id)badgeImage:(id)arg1 withImage:(id)arg2 atSize:(struct CGSize)arg3;
+ (BOOL)willNotDestroyVolumes:(id)arg1 progressSheet:(id)arg2;
+ (BOOL)shouldEnableDestroyStartupVolumeCommands;
+ (BOOL)shouldNotPerformDestroyVolumeOperations;
+ (BOOL)shouldAllowModifyCoreStorage;

@end

