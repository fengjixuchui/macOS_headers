//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface OAETImage : NSObject
{
}

+ (id)mapPngImageFromDrawableInfo:(id)arg1 strokeOnly:(BOOL)arg2 state:(id)arg3;
+ (void)mapImageAltText:(id)arg1 image:(id)arg2 state:(id)arg3;
+ (void)cacheImageDataAndGeometry:(id)arg1 forDrawable:(id)arg2 strokeOnly:(BOOL)arg3 state:(id)arg4;
+ (id)cachedImageDataAndGeometryForDrawable:(id)arg1 strokeOnly:(BOOL)arg2 state:(id)arg3;
+ (BOOL)imagedDrawable:(id)arg1 matchesImagedDrawable:(id)arg2;
+ (id)keyForImagedDrawable:(id)arg1 strokeOnly:(BOOL)arg2 state:(id)arg3;
+ (id)stringForCGSize:(struct CGSize)arg1;
+ (id)imageDataAndGeometryFromDrawableInfo:(id)arg1 strokeOnly:(BOOL)arg2 state:(id)arg3;
+ (id)imageGeometryWithLayoutGeometry:(id)arg1 imageBounds:(struct CGRect)arg2 maskPathOrigin:(struct CGPoint)arg3;
+ (void)incrementReferenceCountOfBlipRef:(id)arg1 state:(id)arg2;
+ (id)blipRefWithImageData:(id)arg1 blipType:(int)arg2 state:(id)arg3;
+ (id)tsuImageFromDrawableInfo:(id)arg1 imageBounds:(struct CGRect *)arg2 layoutGeometry:(id *)arg3 maskPathOrigin:(struct CGPoint *)arg4 isStrokeOnly:(BOOL)arg5 hasAlpha:(char *)arg6 state:(id)arg7;
+ (double)scaleFactorForImage:(id)arg1;
+ (id)tsuImageFromConnectionLineInfo:(id)arg1 imageBounds:(struct CGRect *)arg2 layoutGeometry:(id *)arg3;
+ (id)lineInfoFromConnectionLineInfo:(id)arg1 layoutGeometry:(id *)arg2;
+ (id)tsuImageFromInfos:(id)arg1 imageBounds:(struct CGRect *)arg2;
+ (id)mapEquation:(id)arg1 state:(id)arg2;
+ (id)mapImage:(id)arg1 state:(id)arg2;
+ (id)mapImageFromLayoutForDrawable:(id)arg1 state:(id)arg2;
+ (id)mapImageForDrawable:(id)arg1 pngData:(id)arg2 bounds:(struct CGRect)arg3 state:(id)arg4;
+ (id)newImageFromStyledDrawable:(id)arg1 imageData:(id)arg2 state:(id)arg3;
+ (BOOL)imageDataIsPict:(id)arg1;
+ (id)newMaskFromImage:(id)arg1 toImage:(id)arg2 state:(id)arg3;
+ (id)newGroupForImage:(id)arg1 visiblePath:(id)arg2 state:(id)arg3;
+ (void)createMaskedDataInImage:(id)arg1 fromImage:(id)arg2 visiblePath:(id)arg3 state:(id)arg4;
+ (id)visiblePathFromImage:(id)arg1 toGraphicProperties:(id)arg2 state:(id)arg3;
+ (BOOL)mapMaskOfImage:(id)arg1 asCropOfImage:(id)arg2 state:(id)arg3;
+ (void)mapMaskGeometry:(id)arg1 imageGeometry:(id)arg2 tgtImageOrientedBounds:(id)arg3 tgtImageFill:(id)arg4 state:(id)arg5;
+ (BOOL)visiblePartOfImageIsRectangular:(id)arg1;
+ (BOOL)maskIsInexistentOrRectangularInImage:(id)arg1;
+ (BOOL)maskHasSameOrientationAsImage:(id)arg1;

@end

