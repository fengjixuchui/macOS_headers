//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Action {
    CDUnknownFunctionPointerType *_field1;
};

struct ActionFinder;

struct AdjustedColor {
    unsigned char _field1;
    unsigned char _field2;
    unsigned int :4;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct AxisParentChildren {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    struct ChVector<int> _field5;
    int _field6;
    int _field7;
    int _field8;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CHDDataPoint {
    unsigned long long index;
    struct EDValue value;
    unsigned long long contentFormatId;
};

struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int>> {
    struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value>>> _field1;
};

struct ChMap<unsigned int, XlChartEnteredData *, CsLess<unsigned int>> {
    struct map<unsigned int, XlChartEnteredData *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, XlChartEnteredData *>>> _field1;
};

struct ChMap<unsigned int, int, CsLess<unsigned int>> {
    struct map<unsigned int, int, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int>>> _field1;
};

struct ChStack<EshHeader> {
    struct EshHeader *_field1;
    struct EshHeader *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChStack<int> {
    int *_field1;
    int *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<CsString *> {
    struct CsString **_field1;
    struct CsString **_field2;
    struct __compressed_pair<CsString **, ChAllocator<CsString *>> {
        struct CsString **_field1;
    } _field3;
};

struct ChVector<EshComputedRect> {
    struct EshComputedRect *_field1;
    struct EshComputedRect *_field2;
    struct __compressed_pair<EshComputedRect *, ChAllocator<EshComputedRect>> {
        struct EshComputedRect *_field1;
    } _field3;
};

struct ChVector<EshComputedValue> {
    struct EshComputedValue *_field1;
    struct EshComputedValue *_field2;
    struct __compressed_pair<EshComputedValue *, ChAllocator<EshComputedValue>> {
        struct EshComputedValue *_field1;
    } _field3;
};

struct ChVector<EshFormula> {
    struct EshFormula *_field1;
    struct EshFormula *_field2;
    struct __compressed_pair<EshFormula *, ChAllocator<EshFormula>> {
        struct EshFormula *_field1;
    } _field3;
};

struct ChVector<EshHeader *> {
    struct EshHeader **_field1;
    struct EshHeader **_field2;
    struct __compressed_pair<EshHeader **, ChAllocator<EshHeader *>> {
        struct EshHeader **_field1;
    } _field3;
};

struct ChVector<EshPathCommand> {
    struct EshPathCommand *_field1;
    struct EshPathCommand *_field2;
    struct __compressed_pair<EshPathCommand *, ChAllocator<EshPathCommand>> {
        struct EshPathCommand *_field1;
    } _field3;
};

struct ChVector<OcText> {
    struct OcText *_field1;
    struct OcText *_field2;
    struct __compressed_pair<OcText *, ChAllocator<OcText>> {
        struct OcText *_field1;
    } _field3;
};

struct ChVector<XlBrk *> {
    struct XlBrk **_field1;
    struct XlBrk **_field2;
    struct __compressed_pair<XlBrk **, ChAllocator<XlBrk *>> {
        struct XlBrk **_field1;
    } _field3;
};

struct ChVector<XlCell *> {
    struct XlCell **_field1;
    struct XlCell **_field2;
    struct __compressed_pair<XlCell **, ChAllocator<XlCell *>> {
        struct XlCell **_field1;
    } _field3;
};

struct ChVector<XlCellRow *> {
    struct XlCellRow **_field1;
    struct XlCellRow **_field2;
    struct __compressed_pair<XlCellRow **, ChAllocator<XlCellRow *>> {
        struct XlCellRow **_field1;
    } _field3;
};

struct ChVector<XlChartBinaryReader::PlotDescriptor> {
    struct PlotDescriptor *_field1;
    struct PlotDescriptor *_field2;
    struct __compressed_pair<XlChartBinaryReader::PlotDescriptor *, ChAllocator<XlChartBinaryReader::PlotDescriptor>> {
        struct PlotDescriptor *_field1;
    } _field3;
};

struct ChVector<XlChartBinaryReader::SeriesDescriptor> {
    struct SeriesDescriptor *_field1;
    struct SeriesDescriptor *_field2;
    struct __compressed_pair<XlChartBinaryReader::SeriesDescriptor *, ChAllocator<XlChartBinaryReader::SeriesDescriptor>> {
        struct SeriesDescriptor *_field1;
    } _field3;
};

struct ChVector<XlChartCustomLabelText *> {
    struct XlChartCustomLabelText **_field1;
    struct XlChartCustomLabelText **_field2;
    struct __compressed_pair<XlChartCustomLabelText **, ChAllocator<XlChartCustomLabelText *>> {
        struct XlChartCustomLabelText **_field1;
    } _field3;
};

struct ChVector<XlChartCustomLegend *> {
    struct XlChartCustomLegend **_field1;
    struct XlChartCustomLegend **_field2;
    struct __compressed_pair<XlChartCustomLegend **, ChAllocator<XlChartCustomLegend *>> {
        struct XlChartCustomLegend **_field1;
    } _field3;
};

struct ChVector<XlChartFBI> {
    struct XlChartFBI *_field1;
    struct XlChartFBI *_field2;
    struct __compressed_pair<XlChartFBI *, ChAllocator<XlChartFBI>> {
        struct XlChartFBI *_field1;
    } _field3;
};

struct ChVector<XlChartPlot::DefText> {
    struct DefText *_field1;
    struct DefText *_field2;
    struct __compressed_pair<XlChartPlot::DefText *, ChAllocator<XlChartPlot::DefText>> {
        struct DefText *_field1;
    } _field3;
};

struct ChVector<XlChartSeriesFormat *> {
    struct XlChartSeriesFormat **_field1;
    struct XlChartSeriesFormat **_field2;
    struct __compressed_pair<XlChartSeriesFormat **, ChAllocator<XlChartSeriesFormat *>> {
        struct XlChartSeriesFormat **_field1;
    } _field3;
};

struct ChVector<XlChartTextFrame::TextRun> {
    struct TextRun *_field1;
    struct TextRun *_field2;
    struct __compressed_pair<XlChartTextFrame::TextRun *, ChAllocator<XlChartTextFrame::TextRun>> {
        struct TextRun *_field1;
    } _field3;
};

struct ChVector<XlConditionalFormat *> {
    struct XlConditionalFormat **_field1;
    struct XlConditionalFormat **_field2;
    struct __compressed_pair<XlConditionalFormat **, ChAllocator<XlConditionalFormat *>> {
        struct XlConditionalFormat **_field1;
    } _field3;
};

struct ChVector<XlExtProp *> {
    struct XlExtProp **_field1;
    struct XlExtProp **_field2;
    struct __compressed_pair<XlExtProp **, ChAllocator<XlExtProp *>> {
        struct XlExtProp **_field1;
    } _field3;
};

struct ChVector<XlFmtPtg *> {
    struct XlFmtPtg **_field1;
    struct XlFmtPtg **_field2;
    struct __compressed_pair<XlFmtPtg **, ChAllocator<XlFmtPtg *>> {
        struct XlFmtPtg **_field1;
    } _field3;
};

struct ChVector<XlFont *> {
    struct XlFont **_field1;
    struct XlFont **_field2;
    struct __compressed_pair<XlFont **, ChAllocator<XlFont *>> {
        struct XlFont **_field1;
    } _field3;
};

struct ChVector<XlGraphicsInfo::XlObjData *> {
    struct XlObjData **_field1;
    struct XlObjData **_field2;
    struct __compressed_pair<XlGraphicsInfo::XlObjData **, ChAllocator<XlGraphicsInfo::XlObjData *>> {
        struct XlObjData **_field1;
    } _field3;
};

struct ChVector<XlLink *> {
    struct XlLink **_field1;
    struct XlLink **_field2;
    struct __compressed_pair<XlLink **, ChAllocator<XlLink *>> {
        struct XlLink **_field1;
    } _field3;
};

struct ChVector<XlPtg *> {
    struct XlPtg **_field1;
    struct XlPtg **_field2;
    struct __compressed_pair<XlPtg **, ChAllocator<XlPtg *>> {
        struct XlPtg **_field1;
    } _field3;
};

struct ChVector<XlRecord *> {
    struct XlRecord **_field1;
    struct XlRecord **_field2;
    struct __compressed_pair<XlRecord **, ChAllocator<XlRecord *>> {
        struct XlRecord **_field1;
    } _field3;
};

struct ChVector<XlRef *> {
    struct XlRef **_field1;
    struct XlRef **_field2;
    struct __compressed_pair<XlRef **, ChAllocator<XlRef *>> {
        struct XlRef **_field1;
    } _field3;
};

struct ChVector<XlXf *> {
    struct XlXf **_field1;
    struct XlXf **_field2;
    struct __compressed_pair<XlXf **, ChAllocator<XlXf *>> {
        struct XlXf **_field1;
    } _field3;
};

struct ChVector<XlXti *> {
    struct XlXti **_field1;
    struct XlXti **_field2;
    struct __compressed_pair<XlXti **, ChAllocator<XlXti *>> {
        struct XlXti **_field1;
    } _field3;
};

struct ChVector<float> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, ChAllocator<float>> {
        float *_field1;
    } _field3;
};

struct ChVector<int> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, ChAllocator<int>> {
        int *_field1;
    } _field3;
};

struct ChVector<short *> {
    short **_field1;
    short **_field2;
    struct __compressed_pair<short **, ChAllocator<short *>> {
        short **_field1;
    } _field3;
};

struct ChVector<unsigned int> {
    unsigned int *_field1;
    unsigned int *_field2;
    struct __compressed_pair<unsigned int *, ChAllocator<unsigned int>> {
        unsigned int *_field1;
    } _field3;
};

struct ChVector<unsigned short> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, ChAllocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
};

struct Color {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct CsColour {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
};

struct CsData {
    unsigned int _field1;
    char *_field2;
};

struct CsGuid;

struct CsPoint<int> {
    int _field1[2];
};

struct CsRect<float> {
    float _field1[4];
};

struct CsRect<int> {
    int _field1[4];
};

struct CsSimpleHeapVector<XlFont> {
    struct ChVector<XlFont *> _field1;
};

struct CsSimpleHeapVector<XlRecord> {
    struct ChVector<XlRecord *> _field1;
};

struct CsSimpleHeapVector<XlXf> {
    struct ChVector<XlXf *> _field1;
};

struct CsString {
    CDUnknownFunctionPointerType *_field1;
    unsigned short *_field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct Data {
    int _field1;
    union Value _field2;
};

struct DefText;

struct EDAreaReference {
    int firstRow;
    int firstColumn;
    int lastRow;
    int lastColumn;
};

struct EDBuildablePtg {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    int _field3;
    unsigned int _field4;
    unsigned short _field5;
    struct EDBuildablePtg *_field6;
    struct EDBuildablePtg *_field7;
    struct EDBuildablePtg *_field8;
    struct EDBuildablePtg *_field9;
    _Bool _field10;
    int _field11;
    unsigned int _field12;
    unsigned int _field13;
    _Bool _field14;
    unsigned int _field15;
    unsigned int _field16;
    _Bool _field17;
    _Bool _field18;
    id _field19;
};

struct EDCellAnchorMarker {
    int columnIndex;
    float columnAdjustment;
    int rowIndex;
    float rowAdjustment;
};

struct EDCellHeader {
    unsigned int _field1;
    unsigned int _field2;
};

struct EDRowInfo {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
    unsigned int :1;
    unsigned int :1;
};

struct EDToken {
    unsigned short _field1;
    unsigned int _field2;
};

struct EDValue {
    int type;
    union {
        _Bool boolean;
        double number;
        char *string;
        unsigned long long stringIndex;
        int error;
    } ;
};

struct EFLexer {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int *_field8;
    struct basic_istream<char, std::__1::char_traits<char>> *_field9;
    struct basic_ostream<char, std::__1::char_traits<char>> *_field10;
    char _field11;
    unsigned long long _field12;
    char *_field13;
    int _field14;
    int _field15;
    int _field16;
    unsigned long long _field17;
    unsigned long long _field18;
    struct yy_buffer_state **_field19;
    int _field20;
    char *_field21;
    int *_field22;
    int *_field23;
    char *_field24;
    int *_field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    union YYSTYPE _field33;
    id _field34;
    char _field35;
    char *_field36;
    struct basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field37;
    struct basic_istream<char, std::__1::char_traits<char>> *_field38;
    struct basic_ostream<char, std::__1::char_traits<char>> *_field39;
    struct yy_buffer_state *_field40;
};

struct EFRefTok {
    int type;
    unsigned int dataSize;
    unsigned char data[22];
};

struct EFStrTok {
    id _field1;
    int _field2;
    union EFData _field3;
};

struct EITRuleRange {
    double _field1;
    char _field2;
    double _field3;
    char _field4;
    int _field5;
};

struct EshBSE {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    struct EshBlip *_field4;
    unsigned short *_field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned short _field9;
    int _field10;
    unsigned char _field11;
    int _field12;
    int _field13;
    unsigned char _field14;
    unsigned char _field15;
    struct UID _field16;
};

struct EshBlip {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    struct UID _field4;
};

struct EshCallout {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshColor {
    struct Data _field1;
};

struct EshComputedRect;

struct EshComputedValue {
    _Bool _field1;
    int _field2;
};

struct EshContainer {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    struct ChVector<EshHeader *> _field4;
};

struct EshContent {
    CDUnknownFunctionPointerType *_field1;
};

struct EshContentData {
    struct EshOpt _field1;
    struct EshOpt _field2;
    struct EshOpt _field3;
    struct EshSp _field4;
    CsRect_0aefebc6 _field5;
};

struct EshDiagram {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshExtrusion {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshFill {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshFormula;

struct EshGroup {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    CDUnknownFunctionPointerType *_field4;
    struct EshSpgr *_field5;
    struct EshGroupProperties _field6;
    struct EshGroupLocks _field7;
    struct EshDiagram _field8;
};

struct EshGroupLocks {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshGroupProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
    struct EshRectAtom *_field4;
};

struct EshHeader {
    int _field1;
    unsigned int _field2;
    short _field3;
    unsigned short _field4;
    unsigned char _field5;
};

struct EshHyperlink {
    CDUnknownFunctionPointerType *_field1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    struct CsString *_field2;
    struct CsString *_field3;
    struct CsString *_field4;
    struct EshHyperlinkMoniker *_field5;
    struct CsString *_field6;
    struct CsGuid *_field7;
    struct tagChWinTime _field8;
};

struct EshHyperlinkMoniker;

struct EshMetafileBlipInfo {
    unsigned short *_field1;
    struct UID _field2;
    struct OcBinaryData _field3;
    int _field4;
    CsRect_0aefebc6 _field5;
    CsPoint_c846a6ec _field6;
    int _field7;
    unsigned char _field8;
    unsigned char _field9;
};

struct EshObject {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
};

struct EshObjectFactory {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
};

struct EshOpt {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int>> _field4;
    struct EshColor _field5;
};

struct EshParserVisitor;

struct EshPath {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshPathCommand;

struct EshPathParamTable {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshComputedValue> _field2;
};

struct EshRecordWriterVisitor;

struct EshRectAtom;

struct EshRoot {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct ChVector<EshHeader *> _field3;
};

struct EshShadow {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshShape {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    struct EshTextBox _field4;
    struct EshFill _field5;
    struct EshStroke _field6;
    struct EshShadow _field7;
    struct EshExtrusion _field8;
    struct EshCallout _field9;
    CDUnknownFunctionPointerType *_field10;
    struct EshShapeProperties _field11;
    struct EshShapeLocks _field12;
    struct EshShapeImageData _field13;
    struct EshTextPath _field14;
    struct EshPath _field15;
    struct EshSkew _field16;
};

struct EshShapeBase {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    struct EshTextBox _field4;
    struct EshFill _field5;
    struct EshStroke _field6;
    struct EshShadow _field7;
    struct EshExtrusion _field8;
    struct EshCallout _field9;
};

struct EshShapeDefaults {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    struct EshTextBox _field4;
    struct EshFill _field5;
    struct EshStroke _field6;
    struct EshShadow _field7;
    struct EshExtrusion _field8;
    struct EshCallout _field9;
    struct EshShapeDefaultsPropertiesImpl _field10;
    struct EshShapeDefaultsImageData _field11;
};

struct EshShapeDefaultsImageData {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshShapeDefaultsPropertiesImpl {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
    CDUnknownFunctionPointerType *_field4;
    CDUnknownFunctionPointerType *_field5;
};

struct EshShapeImageData {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshShapeLocks {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshShapeProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
    CDUnknownFunctionPointerType *_field4;
};

struct EshSkew {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshSp {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    unsigned int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
};

struct EshSpgr;

struct EshStroke {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshTablePropVal<EshComputedRect> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshComputedRect> _field2;
};

struct EshTablePropVal<EshFormula> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshFormula> _field2;
};

struct EshTablePropVal<EshPathCommand> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshPathCommand> _field2;
};

struct EshTextBox {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshTextPath {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct FindLinesContext {
    char _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct __CFArray *_field4;
    char _field5;
    int _field6;
};

struct GQDTCellID {
    unsigned short mColumn;
    unsigned short mRow;
};

struct GQDTCellRange {
    struct GQDTCellID mTopLeft;
    struct GQDTCellID mBottomRight;
};

struct GQXmlEnumMapping {
    int _field1;
    char *_field2;
};

struct GSSPDecodeConversionContext {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
};

struct GSSPDeserializationContext {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct vector<GSSPDeserializationContext::SubContext, std::__1::allocator<GSSPDeserializationContext::SubContext>> _field3;
    struct GSSPRetainer *_field4;
    struct GSSPDecodeConversionContext _field5;
    struct vector<id, std::__1::allocator<id>> _field6;
    struct map<int, GSUNSWrapper<GSSPMessageBase>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GSUNSWrapper<GSSPMessageBase>>>> _field7;
    id _field8;
};

struct GSSPEncodeConversionContext {
    struct GSSPRetainer *_field1;
    id _field2;
    id _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    id _field7;
    struct hash_map<id, GSSPMessageBase *, GSUPointerHasher, std::__1::equal_to<id>, std::__1::allocator<std::__1::pair<const id, GSSPMessageBase *>>> _field8;
    struct hash_map<std::__1::basic_string<char>, GSSPMessageBase *, GSUCppStringHasher, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, GSSPMessageBase *>>> _field9;
};

struct GSSPHashKeyBuilder {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
    char *_field2;
    unsigned long long _field3;
};

struct GSSPRetainer;

struct GSSPSerializationContext {
    CDUnknownFunctionPointerType *_field1;
};

struct GSUNSWrapper<GSSPChartMediatorAxisData>;

struct GSUNSWrapper<NSString>;

struct GSUNSWrapper<TNSheet>;

struct GSUNSWrapper<TSDDrawableInfo>;

struct GSUNSWrapper<TSWPStorage>;

struct ICESPropertyExportEntry {
    int _field1;
    int _field2;
    CDUnknownFunctionPointerType _field3;
};

struct ICIDMovieDataTimeInfo {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
};

struct ICISPropertyConversionEntry {
    int _field1;
    int _field2;
    int _field3;
    CDUnknownFunctionPointerType _field4;
};

struct MFPColorMatrix {
    float _field1[5][5];
};

struct MappedFillState {
    char _field1;
    char _field2;
    struct {
        char _field1;
        char _field2;
        char _field3;
        char _field4;
        char _field5;
        char _field6;
    } _field3[32];
};

struct NSEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct NSObjectComparator<GQDWrapPoint> {
    SEL _field1;
};

struct NamedFunc<GQPStatus (*)(GQPProcessor *, int)>;

struct NamedFunc<GQPStatus (*)(_xmlTextReader *, GQPProcessor *)>;

struct OABGradientStop {
    id _field1;
    float _field2;
};

struct OABTable2DArray<EshShape *> {
    int _field1;
    int _field2;
    struct EshShape **_field3;
};

struct OABTable2DArray<OABTableCell> {
    int _field1;
    int _field2;
    struct OABTableCell *_field3;
};

struct OABTableCell;

struct OADAdjustCoord {
    char isFormulaResult;
    int value;
};

struct OADAdjustPoint {
    struct OADAdjustCoord x;
    struct OADAdjustCoord y;
};

struct OADCachedTextStyleData {
    unsigned int verticalAlign:3;
    short lineSpacing;
    short beforeSpacing;
    short afterSpacing;
    short leftMargin;
    short rightMargin;
    short indent;
    short defaultTab;
    unsigned int horizontalAlign:4;
    unsigned short fontFaceIndex;
    short fontSize;
    unsigned short fontColorIndex;
    unsigned int bold:1;
    unsigned int italic:1;
    unsigned int underline:5;
    unsigned int format:2;
    unsigned int kerning:2;
    unsigned int strikethrough:2;
    unsigned int caps:2;
};

struct OADFormulaArg {
    int type;
    int value;
};

struct OADTFTemplateMatrix<OADTableCell *> {
    int _field1;
    int _field2;
    struct vector<OADTableCell *, std::__1::allocator<OADTableCell *>> _field3;
};

struct OADTFTemplateMatrix<OADTablePartStyle *> {
    int _field1;
    int _field2;
    struct vector<OADTablePartStyle *, std::__1::allocator<OADTablePartStyle *>> _field3;
};

struct OADTMatrixPos {
    int _field1;
    int _field2;
};

struct OAETLineEndInfo {
    id _field1;
    char _field2;
};

struct OAITListNumberInfo {
    int numberScheme;
    int startNumber;
    int blockStartNumber;
    int currentNumber;
    char prevParagraphWasEmpty;
};

struct OAVGradientStop {
    id _field1;
    float _field2;
};

struct OAVTextBoxInsets {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct OCCBinaryStreamer {
    CDUnknownFunctionPointerType *_field1;
    struct OCCCryptoKey *_field2;
    char *_field3;
};

struct OCCCryptoKey {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    char *_field3;
    char *_field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct OCCEncryptionInfoReader {
    CDUnknownFunctionPointerType *_field1;
};

struct OCCStreamer {
    CDUnknownFunctionPointerType *_field1;
    struct OCCCryptoKey *_field2;
    char *_field3;
};

struct ODIHRange {
    float mMid;
    float mLength;
};

struct ODIHRangeVector {
    struct ODIHRange *_field1;
    struct ODIHRange *_field2;
    struct __compressed_pair<ODIHRange *, ChAllocator<ODIHRange>> {
        struct ODIHRange *_field1;
    } _field3;
};

struct ODILayoutNodeState {
    id _field1;
    char _field2;
};

struct ODIPointIteratorState {
    int _field1;
    unsigned int _field2;
    int _field3;
    int _field4;
    id _field5;
};

struct ObjcSharedPtr<GQDWrapPoint>;

struct OcBinaryData {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    char *_field6;
    _Bool _field7;
    struct SsrwOOStream *_field8;
};

struct OcBinaryReader {
    CDUnknownFunctionPointerType *_field1;
};

struct OcBinaryWriter {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    struct SsrwOOStgInfo *_field3;
};

struct OcReader {
    CDUnknownFunctionPointerType *_field1;
    struct EshObjectFactory *_field2;
};

struct OcText {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    char *_field6;
    char *_field7;
    _Bool _field8;
};

struct OcWriter {
    CDUnknownFunctionPointerType *_field1;
};

struct PlotDescriptor;

struct RGB {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
};

struct SeriesDescriptor;

struct SsrwOORootStorage {
    struct _Storage *_field1;
    unsigned short _field2[36];
    struct _RootStorage *_field3;
};

struct SsrwOOStgInfo;

struct SsrwOOStorage {
    struct _Storage *_field1;
    unsigned short _field2[36];
};

struct SsrwOOStream {
    CDUnknownFunctionPointerType *_field1;
};

struct StateSpec {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    struct NamedFunc<GQPStatus (*)(_xmlTextReader *, GQPProcessor *)> *_field3;
    struct Action *_field4;
    struct NamedFunc<GQPStatus (*)(_xmlTextReader *, GQPProcessor *)> *_field5;
    struct NamedFunc<GQPStatus (*)(GQPProcessor *, int)> *_field6;
    struct ActionFinder *_field7;
};

struct SubContext;

struct TCDumpEnumPair {
    int _field1;
    id _field2;
};

struct TCEnumerationStruct {
    int _field1;
    id _field2;
};

struct TCFontStyling {
    int fontClass;
    unsigned int stringEncoding;
    char weight;
    char italic;
    int width;
};

struct TCStrokeMatrix {
    struct vector<TSDStroke *, std::__1::allocator<TSDStroke *>> _field1;
    CDStruct_c0454aff _field2;
};

struct TCXmlEnumDescription {
    int _field1;
    char *_field2;
};

struct TSCEASTNodeArray {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    id _field4;
    _Bool _field5;
};

struct TSCEAbstractVector;

struct TSCECategoryRef {
    UUIDData_5fbc143e _field1;
    UUIDData_5fbc143e _field2;
    UUIDData_5fbc143e _field3;
    UUIDData_5fbc143e _field4;
    unsigned char _field5;
    unsigned char _field6;
    struct TSUPreserveFlags _field7;
    short _field8;
};

struct TSCECellCoordSet {
    struct map<unsigned short, TSUIndexSet, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSUIndexSet>>> _field1;
};

struct TSCECellRef {
    struct TSUCellCoord _field1;
    UUIDData_5fbc143e _field2;
};

struct TSCECellRefSet {
    struct map<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>>> _field1;
};

struct TSCEDependencyTracker;

struct TSCEEvalRef {
    struct TSCETableResolver *_field1;
    struct TSUCellTractRef _field2;
};

struct TSCEEvaluationContext {
    struct TSCEEvaluationStack _field1;
    id _field2;
    id _field3;
    char _field4;
    char _field5;
    char _field6;
    struct TSCEWarningReportingContext _field7;
    UUIDData_5fbc143e _field8;
    struct TSUCellCoord _field9;
    struct TSCEValueBindingEnvironment _field10;
    struct TSCESymbolTable _field11;
    UUIDData_5fbc143e _field12;
    id _field13;
    char _field14;
    struct TSCEReferenceSet _field15;
    struct TSCERandGenerator *_field16;
    id _field17;
    int _field18;
};

struct TSCEEvaluationStack {
    struct vector<TSCEValue, std::__1::allocator<TSCEValue>> _field1;
    int _field2;
};

struct TSCEFormat {
    struct TSCEFormatStruct _field1;
    unsigned char _field2;
};

struct TSCEFormatStruct {
    unsigned int _field1;
    union {
        CDStruct_c5df2956 _field1;
        CDStruct_b1f6ddd5 _field2;
        CDStruct_ffb10de0 _field3;
        CDStruct_ca9d5fee _field4;
    } _field2;
    id _field3;
    id _field4;
    id _field5;
};

struct TSCENumberValue {
    CDUnknownFunctionPointerType *_field1;
    struct TSUDecimal _field2;
    int _field3[1];
    struct TSCEFormat _field4;
    char _field5;
};

struct TSCERandGenerator;

struct TSCERangeCoordinate {
    struct TSUCellCoord _topLeft;
    struct TSUCellCoord _bottomRight;
};

struct TSCERangeRef {
    struct TSCERangeCoordinate range;
    UUIDData_5fbc143e _tableUID;
};

struct TSCERecalculationState {
    unsigned char _field1;
};

struct TSCEReferenceSet {
    CDUnknownFunctionPointerType *_field1;
    struct TSCEDependencyTracker *_field2;
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>>> _field3;
    struct map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>> _field4;
    struct unordered_set<TSCEReferenceType, std::__1::hash<TSCEReferenceType>, std::__1::equal_to<TSCEReferenceType>, std::__1::allocator<TSCEReferenceType>> *_field5;
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>>> *_field6;
    unordered_set_233cded8 *_field7;
    unordered_set_233cded8 *_field8;
    struct unordered_map<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>, std::__1::hash<TSCEFormulaRangeContext>, std::__1::equal_to<TSCEFormulaRangeContext>, std::__1::allocator<std::__1::pair<const TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>>> *_field9;
    struct unordered_set<TSCECategoryRef, std::__1::hash<TSCECategoryRef>, std::__1::equal_to<TSCECategoryRef>, std::__1::allocator<TSCECategoryRef>> *_field10;
    unordered_set_233cded8 *_field11;
};

struct TSCEReferenceValue {
    CDUnknownFunctionPointerType *_field1;
    struct TSCEEvalRef _field2;
    struct TSUCellCoord _field3;
    struct shared_ptr<TSCEValue> _field4;
    _Bool _field5;
    char _field6;
    struct TSUPreserveFlags _field7;
    _Bool _field8;
    struct TSCEWarningReportingContext *_field9;
};

struct TSCESymbolTable {
    id _field1;
    unsigned int _field2;
    struct unordered_map<NSString *, unsigned int, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned int>>> _field3;
    struct unordered_map<unsigned int, NSString *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSString *>>> _field4;
    struct vector<std::__1::unordered_map<NSString *, unsigned int, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned int>>>, std::__1::allocator<std::__1::unordered_map<NSString *, unsigned int, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned int>>>>> _field5;
};

struct TSCETableResolver;

struct TSCEValue {
    struct TSCENumberValue _field1;
    unsigned long long _field2[19];
    int _field3;
};

struct TSCEValueBindingEnvironment {
    struct unordered_map<unsigned int, TSCEValue, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSCEValue>>> _field1;
    struct vector<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::allocator<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>> _field2;
};

struct TSCEVector {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<TSCEAbstractVector> _field2;
    struct TSCEFormat _field3;
};

struct TSCEWarningReportingContext {
    char _field1;
    char _field2;
    id _field3;
};

struct TSTCellUID {
    UUIDData_5fbc143e _column;
    UUIDData_5fbc143e _row;
};

struct TSUCellCoord {
    unsigned int row;
    unsigned short column;
    char _preserveRow;
    char _preserveColumn;
};

struct TSUCellRect {
    struct TSUCellCoord _field1;
    CDStruct_c0454aff _field2;
};

struct TSUCellTractRef {
    struct TSUIndexSet _field1;
    struct TSUIndexSet _field2;
    UUIDData_5fbc143e _field3;
    unsigned char _field4;
    struct TSUPreserveFlags _field5;
    char _field6;
    char _field7;
    char _field8;
};

struct TSUChromeColumnIndex {
    unsigned short _column;
};

struct TSUDecimal {
    struct {
        unsigned long long _field1[2];
    } _field1;
};

struct TSUIndexRange {
    long long _field1;
    long long _field2;
};

struct TSUIndexSet {
    unsigned int :1;
    unsigned int :1;
    struct TSUIndexRange _field1;
    CDStruct_183601bc *_field2;
};

struct TSUModelColumnIndex {
    unsigned short _column;
};

struct TSUPreserveFlags {
    unsigned char _field1;
};

struct TSUViewColumnIndex {
    unsigned short _field1;
};

struct TextRun;

struct UID {
    unsigned char _field1[16];
};

struct UUIDData<TSP::UUIDData> {
    union {
        unsigned char _uuid[16];
        struct {
            unsigned char byte0;
            unsigned char byte1;
            unsigned char byte2;
            unsigned char byte3;
            unsigned char byte4;
            unsigned char byte5;
            unsigned char byte6;
            unsigned char byte7;
            unsigned char byte8;
            unsigned char byte9;
            unsigned char byte10;
            unsigned char byte11;
            unsigned char byte12;
            unsigned char byte13;
            unsigned char byte14;
            unsigned char byte15;
        } _cfuuid;
        struct {
            unsigned long long _lower;
            unsigned long long _upper;
        } ;
    } ;
};

struct XLFormulaStream {
    CDUnknownFunctionPointerType *_field1;
};

struct XlArray;

struct XlBaseFormulaTable;

struct XlBinaryReader {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    struct SsrwOORootStorage *_field4;
    struct SsrwOOStorage *_field5;
    struct XlEshBinaryReader _field6;
    struct XlStringExtractor *_field7;
    struct XlSheetInfoTable *_field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    struct ChVector<int> _field42;
    struct ChVector<int> _field43;
    struct ChVector<int> _field44;
    struct ChVector<int> _field45;
    struct XlIndex *_field46;
    struct XlRow *_field47;
    struct XlRecord *_field48;
    int _field49;
    int _field50;
    short _field51;
    int _field52;
    int _field53;
    struct ChVector<XlCell *> _field54;
    int _field55;
    unsigned char _field56;
    int _field57;
    struct XlWorksheetProperties _field58;
    struct XlWorksheetProtection _field59;
    struct XlCalculationProperties _field60;
    struct XlSortInfo _field61;
    struct XlDocumentInfo _field62;
    struct XlDocumentProtection _field63;
    struct XlFileProtection _field64;
    int _field65;
    int _field66;
    struct XlDocumentProperties _field67;
    struct XlSubstreamProperties _field68;
    struct XlRecord *_field69;
    struct SsrwOOStream *_field70;
    unsigned char _field71;
    struct XlObjectFactory *_field72;
    struct XlParserVisitor *_field73;
    _Bool _field74;
    CDUnknownFunctionPointerType *_field75;
    struct EshObjectFactory *_field76;
};

struct XlBinaryWriter {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    struct SsrwOOStgInfo *_field3;
    CDUnknownFunctionPointerType *_field4;
    struct SsrwOORootStorage _field5;
    struct SsrwOOStream *_field6;
    struct XlFormulaProcessor *_field7;
    int _field8;
    unsigned short _field9;
    short _field10;
    _Bool _field11;
    unsigned int _field12;
    unsigned int *_field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    int *_field17;
    struct XlStrTableState *_field18;
    struct XlWriterVisitor *_field19;
    struct XlEshBinaryWriter _field20;
    int _field21;
    _Bool _field22;
    _Bool _field23;
    struct XlDocumentInfo _field24;
    int _field25;
    unsigned short _field26;
    struct XlFontTable _field27;
};

struct XlBrk;

struct XlCalculationProperties {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    int _field3;
    short _field4;
    _Bool _field5;
    int _field6;
    _Bool _field7;
};

struct XlCell {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    short _field3;
    short _field4;
    int _field5;
    double _field6;
    struct XlString *_field7;
    int _field8;
    struct XlFormulaInfo *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
};

struct XlCellFormatTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlXf> _field2;
};

struct XlCellRow {
    CDUnknownFunctionPointerType *_field1;
    struct XlRowProperties *_field2;
    struct ChVector<XlCell *> _field3;
    unsigned int _field4;
};

struct XlCellTableInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct XlCf {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    int _field3;
    int _field4;
    short _field5;
    short _field6;
    struct XlDXf *_field7;
    char *_field8;
    char *_field9;
};

struct XlChart3D {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    short _field3;
    short _field4;
    short _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct XlChartBinaryReader {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    struct SsrwOORootStorage *_field4;
    struct SsrwOOStorage *_field5;
    struct XlEshBinaryReader _field6;
    struct XlStringExtractor *_field7;
    struct XlSheetInfoTable *_field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    struct ChVector<int> _field42;
    struct ChVector<int> _field43;
    struct ChVector<int> _field44;
    struct ChVector<int> _field45;
    struct XlIndex *_field46;
    struct XlRow *_field47;
    struct XlRecord *_field48;
    int _field49;
    int _field50;
    short _field51;
    int _field52;
    int _field53;
    struct ChVector<XlCell *> _field54;
    int _field55;
    unsigned char _field56;
    int _field57;
    struct XlWorksheetProperties _field58;
    struct XlWorksheetProtection _field59;
    struct XlCalculationProperties _field60;
    struct XlSortInfo _field61;
    struct XlDocumentInfo _field62;
    struct XlDocumentProtection _field63;
    struct XlFileProtection _field64;
    int _field65;
    int _field66;
    struct XlDocumentProperties _field67;
    struct XlSubstreamProperties _field68;
    struct XlRecord *_field69;
    struct SsrwOOStream *_field70;
    unsigned char _field71;
    struct XlObjectFactory *_field72;
    struct XlParserVisitor *_field73;
    _Bool _field74;
    struct ChVector<int> _field75;
    struct XlSubstreamProperties _field76;
    int _field77;
    int _field78;
    int _field79;
    struct CsRect<float> _field80;
    int _field81;
    int _field82;
    int _field83[4];
    int _field84;
    int _field85;
    int _field86;
    int _field87;
    int _field88;
    struct ChVector<int> _field89;
    int _field90[4];
    int _field91;
    int _field92;
    struct AxisParentChildren _field93;
    struct AxisParentChildren _field94;
    struct ChVector<XlChartBinaryReader::SeriesDescriptor> _field95;
    struct ChVector<XlChartBinaryReader::PlotDescriptor> _field96;
    struct ChMap<unsigned int, int, CsLess<unsigned int>> _field97;
    struct ChMap<unsigned int, int, CsLess<unsigned int>> _field98;
    unsigned short _field99;
    struct ChMap<unsigned int, int, CsLess<unsigned int>> _field100;
    struct ChMap<unsigned int, int, CsLess<unsigned int>> _field101;
    float _field102;
    float _field103;
    unsigned short _field104;
    unsigned short _field105;
    int _field106;
    struct ChVector<int> _field107;
    struct ChVector<int> _field108;
    int _field109;
    _Bool _field110;
    _Bool _field111;
    CDUnknownFunctionPointerType *_field112;
    struct EshObjectFactory *_field113;
};

struct XlChartBinaryWriter {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    struct SsrwOOStgInfo *_field3;
    CDUnknownFunctionPointerType *_field4;
    struct SsrwOORootStorage _field5;
    struct SsrwOOStream *_field6;
    struct XlFormulaProcessor *_field7;
    int _field8;
    unsigned short _field9;
    short _field10;
    _Bool _field11;
    unsigned int _field12;
    unsigned int *_field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    int *_field17;
    struct XlStrTableState *_field18;
    struct XlWriterVisitor *_field19;
    struct XlEshBinaryWriter _field20;
    int _field21;
    _Bool _field22;
    _Bool _field23;
    struct XlDocumentInfo _field24;
    int _field25;
    unsigned short _field26;
    struct XlFontTable _field27;
    struct XlChartShtProps _field28;
    int _field29;
    char *_field30;
    int _field31;
    unsigned int _field32;
    short _field33;
    short _field34;
    unsigned short _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    struct ChVector<unsigned short> _field40;
    struct ChVector<unsigned short> _field41;
    struct ChVector<XlChartFBI> _field42;
};

struct XlChartChartFormat;

struct XlChartCustomLabelText {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    char *_field16;
    unsigned int _field17;
    struct OcText *_field18;
    struct CsColour _field19;
    char *_field20;
    char *_field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    struct ChVector<XlChartTextFrame::TextRun> _field27;
    unsigned int _field28;
    unsigned int _field29;
    short _field30;
    short _field31;
    unsigned int _field32;
    short _field33;
    short _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct XlString *_field50;
    unsigned int _field51;
    unsigned short _field52;
};

struct XlChartCustomLegend {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    char *_field16;
    unsigned int _field17;
    struct OcText *_field18;
    struct CsColour _field19;
    char *_field20;
    char *_field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    struct ChVector<XlChartTextFrame::TextRun> _field27;
    unsigned int _field28;
    unsigned int _field29;
    short _field30;
    short _field31;
    unsigned int _field32;
    short _field33;
    short _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct XlString *_field50;
    short _field51;
    _Bool _field52;
    _Bool _field53;
};

struct XlChartDataSeries {
    CDUnknownFunctionPointerType *_field1;
    struct XlChartSeries *_field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    struct ChVector<XlChartSeriesFormat *> _field6;
    struct ChVector<XlChartSeriesFormat *> _field7;
    struct ChVector<XlChartCustomLabelText *> _field8;
    struct ChVector<unsigned int> _field9;
    struct ChVector<int> _field10;
    struct XlChartLinkedData *_field11;
    struct XlChartLinkedData *_field12;
    struct XlChartLinkedData *_field13;
    struct XlChartLinkedData *_field14;
    struct ChVector<XlChartCustomLegend *> _field15;
};

struct XlChartErrorBar {
    CDUnknownFunctionPointerType *_field1;
    struct XlChartSeries *_field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    struct ChVector<XlChartSeriesFormat *> _field6;
    struct ChVector<XlChartSeriesFormat *> _field7;
    struct ChVector<XlChartCustomLabelText *> _field8;
    struct ChVector<unsigned int> _field9;
    struct ChVector<int> _field10;
    struct XlChartLinkedData *_field11;
    struct XlChartLinkedData *_field12;
    struct XlChartLinkedData *_field13;
    struct XlChartLinkedData *_field14;
    struct ChVector<XlChartCustomLegend *> _field15;
    struct XlChartSerAuxErrBar _field16;
    int _field17;
};

struct XlChartFBI;

struct XlChartFillStyle {
    CDUnknownFunctionPointerType *_field1;
    struct CsColour _field2;
    struct CsColour _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
};

struct XlChartFrameType {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    char *_field16;
    unsigned int _field17;
};

struct XlChartLegendFrame {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    char *_field16;
    unsigned int _field17;
    struct OcText *_field18;
    struct CsColour _field19;
    char *_field20;
    char *_field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    struct ChVector<XlChartTextFrame::TextRun> _field27;
    unsigned int _field28;
    unsigned int _field29;
    short _field30;
    short _field31;
    unsigned int _field32;
    short _field33;
    short _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct XlString *_field50;
    int _field51;
    int _field52;
    int _field53;
    int _field54;
    _Bool _field55;
    _Bool _field56;
    _Bool _field57;
    _Bool _field58;
    _Bool _field59;
};

struct XlChartLineStyle {
    CDUnknownFunctionPointerType *_field1;
    struct CsColour _field2;
    int _field3;
    int _field4;
    unsigned short _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    float _field9;
    int _field10;
};

struct XlChartLinkedData {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    char *_field3;
    unsigned short _field4;
    short _field5;
    _Bool _field6;
    struct ChMap<unsigned int, XlChartEnteredData *, CsLess<unsigned int>> _field7;
};

struct XlChartMarkerStyle {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct CsColour _field3;
    struct CsColour _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned short _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
};

struct XlChartPicF {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    double _field3;
    int _field4;
    int _field5;
    int _field6;
    unsigned char _field7;
};

struct XlChartPlot {
    CDUnknownFunctionPointerType *_field1;
    struct XlChart3D *_field2;
    struct XlChartChartFormat *_field3;
    struct XlChartSeriesFormat *_field4;
    struct XlChartLineStyle *_field5;
    struct XlChartLineStyle *_field6;
    struct XlChartLineStyle *_field7;
    struct XlChartLineStyle *_field8;
    char *_field9;
    char *_field10;
    char *_field11;
    char *_field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    struct ChVector<XlChartPlot::DefText> _field17;
    int _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
};

struct XlChartPlotAxis {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct XlChartTextFrame *_field3;
    struct XlChartLineStyle *_field4;
    struct XlChartLineStyle *_field5;
    struct XlChartLineStyle *_field6;
    struct XlChartLineStyle *_field7;
    struct XlChartFillStyle *_field8;
    struct XlChartPicF *_field9;
    struct XlChartTick *_field10;
    char *_field11;
    char *_field12;
    char *_field13;
    char *_field14;
    char *_field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    _Bool _field23;
    _Bool _field24;
};

struct XlChartSerAuxErrBar {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    double _field3;
    unsigned short _field4;
    int _field5;
    int _field6;
    unsigned char _field7;
};

struct XlChartSeries;

struct XlChartSeriesFormat {
    CDUnknownFunctionPointerType *_field1;
    struct XlChartLineStyle *_field2;
    struct XlChartFillStyle *_field3;
    struct XlChartMarkerStyle *_field4;
    struct XlChartPicF *_field5;
    char *_field6;
    char *_field7;
    unsigned int _field8;
    unsigned int _field9;
    int _field10;
    unsigned short _field11;
    unsigned short _field12;
    unsigned short _field13;
    int _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
};

struct XlChartShtProps {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    short _field3;
    int _field4;
    _Bool _field5;
};

struct XlChartTextFrame {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    char *_field16;
    unsigned int _field17;
    struct OcText *_field18;
    struct CsColour _field19;
    char *_field20;
    char *_field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    struct ChVector<XlChartTextFrame::TextRun> _field27;
    unsigned int _field28;
    unsigned int _field29;
    short _field30;
    short _field31;
    unsigned int _field32;
    short _field33;
    short _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct XlString *_field50;
};

struct XlChartTick;

struct XlChartTrendLine {
    CDUnknownFunctionPointerType *_field1;
    struct XlChartSeries *_field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    struct ChVector<XlChartSeriesFormat *> _field6;
    struct ChVector<XlChartSeriesFormat *> _field7;
    struct ChVector<XlChartCustomLabelText *> _field8;
    struct ChVector<unsigned int> _field9;
    struct ChVector<int> _field10;
    struct XlChartLinkedData *_field11;
    struct XlChartLinkedData *_field12;
    struct XlChartLinkedData *_field13;
    struct XlChartLinkedData *_field14;
    struct ChVector<XlChartCustomLegend *> _field15;
    CDUnknownFunctionPointerType *_field16;
    struct XlHeader _field17;
    double _field18;
    double _field19;
    double _field20;
    int _field21;
    unsigned char _field22;
    unsigned char _field23;
    unsigned char _field24;
};

struct XlCondFmt;

struct XlConditionalFormat {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
    struct XlCondFmt *_field3;
};

struct XlConditionalFormatTable {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<XlConditionalFormat *> _field2;
};

struct XlDV {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    int _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    unsigned char _field8;
    _Bool _field9;
    _Bool _field10;
    int _field11;
    struct XlString *_field12;
    struct XlString *_field13;
    struct XlString *_field14;
    struct XlString *_field15;
    struct XlSxFmla *_field16;
    struct XlSxFmla *_field17;
    struct ChVector<XlRef *> _field18;
};

struct XlDXf {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    struct XlDXfUserFmt *_field7;
    struct XlDXfFont *_field8;
    struct XlDXfAlign *_field9;
    struct XlDXfBorders *_field10;
    struct XlDXfPattern *_field11;
    struct XlDXfProtect *_field12;
};

struct XlDXfAlign {
    int _field1;
    int _field2;
    short _field3;
    short _field4;
    _Bool _field5;
    _Bool _field6;
    int _field7;
};

struct XlDXfBorders {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    short _field5;
    short _field6;
    short _field7;
    short _field8;
};

struct XlDXfFont {
    CDUnknownFunctionPointerType *_field1;
    struct XlString *_field2;
    int _field3;
    int _field4;
    short _field5;
    int _field6;
    int _field7;
    unsigned char _field8;
    unsigned char _field9;
    int _field10;
    int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    short _field19;
};

struct XlDXfPattern {
    int _field1;
    short _field2;
    short _field3;
};

struct XlDXfProtect {
    _Bool _field1;
    _Bool _field2;
};

struct XlDXfUserFmt {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    short _field3;
    struct XlString *_field4;
};

struct XlDateTimeFormat;

struct XlDocumentInfo {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    unsigned short _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
};

struct XlDocumentProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    short _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    int _field13;
    short _field14;
    short *_field15;
    struct OcText _field16;
    int _field17;
    struct XlRef _field18;
    _Bool _field19;
    char *_field20;
    unsigned int _field21;
};

struct XlDocumentProtection {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    short _field5;
    short _field6;
};

struct XlEshBinaryReader {
    CDUnknownFunctionPointerType *_field1;
    struct SsrwOOStream *_field2;
    struct EshParserVisitor *_field3;
    struct EshObjectFactory *_field4;
    unsigned int _field5;
    unsigned int _field6;
    struct ChStack<EshHeader> _field7;
    unsigned int _field8;
    struct EshHeader _field9;
    _Bool _field10;
    _Bool _field11;
    unsigned int _field12;
    struct XlReadStgStream *_field13;
};

struct XlEshBinaryWriter {
    CDUnknownFunctionPointerType *_field1;
    struct SsrwOOStream *_field2;
    struct EshRecordWriterVisitor *_field3;
    struct ChStack<int> _field4;
    struct ChStack<EshHeader> _field5;
    struct XlWriteStgStream *_field6;
    struct SsrwOOStream *_field7;
    struct ChStack<int> _field8;
    struct ChStack<EshHeader> _field9;
    struct ChStack<int> _field10;
    struct ChStack<EshHeader> _field11;
    struct ChStack<int> *_field12;
    struct ChStack<EshHeader> *_field13;
};

struct XlEshClientAnchor {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    unsigned short _field4;
    CsRect_0aefebc6 _field5;
    CsRect_0aefebc6 _field6;
};

struct XlEshObjectFactory {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
};

struct XlExtProp;

struct XlFileProtection {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    short _field4;
    struct OcText _field5;
    struct OcText _field6;
    unsigned short _field7;
    char *_field8;
    unsigned int _field9;
    char *_field10;
};

struct XlFmtPtg;

struct XlFont {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlString *_field3;
    short _field4;
    short _field5;
    short _field6;
    int _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    int _field14;
    unsigned char _field15;
    unsigned char _field16;
};

struct XlFontTable {
    CDUnknownFunctionPointerType *_field1;
    struct OcText _field2;
    short _field3;
    struct CsSimpleHeapVector<XlFont> _field4;
};

struct XlFormat {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlString *_field3;
    short _field4;
};

struct XlFormatInfo;

struct XlFormatParser;

struct XlFormatProcessor {
    struct XlFormatParser *_field1;
    _Bool _field2;
    struct XlDateTimeFormat *_field3;
    struct XlFormatInfo *_field4;
    struct XlFormatSection *_field5;
};

struct XlFormatSection {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    double _field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned short _field18;
    short _field19;
    unsigned short _field20;
    unsigned short _field21;
    unsigned short _field22;
    unsigned short _field23;
    unsigned short _field24;
    unsigned short _field25;
    int _field26;
    struct OcText *_field27;
    struct OcText *_field28;
    _Bool _field29;
    short _field30;
    short _field31;
    short _field32;
    struct ChVector<XlFmtPtg *> _field33;
};

struct XlFormulaInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct OcText *_field3;
    char *_field4;
    unsigned int _field5;
    short _field6;
    struct XlShrFmla *_field7;
    struct XlArray *_field8;
    struct XlTable *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
};

struct XlFormulaParser;

struct XlFormulaProcessor {
    CDUnknownFunctionPointerType *_field1;
    struct XlFormulaParser *_field2;
    struct XlBaseFormulaTable *_field3;
    struct ChVector<CsString *> _field4;
    struct XlNameTable *_field5;
    ChVector_cc6fdd32 *_field6;
    struct XlLinkTable *_field7;
    unsigned int _field8;
    unsigned int _field9;
    char _field10[64];
    unsigned short *_field11;
    char *_field12;
    _Bool _field13;
    unsigned int _field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct XlGraphicsInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    short _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    struct ChVector<XlGraphicsInfo::XlObjData *> _field8;
    _Bool _field9;
    int _field10;
    struct XlString *_field11;
    int _field12;
    int _field13;
    int _field14;
    _Bool _field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned short _field18;
    char *_field19;
    unsigned int _field20;
    unsigned int _field21;
    _Bool _field22;
    unsigned int _field23;
    unsigned int _field24;
    int _field25;
    int _field26;
    _Bool _field27;
    struct XlString *_field28;
};

struct XlHLink {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlRef *_field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    struct XlString *_field7;
    struct XlString *_field8;
    struct XlString *_field9;
    struct XlString *_field10;
    struct XlString *_field11;
    unsigned short _field12;
};

struct XlHLinkToolTip {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlRef *_field3;
    struct XlString *_field4;
};

struct XlHeader {
    unsigned int _field1;
    short _field2;
    unsigned char _field3;
};

struct XlIndex;

struct XlLink;

struct XlLinkLookupTable {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct ChVector<XlXti *> _field3;
};

struct XlLinkTable {
    CDUnknownFunctionPointerType *_field1;
    struct XlLinkLookupTable _field2;
    struct ChVector<XlLink *> _field3;
};

struct XlName {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlString *_field3;
    struct XlString *_field4;
    struct XlString *_field5;
    struct XlString *_field6;
    struct XlString *_field7;
    char *_field8;
    short _field9;
    short _field10;
    short _field11;
    short _field12;
    unsigned char _field13;
    unsigned char _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    int _field22;
};

struct XlNameTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
    struct OcText _field3[14];
};

struct XlNoteTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
};

struct XlObjData;

struct XlObjectFactory {
    CDUnknownFunctionPointerType *_field1;
    struct XlEshObjectFactory *_field2;
};

struct XlPageProperties {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    struct OcText *_field6;
    struct OcText *_field7;
    _Bool _field8;
    _Bool _field9;
    short _field10;
    short _field11;
    short _field12;
    short _field13;
    short _field14;
    _Bool _field15;
    int _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    short _field23;
    short _field24;
    short _field25;
    double _field26;
    double _field27;
    short _field28;
};

struct XlPane;

struct XlParserVisitor;

struct XlPhoneticInfo;

struct XlPtg {
    char *_field1;
    int _field2;
    unsigned int _field3;
    unsigned short _field4;
};

struct XlReadStgStream;

struct XlRecord;

struct XlRef {
    unsigned short _field1;
    unsigned short _field2;
    short _field3;
    short _field4;
    _Bool _field5;
};

struct XlRow;

struct XlRowBlock {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<XlCellRow *> _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct XlRowProperties;

struct XlScl;

struct XlSelection;

struct XlSheetInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
};

struct XlSheetInfoTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
    char *_field3;
};

struct XlSheetPresentation {
    CDUnknownFunctionPointerType *_field1;
    struct XlWindow2 *_field2;
    struct XlScl *_field3;
    struct XlPane *_field4;
    struct XlSelection *_field5[4];
};

struct XlShrFmla;

struct XlSortInfo {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    unsigned char _field8;
    struct OcText _field9;
    struct OcText _field10;
    struct OcText _field11;
};

struct XlStrTableState;

struct XlString {
    CDUnknownFunctionPointerType *_field1;
    struct OcText _field2;
    struct ChVector<short *> _field3;
    struct XlPhoneticInfo *_field4;
    int _field5;
    short *_field6;
};

struct XlStringExtractor;

struct XlStyleTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
    struct OcText _field3[10];
};

struct XlSubstreamProperties {
    CDUnknownFunctionPointerType *_field1;
    struct XlSheetInfo _field2;
    struct XlPageProperties _field3;
    struct XlCellTableInfo _field4;
    int _field5;
    int _field6;
};

struct XlSxFmla {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    unsigned short _field3;
    unsigned short _field4;
    char *_field5;
};

struct XlTable;

struct XlWindow2 {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    int _field3;
    short _field4;
    short _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    unsigned short _field18;
    short _field19;
};

struct XlWorksheetProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    int _field3;
    unsigned short _field4;
    _Bool _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned short _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    _Bool _field25;
    short _field26;
    struct ChVector<XlBrk *> _field27;
    struct ChVector<XlBrk *> _field28;
    struct OcText _field29;
};

struct XlWorksheetProtection {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    short _field20;
};

struct XlWriteStgStream;

struct XlWriterVisitor;

struct XlXf {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    short _field3;
    short _field4;
    short _field5;
    int _field6;
    int _field7;
    unsigned char _field8;
    unsigned char _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    unsigned char _field18;
    unsigned char _field19;
    unsigned char _field20;
    unsigned char _field21;
    unsigned char _field22;
    unsigned char _field23;
    unsigned char _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
};

struct XlXfExt {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    _Bool _field3;
    unsigned short _field4;
    struct ChVector<XlExtProp *> _field5;
};

struct XlXti;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _RootStorage;

struct _SSRW_BLOB {
    unsigned int cbSize;
    char *pData;
};

struct _SSRW_CLIPDATA;

struct _SSRW_FILETIME {
    unsigned int dwLowDateTime;
    unsigned int dwHighDateTime;
};

struct _SSRW_GUID {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned char _field4[8];
};

struct _SsrwOO_GUID {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned char _field4[8];
};

struct _SsrwPropVariant {
    unsigned short vt;
    union {
        unsigned char cVal;
        short iVal;
        int lVal;
        double dblVal;
        unsigned short *bstrVal;
        struct _SSRW_BLOB blob;
        char *pszVal;
        struct _SSRW_FILETIME filetime;
        struct _SSRW_CLIPDATA *pclipdata;
        short boolVal;
    } v;
};

struct _StgInfo {
    unsigned short *_field1;
    int _field2;
    unsigned int _field3;
    unsigned long long _field4;
    long long _field5;
    long long _field6;
    int _field7;
    struct _SSRW_GUID _field8;
};

struct _Storage;

struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*> *_field1;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct _tagLevelItem {
    struct _tagLevelItem *_field1;
    struct _tagOctreeNode *_field2;
};

struct _tagOctree {
    struct _tagOctreeNode *_field1;
    unsigned short _field2;
    unsigned short _field3;
    struct _tagRgbQuad *_field4;
    struct _tagLevelItem *_field5[9];
};

struct _tagOctreeNode {
    struct _tagOctreeNode *_field1;
    struct _tagOctreeNode *_field2[8];
    unsigned int _field3;
    struct _tagFPRgbTriple {
        unsigned int _field1;
        unsigned int _field2;
        unsigned int _field3;
    } _field4;
    unsigned short _field5;
};

struct _tagRgbQuad {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlBuf;

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct basic_istream<char, std::__1::char_traits<char>>;

struct basic_ostream<char, std::__1::char_traits<char>>;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>>;

struct deque<TSCEEvaluationContext *, std::__1::allocator<TSCEEvaluationContext *>> {
    struct __split_buffer<TSCEEvaluationContext **, std::__1::allocator<TSCEEvaluationContext **>> {
        struct TSCEEvaluationContext ***__first_;
        struct TSCEEvaluationContext ***__begin_;
        struct TSCEEvaluationContext ***__end_;
        struct __compressed_pair<TSCEEvaluationContext ***, std::__1::allocator<TSCEEvaluationContext **>> {
            struct TSCEEvaluationContext ***__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSCEEvaluationContext *>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<_xmlNode *, std::__1::allocator<_xmlNode *>> {
    struct __split_buffer<_xmlNode **, std::__1::allocator<_xmlNode **>> {
        struct _xmlNode ***__first_;
        struct _xmlNode ***__begin_;
        struct _xmlNode ***__end_;
        struct __compressed_pair<_xmlNode ***, std::__1::allocator<_xmlNode **>> {
            struct _xmlNode ***__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<_xmlNode *>> {
        unsigned long long __value_;
    } __size_;
};

struct hash_map<id, GSSPMessageBase *, GSUPointerHasher, std::__1::equal_to<id>, std::__1::allocator<std::__1::pair<const id, GSSPMessageBase *>>> {
    struct __hash_table<std::__1::pair<id, GSSPMessageBase *>, __gnu_cxx::__hash_map_hasher<std::__1::pair<id, GSSPMessageBase *>, GSUPointerHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<id, GSSPMessageBase *>, std::__1::equal_to<id>, true>, std::__1::allocator<std::__1::pair<id, GSSPMessageBase *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<id, GSSPMessageBase *>, GSUPointerHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<id, GSSPMessageBase *>, std::__1::equal_to<id>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_map<std::__1::basic_string<char>, GSSPMessageBase *, GSUCppStringHasher, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, GSSPMessageBase *>>> {
    struct __hash_table<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, __gnu_cxx::__hash_map_hasher<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, GSUCppStringHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, GSUCppStringHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct map<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>>> {
    struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, TSCECellCoordSet>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>> {
    struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>, std::__1::less<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>>> {
    struct __tree<std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<TSUCellCoord>, true>, std::__1::allocator<std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<TSUCellCoord>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, GSUNSWrapper<GSSPMessageBase>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GSUNSWrapper<GSSPMessageBase>>>> {
    struct __tree<std::__1::__value_type<int, GSUNSWrapper<GSSPMessageBase>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, GSUNSWrapper<GSSPMessageBase>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, GSUNSWrapper<GSSPMessageBase>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, GSUNSWrapper<GSSPMessageBase>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, GSUNSWrapper<GSSPMessageBase>>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, unsigned long, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, unsigned long>>> {
    struct __tree<std::__1::__value_type<int, unsigned long>, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned long>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned long>, std::__1::less<int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<long, unsigned long, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, unsigned long>>> {
    struct __tree<std::__1::__value_type<long, unsigned long>, std::__1::__map_value_compare<long, std::__1::__value_type<long, unsigned long>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long, std::__1::__value_type<long, unsigned long>, std::__1::less<long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value>>> {
    struct __tree<std::__1::__value_type<unsigned int, EshOpt::Value>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, EshOpt::Value>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, EshOpt::Value>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, XlChartEnteredData *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, XlChartEnteredData *>>> {
    struct __tree<std::__1::__value_type<unsigned int, XlChartEnteredData *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, XlChartEnteredData *>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, XlChartEnteredData *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, XlChartEnteredData *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, XlChartEnteredData *>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, int, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int>>> {
    struct __tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> {
    struct __tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned short, TSUIndexSet, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSUIndexSet>>> {
    struct __tree<std::__1::__value_type<unsigned short, TSUIndexSet>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, TSUIndexSet>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, TSUIndexSet>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, TSUIndexSet>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, TSUIndexSet>, std::__1::less<unsigned short>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct pair<TSCEASTNodeArray *, int>;

struct pair<TSCEValue, TSUCellCoord>;

struct set<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct __tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, GQUtility::NSObjectComparator<GQDWrapPoint>> {
            unsigned long long _field1;
            struct NSObjectComparator<GQDWrapPoint> _field2;
        } _field3;
    } _field1;
};

struct set<TSUCellCoord, std::__1::less<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
    struct __tree<TSUCellCoord, std::__1::less<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUCellCoord, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<TSUCellCoord>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
    struct __tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<TSCEAbstractVector> {
    struct TSCEAbstractVector *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TSCEValue> {
    struct TSCEValue *_field1;
    struct __shared_weak_count *_field2;
};

struct stack<TSCEEvaluationContext *, std::__1::deque<TSCEEvaluationContext *, std::__1::allocator<TSCEEvaluationContext *>>> {
    struct deque<TSCEEvaluationContext *, std::__1::allocator<TSCEEvaluationContext *>> c;
};

struct stack<_xmlNode *, std::__1::deque<_xmlNode *, std::__1::allocator<_xmlNode *>>> {
    struct deque<_xmlNode *, std::__1::allocator<_xmlNode *>> c;
};

struct tagChWinTime {
    unsigned int _field1;
    unsigned int _field2;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<id, GSSPMessageBase *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<std::__1::basic_string<char>, GSSPMessageBase *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<NSString *, unsigned int, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, unsigned int>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, unsigned int>, std::__1::hash<NSString *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, unsigned int>, std::__1::equal_to<NSString *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, unsigned int>, std::__1::hash<NSString *>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, unsigned int>, std::__1::equal_to<NSString *>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>, std::__1::hash<TSCEFormulaRangeContext>, std::__1::equal_to<TSCEFormulaRangeContext>, std::__1::allocator<std::__1::pair<const TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>>>;

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>>>;

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, NSString *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSString *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, NSString *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::hash<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, TSCEValue, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSCEValue>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, TSCEValue>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::hash<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSCECategoryRef, std::__1::hash<TSCECategoryRef>, std::__1::equal_to<TSCECategoryRef>, std::__1::allocator<TSCECategoryRef>>;

struct unordered_set<TSCEReferenceType, std::__1::hash<TSCEReferenceType>, std::__1::equal_to<TSCEReferenceType>, std::__1::allocator<TSCEReferenceType>>;

struct unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __hash_table<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>, std::__1::allocator<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUUUID>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
    struct __hash_table<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUCellCoord>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TSUCellCoord>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    struct CGPoint *__begin_;
    struct CGPoint *__end_;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        struct CGPoint *__value_;
    } __end_cap_;
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *_field1;
    struct CGRect *_field2;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *_field1;
    } _field3;
};

struct vector<GQUtility::ObjcSharedPtr<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    struct ObjcSharedPtr<GQDWrapPoint> *_field2;
    struct __compressed_pair<GQUtility::ObjcSharedPtr<GQDWrapPoint>*, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    } _field3;
};

struct vector<GSSPDeserializationContext::SubContext, std::__1::allocator<GSSPDeserializationContext::SubContext>> {
    struct SubContext *_field1;
    struct SubContext *_field2;
    struct __compressed_pair<GSSPDeserializationContext::SubContext *, std::__1::allocator<GSSPDeserializationContext::SubContext>> {
        struct SubContext *_field1;
    } _field3;
};

struct vector<GSUNSWrapper<GSSPChartMediatorAxisData>, std::__1::allocator<GSUNSWrapper<GSSPChartMediatorAxisData>>> {
    struct GSUNSWrapper<GSSPChartMediatorAxisData> *__begin_;
    struct GSUNSWrapper<GSSPChartMediatorAxisData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartMediatorAxisData>*, std::__1::allocator<GSUNSWrapper<GSSPChartMediatorAxisData>>> {
        struct GSUNSWrapper<GSSPChartMediatorAxisData> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<NSString>, std::__1::allocator<GSUNSWrapper<NSString>>> {
    struct GSUNSWrapper<NSString> *__begin_;
    struct GSUNSWrapper<NSString> *__end_;
    struct __compressed_pair<GSUNSWrapper<NSString>*, std::__1::allocator<GSUNSWrapper<NSString>>> {
        struct GSUNSWrapper<NSString> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TNSheet>, std::__1::allocator<GSUNSWrapper<TNSheet>>> {
    struct GSUNSWrapper<TNSheet> *__begin_;
    struct GSUNSWrapper<TNSheet> *__end_;
    struct __compressed_pair<GSUNSWrapper<TNSheet>*, std::__1::allocator<GSUNSWrapper<TNSheet>>> {
        struct GSUNSWrapper<TNSheet> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSDDrawableInfo>, std::__1::allocator<GSUNSWrapper<TSDDrawableInfo>>> {
    struct GSUNSWrapper<TSDDrawableInfo> *__begin_;
    struct GSUNSWrapper<TSDDrawableInfo> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDDrawableInfo>*, std::__1::allocator<GSUNSWrapper<TSDDrawableInfo>>> {
        struct GSUNSWrapper<TSDDrawableInfo> *__value_;
    } __end_cap_;
};

struct vector<GSUNSWrapper<TSWPStorage>, std::__1::allocator<GSUNSWrapper<TSWPStorage>>> {
    struct GSUNSWrapper<TSWPStorage> *__begin_;
    struct GSUNSWrapper<TSWPStorage> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPStorage>*, std::__1::allocator<GSUNSWrapper<TSWPStorage>>> {
        struct GSUNSWrapper<TSWPStorage> *__value_;
    } __end_cap_;
};

struct vector<OADTableCell *, std::__1::allocator<OADTableCell *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<OADTableCell *__strong *, std::__1::allocator<OADTableCell *>> {
        id *_field1;
    } _field3;
};

struct vector<OADTablePartStyle *, std::__1::allocator<OADTablePartStyle *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<OADTablePartStyle *__strong *, std::__1::allocator<OADTablePartStyle *>> {
        id *_field1;
    } _field3;
};

struct vector<TNChartFormulaType, std::__1::allocator<TNChartFormulaType>> {
    unsigned long long *_field1;
    unsigned long long *_field2;
    struct __compressed_pair<TNChartFormulaType *, std::__1::allocator<TNChartFormulaType>> {
        unsigned long long *_field1;
    } _field3;
};

struct vector<TSCECategoryRef, std::__1::allocator<TSCECategoryRef>> {
    struct TSCECategoryRef *_field1;
    struct TSCECategoryRef *_field2;
    struct __compressed_pair<TSCECategoryRef *, std::__1::allocator<TSCECategoryRef>> {
        struct TSCECategoryRef *_field1;
    } _field3;
};

struct vector<TSCECellRef, std::__1::allocator<TSCECellRef>> {
    struct TSCECellRef *__begin_;
    struct TSCECellRef *__end_;
    struct __compressed_pair<TSCECellRef *, std::__1::allocator<TSCECellRef>> {
        struct TSCECellRef *__value_;
    } __end_cap_;
};

struct vector<TSCERangeCoordinate, std::__1::allocator<TSCERangeCoordinate>> {
    struct TSCERangeCoordinate *__begin_;
    struct TSCERangeCoordinate *__end_;
    struct __compressed_pair<TSCERangeCoordinate *, std::__1::allocator<TSCERangeCoordinate>> {
        struct TSCERangeCoordinate *__value_;
    } __end_cap_;
};

struct vector<TSCERangeRef, std::__1::allocator<TSCERangeRef>> {
    struct TSCERangeRef *_field1;
    struct TSCERangeRef *_field2;
    struct __compressed_pair<TSCERangeRef *, std::__1::allocator<TSCERangeRef>> {
        struct TSCERangeRef *_field1;
    } _field3;
};

struct vector<TSCEValue, std::__1::allocator<TSCEValue>> {
    struct TSCEValue *_field1;
    struct TSCEValue *_field2;
    struct __compressed_pair<TSCEValue *, std::__1::allocator<TSCEValue>> {
        struct TSCEValue *_field1;
    } _field3;
};

struct vector<TSDStroke *, std::__1::allocator<TSDStroke *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<TSDStroke *__strong *, std::__1::allocator<TSDStroke *>> {
        id *_field1;
    } _field3;
};

struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    UUIDData_5fbc143e *__begin_;
    UUIDData_5fbc143e *__end_;
    struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        UUIDData_5fbc143e *__value_;
    } __end_cap_;
};

struct vector<TSUCellCoord, std::__1::allocator<TSUCellCoord>> {
    struct TSUCellCoord *__begin_;
    struct TSUCellCoord *__end_;
    struct __compressed_pair<TSUCellCoord *, std::__1::allocator<TSUCellCoord>> {
        struct TSUCellCoord *__value_;
    } __end_cap_;
};

struct vector<TSWPKind, std::__1::allocator<TSWPKind>> {
    unsigned char *_field1;
    unsigned char *_field2;
    struct __compressed_pair<TSWPKind *, std::__1::allocator<TSWPKind>> {
        unsigned char *_field1;
    } _field3;
};

struct vector<const SDChildDescription *, std::__1::allocator<const SDChildDescription *>> {
    CDStruct_183601bc **_field1;
    CDStruct_183601bc **_field2;
    struct __compressed_pair<const SDChildDescription **, std::__1::allocator<const SDChildDescription *>> {
        CDStruct_183601bc **_field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__value_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
};

struct vector<id, std::__1::allocator<id>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<__strong id *, std::__1::allocator<id>> {
        id *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *_field1;
    } _field3;
};

struct vector<std::__1::pair<TSCEASTNodeArray *, int>, std::__1::allocator<std::__1::pair<TSCEASTNodeArray *, int>>> {
    struct pair<TSCEASTNodeArray *, int> *__begin_;
    struct pair<TSCEASTNodeArray *, int> *__end_;
    struct __compressed_pair<std::__1::pair<TSCEASTNodeArray *, int>*, std::__1::allocator<std::__1::pair<TSCEASTNodeArray *, int>>> {
        struct pair<TSCEASTNodeArray *, int> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<TSCEValue, TSUCellCoord>, std::__1::allocator<std::__1::pair<TSCEValue, TSUCellCoord>>> {
    struct pair<TSCEValue, TSUCellCoord> *_field1;
    struct pair<TSCEValue, TSUCellCoord> *_field2;
    struct __compressed_pair<std::__1::pair<TSCEValue, TSUCellCoord>*, std::__1::allocator<std::__1::pair<TSCEValue, TSUCellCoord>>> {
        struct pair<TSCEValue, TSUCellCoord> *_field1;
    } _field3;
};

struct vector<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::allocator<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>> {
    set_531c353a *_field1;
    set_531c353a *_field2;
    struct __compressed_pair<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>*, std::__1::allocator<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>> {
        set_531c353a *_field1;
    } _field3;
};

struct vector<std::__1::unordered_map<NSString *, unsigned int, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned int>>>, std::__1::allocator<std::__1::unordered_map<NSString *, unsigned int, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned int>>>>> {
    struct unordered_map<NSString *, unsigned int, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned int>>> *_field1;
    struct unordered_map<NSString *, unsigned int, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned int>>> *_field2;
    struct __compressed_pair<std::__1::unordered_map<NSString *, unsigned int, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned int>>>*, std::__1::allocator<std::__1::unordered_map<NSString *, unsigned int, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned int>>>>> {
        struct unordered_map<NSString *, unsigned int, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned int>>> *_field1;
    } _field3;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__value_;
    } __end_cap_;
};

struct yy_buffer_state;

#pragma mark Typedef'd Structures

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
} CDStruct_a06f635e;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
} CDStruct_c0454aff;

typedef struct {
    unsigned int m_data1;
    unsigned short m_data2;
    unsigned short m_data3;
    unsigned char m_data4[8];
} CDStruct_214f2dba;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned short mColumn;
    unsigned short mRow;
} CDStruct_e2a21eff;

typedef struct {
    char *_field1;
    char *_field2;
    Class _field3;
} CDStruct_829d3f0e;

typedef struct {
    unsigned int :16;
    unsigned int :8;
    unsigned int :3;
    unsigned int :1;
    unsigned int :1;
} CDStruct_c5df2956;

typedef struct {
    unsigned int :1;
    int _field1;
    int _field2;
    int _field3;
} CDStruct_ca9d5fee;

typedef struct {
    unsigned int :8;
    unsigned int :8;
    unsigned int :1;
} CDStruct_ffb10de0;

typedef struct {
    unsigned int :8;
} CDStruct_b1f6ddd5;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    long long _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
} CDStruct_90be15af;

typedef struct {
    long long _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_70d275a4;

typedef struct CDStruct_183601bc;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    CDStruct_c3b9c2ee _field7;
    CDStruct_c3b9c2ee _field8;
    double _field9;
    double _field10;
    char _field11;
    char _field12;
} CDStruct_cdc7dc6e;

typedef struct {
    struct TSUCellCoord topLeft;
    struct TSUCellCoord bottomRight;
} CDStruct_971f540e;

typedef struct {
    unsigned int _field1;
    union {
        CDStruct_c5df2956 _field1;
        CDStruct_b1f6ddd5 _field2;
        CDStruct_ffb10de0 _field3;
        struct {
            unsigned int :1;
            unsigned int :1;
            id _field1;
        } _field4;
        CDStruct_ca9d5fee _field5;
        struct {
            id _field1;
            id _field2;
            unsigned int _field3;
            unsigned char _field4;
        } _field6;
    } _field2;
} CDStruct_a4ff7456;

// Template types
typedef struct ChVector<OcText> {
    struct OcText *_field1;
    struct OcText *_field2;
    struct __compressed_pair<OcText *, ChAllocator<OcText>> {
        struct OcText *_field1;
    } _field3;
} ChVector_cc6fdd32;

typedef struct ChVector<XlPtg *> {
    struct XlPtg **_field1;
    struct XlPtg **_field2;
    struct __compressed_pair<XlPtg **, ChAllocator<XlPtg *>> {
        struct XlPtg **_field1;
    } _field3;
} ChVector_1f909c3e;

typedef struct CsPoint<int> {
    int _field1[2];
} CsPoint_c846a6ec;

typedef struct CsRect<int> {
    int _field1[4];
} CsRect_0aefebc6;

typedef struct EshTablePropVal<EshComputedRect> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshComputedRect> _field2;
} EshTablePropVal_515d12a1;

typedef struct EshTablePropVal<EshFormula> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshFormula> _field2;
} EshTablePropVal_31f0d5cf;

typedef struct EshTablePropVal<EshPathCommand> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshPathCommand> _field2;
} EshTablePropVal_68d7eaa9;

typedef struct UUIDData<TSP::UUIDData> {
    union {
        unsigned char _uuid[16];
        struct {
            unsigned char byte0;
            unsigned char byte1;
            unsigned char byte2;
            unsigned char byte3;
            unsigned char byte4;
            unsigned char byte5;
            unsigned char byte6;
            unsigned char byte7;
            unsigned char byte8;
            unsigned char byte9;
            unsigned char byte10;
            unsigned char byte11;
            unsigned char byte12;
            unsigned char byte13;
            unsigned char byte14;
            unsigned char byte15;
        } _cfuuid;
        struct {
            unsigned long long _lower;
            unsigned long long _upper;
        } ;
    } ;
} UUIDData_5fbc143e;

typedef struct set<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct __tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, GQUtility::NSObjectComparator<GQDWrapPoint>> {
            unsigned long long _field1;
            struct NSObjectComparator<GQDWrapPoint> _field2;
        } _field3;
    } _field1;
} set_3d57cb01;

typedef struct set<TSUCellCoord, std::__1::less<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
    struct __tree<TSUCellCoord, std::__1::less<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUCellCoord, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<TSUCellCoord>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} set_ad2bbc7b;

typedef struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
    struct __tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_531c353a;

typedef struct unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __hash_table<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>, std::__1::allocator<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUUUID>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_233cded8;

typedef struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    struct CGPoint *__begin_;
    struct CGPoint *__end_;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        struct CGPoint *__value_;
    } __end_cap_;
} vector_2e7754b6;

typedef struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *_field1;
    struct CGRect *_field2;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *_field1;
    } _field3;
} vector_ea45b3ba;

typedef struct vector<GQUtility::ObjcSharedPtr<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    struct ObjcSharedPtr<GQDWrapPoint> *_field2;
    struct __compressed_pair<GQUtility::ObjcSharedPtr<GQDWrapPoint>*, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    } _field3;
} vector_dadce35e;

typedef struct vector<GSUNSWrapper<GSSPChartMediatorAxisData>, std::__1::allocator<GSUNSWrapper<GSSPChartMediatorAxisData>>> {
    struct GSUNSWrapper<GSSPChartMediatorAxisData> *__begin_;
    struct GSUNSWrapper<GSSPChartMediatorAxisData> *__end_;
    struct __compressed_pair<GSUNSWrapper<GSSPChartMediatorAxisData>*, std::__1::allocator<GSUNSWrapper<GSSPChartMediatorAxisData>>> {
        struct GSUNSWrapper<GSSPChartMediatorAxisData> *__value_;
    } __end_cap_;
} vector_03f981f7;

typedef struct vector<GSUNSWrapper<NSString>, std::__1::allocator<GSUNSWrapper<NSString>>> {
    struct GSUNSWrapper<NSString> *__begin_;
    struct GSUNSWrapper<NSString> *__end_;
    struct __compressed_pair<GSUNSWrapper<NSString>*, std::__1::allocator<GSUNSWrapper<NSString>>> {
        struct GSUNSWrapper<NSString> *__value_;
    } __end_cap_;
} vector_95cc1646;

typedef struct vector<GSUNSWrapper<TNSheet>, std::__1::allocator<GSUNSWrapper<TNSheet>>> {
    struct GSUNSWrapper<TNSheet> *__begin_;
    struct GSUNSWrapper<TNSheet> *__end_;
    struct __compressed_pair<GSUNSWrapper<TNSheet>*, std::__1::allocator<GSUNSWrapper<TNSheet>>> {
        struct GSUNSWrapper<TNSheet> *__value_;
    } __end_cap_;
} vector_fdea956d;

typedef struct vector<GSUNSWrapper<TSDDrawableInfo>, std::__1::allocator<GSUNSWrapper<TSDDrawableInfo>>> {
    struct GSUNSWrapper<TSDDrawableInfo> *__begin_;
    struct GSUNSWrapper<TSDDrawableInfo> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSDDrawableInfo>*, std::__1::allocator<GSUNSWrapper<TSDDrawableInfo>>> {
        struct GSUNSWrapper<TSDDrawableInfo> *__value_;
    } __end_cap_;
} vector_de27e5be;

typedef struct vector<GSUNSWrapper<TSWPStorage>, std::__1::allocator<GSUNSWrapper<TSWPStorage>>> {
    struct GSUNSWrapper<TSWPStorage> *__begin_;
    struct GSUNSWrapper<TSWPStorage> *__end_;
    struct __compressed_pair<GSUNSWrapper<TSWPStorage>*, std::__1::allocator<GSUNSWrapper<TSWPStorage>>> {
        struct GSUNSWrapper<TSWPStorage> *__value_;
    } __end_cap_;
} vector_91c4f456;

typedef struct vector<TNChartFormulaType, std::__1::allocator<TNChartFormulaType>> {
    unsigned long long *_field1;
    unsigned long long *_field2;
    struct __compressed_pair<TNChartFormulaType *, std::__1::allocator<TNChartFormulaType>> {
        unsigned long long *_field1;
    } _field3;
} vector_2bba1c52;

typedef struct vector<TSCECategoryRef, std::__1::allocator<TSCECategoryRef>> {
    struct TSCECategoryRef *_field1;
    struct TSCECategoryRef *_field2;
    struct __compressed_pair<TSCECategoryRef *, std::__1::allocator<TSCECategoryRef>> {
        struct TSCECategoryRef *_field1;
    } _field3;
} vector_2431c21e;

typedef struct vector<TSCECellRef, std::__1::allocator<TSCECellRef>> {
    struct TSCECellRef *__begin_;
    struct TSCECellRef *__end_;
    struct __compressed_pair<TSCECellRef *, std::__1::allocator<TSCECellRef>> {
        struct TSCECellRef *__value_;
    } __end_cap_;
} vector_4115f7f8;

typedef struct vector<TSCERangeRef, std::__1::allocator<TSCERangeRef>> {
    struct TSCERangeRef *_field1;
    struct TSCERangeRef *_field2;
    struct __compressed_pair<TSCERangeRef *, std::__1::allocator<TSCERangeRef>> {
        struct TSCERangeRef *_field1;
    } _field3;
} vector_5a16d233;

typedef struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    UUIDData_5fbc143e *__begin_;
    UUIDData_5fbc143e *__end_;
    struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        UUIDData_5fbc143e *__value_;
    } __end_cap_;
} vector_4dc5f307;

typedef struct vector<TSWPKind, std::__1::allocator<TSWPKind>> {
    unsigned char *_field1;
    unsigned char *_field2;
    struct __compressed_pair<TSWPKind *, std::__1::allocator<TSWPKind>> {
        unsigned char *_field1;
    } _field3;
} vector_a1a92a66;

typedef struct vector<const SDChildDescription *, std::__1::allocator<const SDChildDescription *>> {
    CDStruct_183601bc **_field1;
    CDStruct_183601bc **_field2;
    struct __compressed_pair<const SDChildDescription **, std::__1::allocator<const SDChildDescription *>> {
        CDStruct_183601bc **_field1;
    } _field3;
} vector_e71f4449;

typedef struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
} vector_f9ed6fc8;

typedef struct vector<std::__1::pair<TSCEValue, TSUCellCoord>, std::__1::allocator<std::__1::pair<TSCEValue, TSUCellCoord>>> {
    struct pair<TSCEValue, TSUCellCoord> *_field1;
    struct pair<TSCEValue, TSUCellCoord> *_field2;
    struct __compressed_pair<std::__1::pair<TSCEValue, TSUCellCoord>*, std::__1::allocator<std::__1::pair<TSCEValue, TSUCellCoord>>> {
        struct pair<TSCEValue, TSUCellCoord> *_field1;
    } _field3;
} vector_06892659;

typedef struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__value_;
    } __end_cap_;
} vector_06e666a8;

#pragma mark Named Unions

union EFData {
    struct {
        unsigned long long _field1;
        unsigned long long _field2;
        char _field3;
    } _field1;
    struct {
        unsigned long long _field1;
        void *_field2;
    } _field2;
    struct {
        unsigned int _field1;
        unsigned int _field2;
        char _field3;
        char _field4;
    } _field3;
};

union Value {
    struct RGB _field1;
    unsigned short _field2;
    unsigned short _field3;
    struct AdjustedColor _field4;
};

union YYSTYPE {
    struct EFRefTok _field1;
    id _field2;
    unsigned long long _field3;
    int _field4;
    double _field5;
    id _field6;
    struct EFStrTok _field7;
};

