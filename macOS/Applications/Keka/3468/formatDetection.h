//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@interface formatDetection : NSObject
{
}

+ (int)isCab:(id)arg1;
+ (int)isCab:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isMsi:(id)arg1;
+ (int)isMsi:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isExe:(id)arg1;
+ (int)isExe:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isDmg:(id)arg1;
+ (int)isDmg:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isIso:(id)arg1;
+ (int)isIso:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isLz4:(id)arg1;
+ (int)isLz4:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isXar:(id)arg1;
+ (int)isXar:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isZ:(id)arg1;
+ (int)isZ:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isLha:(id)arg1;
+ (int)isLha:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isAce:(id)arg1;
+ (int)isAce:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isCpio:(id)arg1;
+ (int)isCpio:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isRar:(id)arg1;
+ (int)isRar:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isLzip:(id)arg1;
+ (int)isLzip:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isXz:(id)arg1;
+ (int)isXz:(id)arg1 fromBytes:(const char *)arg2;
+ (int)is7z:(id)arg1;
+ (int)is7z:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isZip:(id)arg1;
+ (int)isZip:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isBzip:(id)arg1;
+ (int)isBzip:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isGzip:(id)arg1;
+ (int)isGzip:(id)arg1 fromBytes:(const char *)arg2;
+ (int)isTar:(id)arg1;
+ (int)isTar:(id)arg1 fromBytes:(const char *)arg2;
+ (BOOL)isTarball:(id)arg1;
+ (id)formatName:(int)arg1;
+ (int)autoDetectFormat:(id)arg1;
+ (const char *)checkDataBytes:(id)arg1 withBytes:(const char *)arg2 needsLenght:(int)arg3;
+ (const char *)checkDataBytes:(id)arg1 withBytes:(const char *)arg2 needsLenght:(int)arg3 atOffset:(unsigned long long)arg4;
+ (const char *)checkDataBytes:(id)arg1 withBytes:(const char *)arg2 needsLenght:(int)arg3 atOffset:(unsigned long long)arg4 fromEnd:(BOOL)arg5;
+ (id)getHeader:(id)arg1;
+ (id)getHeader:(id)arg1 readBytes:(int)arg2;
+ (const char *)getFileBytes:(id)arg1 readBytes:(int)arg2;
+ (const char *)getFileBytes:(id)arg1 readBytes:(int)arg2 atOffset:(unsigned long long)arg3;
+ (const char *)getFileBytes:(id)arg1 readBytes:(int)arg2 atOffset:(unsigned long long)arg3 fromEnd:(BOOL)arg4;

@end

