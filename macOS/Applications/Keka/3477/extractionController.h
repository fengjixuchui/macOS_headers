//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "taskMulti.h"

#import "NSOpenSavePanelDelegate.h"

@class NSArray, NSButton, NSData, NSImageView, NSPipe, NSPopUpButton, NSProgressIndicator, NSSecureTextField, NSString, NSTask, NSTextField, NSTimer, NSView;

@interface extractionController : taskMulti <NSOpenSavePanelDelegate>
{
    id activity;
    id activeOpenSheet;
    _Bool hasFileAccess;
    NSArray *filesList;
    NSArray *temporaryAccess;
    NSString *currentFileLocation;
    int binary;
    BOOL skipUNAR;
    long long filesCount;
    long long currentFile;
    int formatDetected;
    BOOL isTarball;
    int currentProgress;
    BOOL onPause;
    BOOL onManualPause;
    BOOL passwordControl;
    BOOL passwordSended;
    NSString *usedPassword;
    BOOL encodingControl;
    NSString *encoding;
    NSData *encodedStringData;
    BOOL onQueue;
    BOOL onQueueDestinationSelected;
    BOOL askingVolumeParts;
    BOOL skipError;
    BOOL isCancelled;
    BOOL someError;
    BOOL headerWarning;
    int errorCode;
    BOOL badgeProgress;
    _Bool isLaunchPathVerified;
    _Bool isNSTaskLaunched;
    NSTask *extractionTask;
    NSPipe *extractionPipeIn;
    NSPipe *extractionPipeOut;
    NSPipe *extractionPipeError;
    NSTimer *extractionTimer;
    BOOL extractionTimerOn;
    int buffer;
    unsigned long long totalBytes;
    unsigned long long bufferBytes;
    NSView *extractionView;
    NSProgressIndicator *progressIndicator;
    NSTextField *statusText;
    NSTextField *timeText;
    NSTextField *commentErrorText;
    NSImageView *icon;
    NSButton *stopButton;
    NSButton *pauseButton;
    NSView *encodingView;
    NSTextField *encodingText;
    NSPopUpButton *encodingList;
    NSImageView *encodingIcon;
    NSImageView *encodingPasswordIcon;
    NSButton *encodingStopButton;
    NSButton *encodingOK;
    NSImageView *passwordIcon;
    NSSecureTextField *passwordInput;
    NSButton *passwordCancel;
    NSButton *passwordOK;
    int seconds;
    BOOL updateSeconds;
}

- (void)deleteFiles:(id)arg1;
- (void)removeTask;
- (void)finalizeTask;
- (void)setEncoding;
- (void)extractionWithPassword;
- (void)extraction:(id)arg1 password:(id)arg2;
- (void)setExtractionName:(id)arg1;
- (void)askAllVolumesAccess:(id)arg1 withFirstVolume:(id)arg2 needsFolder:(BOOL)arg3;
- (void)askAllVolumesAccess:(id)arg1 withFirstVolume:(id)arg2;
- (void)checkAllVolumesAccessible:(id)arg1 onlyFolder:(BOOL)arg2;
- (void)checkAllVolumesAccessible:(id)arg1;
- (void)nextExtraction:(id)arg1;
- (void)startExtraction:(id)arg1;
- (BOOL)panel:(id)arg1 shouldEnableURL:(id)arg2;
- (id)lzip:(id)arg1 path:(id)arg2;
- (id)tar:(id)arg1 path:(id)arg2 password:(id)arg3;
- (id)unar:(id)arg1 path:(id)arg2 password:(id)arg3;
- (id)unrar:(id)arg1 path:(id)arg2 password:(id)arg3;
- (id)unace:(id)arg1 path:(id)arg2 password:(id)arg3;
- (id)szip:(id)arg1 path:(id)arg2 password:(id)arg3;
- (void)timer:(BOOL)arg1;
- (void)taskRunning;
- (void)reader:(id)arg1;
- (void)_reader:(id)arg1;
- (void)progressDelegate:(id)arg1;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)controlTextDidBeginEditing:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)skipError;
- (void)stopChoseName;
- (void)stopEncoding;
- (void)stopPassword;
- (void)stopError;
- (void)stop;
- (void)pause;
- (void)updateWindow:(id)arg1;
- (void)updatePauseButton;
- (void)updateStopButton;
- (void)awakeFromNib;
- (void)dealloc;
- (void)setView;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

