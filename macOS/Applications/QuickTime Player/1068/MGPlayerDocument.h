//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MGDocument.h"

#import "MGInspectionAttributeContainer-Protocol.h"
#import "MGMediaCompositionAssetProvider-Protocol.h"

@class AVAsset, AVPlayer, AVPlayerController, MGAssetCache, MGDocumentSaveContext, MGDocumentViewController, MGMediaClipPreviewProvider, MGMediaComposition, MGMediaCompositionPlayerItemController, MGMediaCompositionSelectionController, MGMediaCompositionUndoController, MGPlayerDocumentDRMHandler, MGSavePanelViewController, NSArray, NSMutableArray, NSMutableSet, NSString, NSWindowController;
@protocol MGVisualContentContainer, NSObject;

@interface MGPlayerDocument : MGDocument <MGInspectionAttributeContainer, MGMediaCompositionAssetProvider>
{
    BOOL _forceSaveWithEllipsesMenuItemTitle;
    BOOL _isCheckingCanClose;
    BOOL _isClosed;
    BOOL _hasBecomeUntitledComposition;
    BOOL _isForcingAudioOnlyUI;
    AVPlayer *_player;
    BOOL _playerIsPlaying;
    MGDocumentViewController<MGVisualContentContainer> *_mainViewController;
    NSArray *_assetLoaders;
    BOOL _isLoadingAssets;
    BOOL _isTearingDownAsset;
    NSWindowController *_assetLoadingSheetWindowController;
    CDUnknownBlockType _assetLoadingCancelHandler;
    NSMutableArray *_mediaClipAssetLoadingCompletionHandlers;
    MGAssetCache *_assetCache;
    NSMutableSet *_assetCacheAssetsToRemove;
    BOOL _assetCacheNeedsCleanup;
    MGMediaCompositionUndoController *_compositionUndoController;
    BOOL _isObservingCompositionMediaClips;
    BOOL _isObservingCompositionPlayerItemControllerPlayerItem;
    MGPlayerDocumentDRMHandler *_playerDRMHandler;
    id <NSObject> _playerPeriodicTimeObserver;
    BOOL _shouldShowWindows;
    BOOL _canShowWindows;
    BOOL _showingYouTubeShareUI;
    BOOL _forcingVideoUI;
    AVAsset *_asset;
    MGMediaComposition *_composition;
    MGMediaCompositionPlayerItemController *_compositionPlayerItemController;
    MGMediaCompositionSelectionController *_compositionSelectionController;
    MGMediaClipPreviewProvider *_mediaClipPreviewProvider;
    AVPlayerController *_playerController;
    MGSavePanelViewController *_savePanelViewController;
    MGDocumentSaveContext *_saveContext;
}

+ (id)keyPathsForValuesAffectingCanShareAudio;
+ (id)keyPathsForValuesAffectingCanShareVideo;
+ (id)keyPathsForValuesAffectingCanShare;
+ (id)keyPathsForValuesAffectingClosedCaptionsAvailable;
+ (id)keyPathsForValuesAffectingMediaCompositionDocument;
+ (id)assetKeysToPrefetchWhenLoadingDocument;
+ (id)assetKeysRequiredToLoadDocument;
+ (BOOL)canConcurrentlyReadDocumentsOfType:(id)arg1;
+ (void)initialize;
+ (BOOL)_isNetworkAvailable;
+ (id)keyPathsForValuesAffectingMediaClipSelection;
+ (id)keyPathsForValuesAffectingMediaClipCount;
+ (id)keyPathsForValuesAffectingInspectionInformation;
+ (id)keyPathsForValuesAffectingInspectionAttributes;
- (void).cxx_destruct;
@property(nonatomic, getter=isForcingVideoUI) BOOL forcingVideoUI; // @synthesize forcingVideoUI=_forcingVideoUI;
@property(readonly, nonatomic) MGDocumentSaveContext *saveContext; // @synthesize saveContext=_saveContext;
@property(readonly, nonatomic) MGSavePanelViewController *savePanelViewController; // @synthesize savePanelViewController=_savePanelViewController;
@property BOOL showingYouTubeShareUI; // @synthesize showingYouTubeShareUI=_showingYouTubeShareUI;
@property(retain) AVPlayerController *playerController; // @synthesize playerController=_playerController;
@property(readonly, nonatomic) MGMediaClipPreviewProvider *mediaClipPreviewProvider; // @synthesize mediaClipPreviewProvider=_mediaClipPreviewProvider;
@property(readonly, nonatomic) MGMediaCompositionSelectionController *compositionSelectionController; // @synthesize compositionSelectionController=_compositionSelectionController;
@property(readonly, nonatomic) MGMediaCompositionPlayerItemController *compositionPlayerItemController; // @synthesize compositionPlayerItemController=_compositionPlayerItemController;
@property(readonly, nonatomic) MGMediaComposition *composition; // @synthesize composition=_composition;
@property(readonly, nonatomic) AVAsset *asset; // @synthesize asset=_asset;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)toggleForcedAudioOnly:(id)arg1;
- (void)loop:(id)arg1;
@property(readonly) BOOL canShareAudio;
@property(readonly) BOOL canShareVideo;
- (BOOL)canShare;
@property(readonly, getter=isRestrictedFromSaving) BOOL restrictedFromSaving;
@property(readonly, getter=isRestrictedFromExporting) BOOL restrictedFromExporting;
@property(readonly, getter=isRestrictedFromTrimming) BOOL restrictedFromTrimming;
@property(readonly, getter=isRestrictedFromEditing) BOOL restrictedFromEditing;
- (void)mainMenuNeedsUpdate:(id)arg1;
- (BOOL)closedCaptionsAvailable;
- (void)generateVideoFrameAtTime:(CDStruct_1b6d18a9)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)makeCurrentPlayerItem:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (BOOL)replaceAllMediaClipsWithImpreciseDurations;
- (id)mediaClipWithPreciseDurationAfterReplacingMediaClip:(id)arg1;
- (id)mediaClipWithPreciseDurationToReplaceMediaClip:(id)arg1;
- (void)cleanUpAssetCacheIfNeeded;
- (void)loadMissingAssetsForCompositionWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)assetLoadingDidFinish;
- (void)assetLoadingSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)assetLoadingDidStartWithCancelHandler:(CDUnknownBlockType)arg1;
- (void)setAsset:(id)arg1 forMediaClip:(id)arg2;
- (id)assetForMediaClip:(id)arg1;
@property(readonly, nonatomic) CDStruct_1b6d18a9 compositionDuration;
@property(nonatomic) BOOL playerIsPlaying;
- (void)updateMainViewControllerWithoutKVONotification;
- (id)mainViewController;
@property(readonly, nonatomic, getter=isMediaCompositionDocument) BOOL mediaCompositionDocument;
- (void)openMobileAssetsURLForError:(id)arg1 optionIndex:(unsigned long long)arg2;
- (void)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2 delegate:(id)arg3 didRecoverSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (BOOL)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2;
- (void)_updateDocumentTitleIfNeeded;
- (void)showWindowsIfPossible;
@property(nonatomic) BOOL canShowWindows;
- (void)restoreStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)showWindows;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)writableTypesForSaveOperation:(unsigned long long)arg1;
- (id)undoManager;
- (void)tearDownAsset;
- (void)clearAudibleAndLegibleMenus;
- (void)document:(id)arg1 shouldClose:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)close;
- (void)canCloseDocumentWithDelegate:(id)arg1 shouldCloseSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (void)_runAsynchronousSaveJob:(id)arg1 usingSaveContext:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)_runBlockingSaveJob:(id)arg1 usingSaveContext:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)document:(id)arg1 didSave:(BOOL)arg2 contextInfo:(void *)arg3;
- (BOOL)canAsynchronouslyWriteToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3;
- (BOOL)prepareSavePanel:(id)arg1;
- (void)saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 delegate:(id)arg4 didSaveSelector:(SEL)arg5 contextInfo:(void *)arg6;
- (void)runModalSavePanelWithContext:(id)arg1;
- (void)saveDocumentTo:(id)arg1;
- (id)fileWrapperOfType:(id)arg1 error:(id *)arg2;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)setPlayer:(id)arg1;
@property(readonly, nonatomic) AVPlayer *player;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)revertToContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)initWithContentsOfURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)init;
- (BOOL)canExportPassthrough:(id)arg1;
- (void)shareToYouTube:(id)arg1 fileURLForItemToShare:(id)arg2 trimTimeRange:(CDStruct_e83c9415)arg3;
- (void)shareToYouTube:(id)arg1 fileURLForItemToShare:(id)arg2;
- (void)progressForJobController:(id)arg1 service:(id)arg2;
- (unsigned long long)indexOfSelectedMediaClip:(id)arg1;
@property(readonly, nonatomic) NSArray *mediaClipSelection;
@property(readonly, nonatomic) unsigned long long mediaClipCount;
@property(readonly) NSArray *inspectionInformation;
@property(readonly) NSString *inspectionTitle;
@property(readonly) NSArray *inspectionAttributes;
- (float)nominalFrameRate;
@property(readonly, nonatomic) double dataSize;
- (float)estimatedDataRateForAsset:(id)arg1;
- (CDStruct_1b6d18a9)duration;
- (id)currentScreenCompression;
- (id)currentMovieCompression;
- (id)currentAudioCompression;
- (id)currentVideoRecordingDevice;
- (id)currentAudioRecordingDevice;
- (id)handleExportCommand:(id)arg1;
- (void)setVolume:(float)arg1;
- (float)volume;
- (void)setRate:(float)arg1;
- (float)rate;
- (BOOL)playing;
- (void)setMuted:(BOOL)arg1;
- (BOOL)muted;
- (void)setLoops:(BOOL)arg1;
- (BOOL)loops;
- (id)naturalDimensions;
- (id)dataRate;
- (id)durationInSeconds;
- (void)setCurrentTimeInSeconds:(id)arg1;
- (id)currentTimeInSeconds;
- (id)handleTrimCommand:(id)arg1;
- (id)handleStepForwardCommand:(id)arg1;
- (id)handleStepBackwardCommand:(id)arg1;
- (void)handleStopCommand:(id)arg1;
- (void)handlePauseCommand:(id)arg1;
- (void)handlePlayCommand:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) NSString *displayName;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

