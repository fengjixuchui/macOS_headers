//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSApplication.h"

@class AYProgressIndicator, BXBootImageView, MF_extra, MF_sidebarButton, NSButton, NSColor, NSColorWell, NSImageView, NSProgressIndicator, NSSegmentedControl, NSSlider, NSTextField, NSTextView, NSURL, NSView, NSWindow;

@interface DBApplication : NSApplication
{
    NSWindow *mainWindow;
    NSView *tabMain;
    NSView *tabBootColor;
    NSView *tabBootImage;
    NSView *tabBootOptions;
    NSView *tabLoginScreen;
    NSView *tabLockScreen;
    NSView *tabMacForge;
    NSTextView *mfWarningText;
    NSTextField *appName;
    NSTextField *appVersion;
    NSTextField *appCopyright;
    NSTextView *changeLog;
    NSImageView *aboutGif;
    NSButton *bootAuto;
    NSButton *bootAudio;
    NSButton *bootSafe;
    NSButton *bootVerbose;
    NSButton *bootCamshell;
    NSButton *bootSingle;
    NSColorWell *bootColorView;
    NSSegmentedControl *bootColorControl;
    AYProgressIndicator *bootColorIndicator;
    NSImageView *bootColorApple;
    NSProgressIndicator *bootColorProgress;
    NSColor *bootCustomColor;
    BXBootImageView *bootImageView;
    NSColorWell *bgColorWell;
    BXBootImageView *loginImageView;
    NSImageView *loginUserIcon;
    BXBootImageView *lockImageView;
    NSButton *lockTextCustomSize;
    NSButton *lockTextCustomText;
    NSSlider *lockTextSlider;
    NSTextField *lockTextText;
    NSImageView *lockUserIcon;
    NSButton *sellogin;
    NSButton *selboot;
    NSButton *sellock;
    unsigned long long *hashVal;
    unsigned long long osx_ver;
    struct AuthorizationOpaqueRef *auth;
    NSURL *lockImagePath;
    MF_extra *_sidebarController;
    NSSegmentedControl *_aboutSelector;
    NSWindow *_windowPreferences;
    NSSegmentedControl *_preferencesTabController;
    NSView *_preferencesGeneral;
    NSView *_preferencesAbout;
    NSView *_preferencesData;
    MF_sidebarButton *_sidebarBootColor;
    MF_sidebarButton *_sidebarBootImage;
    MF_sidebarButton *_sidebarBootOptions;
    MF_sidebarButton *_sidebarLoginScreen;
    MF_sidebarButton *_sidebarLockScreen;
    MF_sidebarButton *_sidebarDiscord;
    MF_sidebarButton *_sidebarApplyAll;
    NSButton *_feedbackButton;
    NSButton *_reportButton;
    NSButton *_donateButton;
}

- (void).cxx_destruct;
@property(retain) NSButton *donateButton; // @synthesize donateButton=_donateButton;
@property(retain) NSButton *reportButton; // @synthesize reportButton=_reportButton;
@property(retain) NSButton *feedbackButton; // @synthesize feedbackButton=_feedbackButton;
@property(retain) MF_sidebarButton *sidebarApplyAll; // @synthesize sidebarApplyAll=_sidebarApplyAll;
@property(retain) MF_sidebarButton *sidebarDiscord; // @synthesize sidebarDiscord=_sidebarDiscord;
@property(retain) MF_sidebarButton *sidebarLockScreen; // @synthesize sidebarLockScreen=_sidebarLockScreen;
@property(retain) MF_sidebarButton *sidebarLoginScreen; // @synthesize sidebarLoginScreen=_sidebarLoginScreen;
@property(retain) MF_sidebarButton *sidebarBootOptions; // @synthesize sidebarBootOptions=_sidebarBootOptions;
@property(retain) MF_sidebarButton *sidebarBootImage; // @synthesize sidebarBootImage=_sidebarBootImage;
@property(retain) MF_sidebarButton *sidebarBootColor; // @synthesize sidebarBootColor=_sidebarBootColor;
@property(retain) NSView *preferencesData; // @synthesize preferencesData=_preferencesData;
@property(retain) NSView *preferencesAbout; // @synthesize preferencesAbout=_preferencesAbout;
@property(retain) NSView *preferencesGeneral; // @synthesize preferencesGeneral=_preferencesGeneral;
@property(retain) NSSegmentedControl *preferencesTabController; // @synthesize preferencesTabController=_preferencesTabController;
@property(retain) NSWindow *windowPreferences; // @synthesize windowPreferences=_windowPreferences;
@property(retain) NSSegmentedControl *aboutSelector; // @synthesize aboutSelector=_aboutSelector;
@property(retain) MF_extra *sidebarController; // @synthesize sidebarController=_sidebarController;
- (void)visitDiscord:(id)arg1;
- (void)sendEmail:(id)arg1;
- (void)sendEmail;
- (void)donate;
- (void)reportIssue;
- (void)toggleCustomLockSize:(id)arg1;
- (void)toggleCustomLockText:(id)arg1;
- (void)dirCheck:(id)arg1;
- (void)selectImage:(id)arg1;
- (void)applyBootOptions:(id)arg1;
- (void)getBootOptions;
- (void)showPreferences:(id)arg1;
- (void)showAbout:(id)arg1;
- (void)deauthorize;
- (BOOL)authorize;
- (void)setupDarkBoot;
- (unsigned char)useDarkColors:(id)arg1;
- (id)imageTintedWithColor:(id)arg1:(id)arg2;
- (void)colorPickerChanged:(id)arg1;
- (char *)colorCompare:(id)arg1:(id)arg2;
- (void)updateBootColorPreview;
- (void)cleanupBootColorView:(id)arg1;
- (void)bootPreviewAnimate;
- (void)removeBXPlist:(id)arg1;
- (BOOL)installBootImage:(id)arg1 withBackgroundColor:(id)arg2 error:(id *)arg3;
- (void)installLoginImage:(id)arg1;
- (id)imageFromCGImageRef:(struct CGImage *)arg1;
- (void)installLockImage:(id)arg1;
- (void)installColorPlist:(id)arg1;
- (void)runAuthorization:(char *)arg1:(char **)arg2;
- (id)hexStringForColor:(id)arg1;
- (id)colorFromHexString:(id)arg1;
- (id)currentBackgroundColor;
- (void)saveChanges:(id)arg1;
- (void)saveBootImage:(id)arg1;
- (void)saveBootColor:(id)arg1;
- (void)saveLoginScreen:(id)arg1;
- (void)saveLockScreen:(id)arg1;
- (void)lockTextSlider:(id)arg1;
- (void)lockTextTextEdit:(id)arg1;
- (void)showCurrentLock:(id)arg1;
- (void)showDefaultLock:(id)arg1;
- (void)showCurrentLogin:(id)arg1;
- (void)showDefaultLogin:(id)arg1;
- (void)showCurrentImage:(id)arg1;
- (void)showDefaultImage:(id)arg1;
- (id)defaultBootColor;
- (id)defaultBootImage;
- (id)defaultLoginImage;
- (id)currentBootColor;
- (id)currentBootImage;
- (id)currentLoginImage;
- (id)currentLockImage;
- (id)currentBackgroundString;
- (void)resetSidebar:(id)arg1;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (BOOL)applicationShouldTerminateAfterLastWindowClosed:(id)arg1;
- (void)applicationWillFinishLaunching:(id)arg1;
- (void)systemDarkModeChange:(id)arg1;
- (void)awakeFromNib;
- (id)runCommand:(id)arg1;

@end

