//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <PodcastsFoundation/MTPodcast.h>

#import "IMMetricsDataSource-Protocol.h"

@class NSString;

@interface MTPodcast (Restrictions) <IMMetricsDataSource>
+ (id)predicateForExcludingExplicitBasedOnSetting;
+ (long long)storeCollectionIdForRedirectURL:(id)arg1;
+ (id)redirectURLForStoreCollectionId:(long long)arg1;
+ (BOOL)isRedirectURL:(id)arg1;
+ (void)setRemovePlayedEpisodesSetting:(long long)arg1 forPodcastUuid:(id)arg2;
+ (id)productURLForStoreCollectionId:(long long)arg1 storeTrackId:(long long)arg2;
+ (unsigned long long)totalUnplayedCount;
+ (void)prepareForPlatform:(id)arg1;
+ (id)insertNewPodcastInManagedObjectContext:(id)arg1 subscribed:(BOOL)arg2 feedUrl:(id)arg3 showType:(long long)arg4 title:(id)arg5 author:(id)arg6 provider:(id)arg7 imageUrl:(id)arg8 description:(id)arg9;
+ (id)insertNewPodcastInManagedObjectContext:(id)arg1 subscribed:(BOOL)arg2 feedUrl:(id)arg3 showType:(long long)arg4 title:(id)arg5 author:(id)arg6 provider:(id)arg7 imageUrl:(id)arg8 description:(id)arg9 adamId:(long long)arg10;
+ (id)_imageFetchQueue;
+ (void)_downloadArtworkForPodcastUuid:(id)arg1;
+ (id)_defaultPlaceholderArtworkWithSize:(struct CGSize)arg1;
+ (void)fetchArtworkForPodcastUuid:(id)arg1 size:(struct CGSize)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)artworkForPodcastUuid:(id)arg1 size:(struct CGSize)arg2 triggerDownload:(BOOL)arg3;
+ (id)artworkForPodcastUuid:(id)arg1 size:(struct CGSize)arg2;
+ (id)predicateForPodcastWithPodcastPID:(long long)arg1;
+ (id)predicateForPodcastStoreId:(long long)arg1;
+ (id)predicateForPodcastUUID:(id)arg1;
+ (id)predicateForPodcastUuids:(id)arg1;
+ (id)predicateForPodcastWithTitle:(id)arg1;
+ (id)predicateForPodcastWithFeedUrl:(id)arg1;
+ (id)predicateForUpdateInterval:(long long)arg1;
+ (id)predicateForUpdatablePodcasts;
+ (id)predicateForAutoDownloadType:(int)arg1;
+ (id)predicateForAutoDownloadEnabled;
+ (id)predicateForHasBeenSynced:(BOOL)arg1;
+ (id)predicateForSyncablePodcasts;
+ (id)predicateForOrphanedFromCloud:(BOOL)arg1;
+ (id)predicateForSubscribedAndNotHidden:(BOOL)arg1;
+ (id)predicateForSubscribed:(BOOL)arg1;
+ (id)predicateForAllPodcasts;
+ (id)userDefaultPropertiesAffectingPredicates;
+ (id)latestEpisodeUuidForPodcastUuid:(id)arg1 ctx:(id)arg2;
+ (id)podcastUuidForEpisodeUuid:(id)arg1 ctx:(id)arg2;
+ (id)podcastUuidForFeedUrl:(id)arg1 ctx:(id)arg2;
+ (id)podcastUuidForFeedUrlString:(id)arg1 ctx:(id)arg2;
+ (id)sortDescriptorsForNewestToOldest:(BOOL)arg1;
+ (id)sortDescriptorsForNewestOnTop;
+ (id)sortDescriptorsForOldestOnTop;
+ (id)allPossibleEpisodeListSortOrderProperties;
+ (id)sortDescriptorsForTitle;
+ (id)sortDescriptorsForDateAdded;
+ (id)sortDescriptorsForRecentlyUpdated;
+ (id)sortDescriptorsForLastDatePlayed;
+ (id)sortDescriptorsForAllPodcasts;
+ (id)sortDescriptorsForManualOrder;
- (unsigned long long)countOfMyEpisodes;
- (id)bestFeedURLExcludingRedirectURL:(BOOL)arg1;
- (id)redirectURL;
- (id)countOfUnplayedEpisodes;
- (id)countOfNewEpisodes;
- (void)updateLastTouchDate;
- (void)resetGoDark;
@property(nonatomic, getter=isAuthenticatedDark) BOOL authenticatedDark;
@property(readonly, nonatomic, getter=isPastAutodownloadDark) BOOL autodownloadDark;
@property(readonly, nonatomic, getter=isPastFeedDark) BOOL feedDark;
@property(readonly, nonatomic, getter=isDark) BOOL dark;
- (void)setOrphanedFromCloud:(BOOL)arg1;
- (id)twitterShareURL;
- (id)shareURL;
- (id)bestAvailableStoreCleanURL;
- (BOOL)isShareable;
- (void)updateEpisodesMetadataIdentifiers;
- (void)setSubscribed:(BOOL)arg1;
- (void)setUpdatedFeedURL:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)fetchArtworkWithSize:(struct CGSize)arg1 completion:(CDUnknownBlockType)arg2;
- (id)artworkWithSize:(struct CGSize)arg1;
- (id)metricsAdditionalData;
- (id)metricsContentIdentifier;
- (id)bestDescription;
- (id)episodesInSeasonNumber:(long long)arg1 oldestEpisodesFirst:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 excludeStreaming:(long long)arg5 episodeTypeFilter:(long long)arg6 limit:(unsigned long long)arg7;
- (id)episodesInSeasonNumber:(long long)arg1 oldestEpisodesFirst:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 limit:(unsigned long long)arg5;
- (id)episodesInSeasonNumber:(long long)arg1 oldestEpisodesFirst:(BOOL)arg2;
- (id)episodesInSeasonNumber:(long long)arg1;
- (id)episodesInLatestSeason;
- (long long)latestSeasonNumber;
- (id)seasonNumbers;
- (BOOL)hasMultipleSeasons;
- (BOOL)hasAtLeastOneSeason;
- (id)_fetchRequestForDistinctSeasons;
- (id)smartPlayEpisode;
- (id)oldestEpisodeInLatestSeasonOrShowExcludingPlayed:(BOOL)arg1 excludeExplicit:(long long)arg2 excludeStreaming:(long long)arg3 episodeTypeFilter:(long long)arg4;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 playStateFilter:(long long)arg3 excludeExplicit:(long long)arg4 excludeStreaming:(long long)arg5 excludingEpisodeUuid:(id)arg6 episodeTypeFilter:(long long)arg7;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 excludeStreaming:(long long)arg5 excludingEpisodeUuid:(id)arg6 episodeTypeFilter:(long long)arg7;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 excludingEpisodeUuid:(id)arg5 episodeTypeFilter:(long long)arg6;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 episodeTypeFilter:(long long)arg5;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 excludeStreaming:(long long)arg5 excludingEpisodeUuid:(id)arg6;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 excludingEpisodeUuid:(id)arg5;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 excludeStreaming:(long long)arg5;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3;
- (id)newestEpisodeUuid;
- (id)oldestUserEpisodeNotPlayedExcludingExplicit:(long long)arg1 excludeStreaming:(long long)arg2;
- (id)oldestUserEpisodeNotPlayedExcludingExplicit:(long long)arg1;
- (id)oldestUserEpisodeExcludingExplicit:(long long)arg1 excludeStreaming:(long long)arg2;
- (id)oldestUserEpisodeExcludingExplicit:(long long)arg1;
- (id)oldestUserEpisode;
- (id)oldestEpisodeNotPlayedExcludingExplicit:(long long)arg1 excludingStreaming:(long long)arg2 episodeTypeFilter:(long long)arg3;
- (id)oldestEpisodeNotPlayedExcludingExplicit:(long long)arg1;
- (id)oldestEpisodeNotPlayed;
- (id)oldestFullEpisode;
- (id)oldestEpisodeRestrictToUserEpisodes:(BOOL)arg1 excludePlayed:(BOOL)arg2 excludingExplicit:(long long)arg3 excludeStreaming:(long long)arg4 episodeTypeFilter:(long long)arg5;
- (id)oldestEpisodeExcludingExplicit:(long long)arg1 excludeStreaming:(long long)arg2 episodeTypeFilter:(long long)arg3;
- (id)oldestEpisodeExcludingExplicit:(long long)arg1;
- (id)oldestEpisode;
- (id)newestUserEpisodeNotPlayedExcludingExplicit:(long long)arg1 excludeStreaming:(long long)arg2;
- (id)newestUserEpisodeExcludingExplicit:(long long)arg1;
- (id)nextEpisodeNotPlayedExcludingExplicit:(long long)arg1 excludeStreaming:(long long)arg2 episodeTypeFilter:(long long)arg3;
- (id)newestFullEpisode;
- (id)newestEpisode;
- (id)newestEpisodeRestrictToUserEpisodes:(BOOL)arg1 playStateFilter:(long long)arg2 excludingExplicit:(long long)arg3 excludeStreaming:(long long)arg4 episodeTypeFilter:(long long)arg5;
- (id)newestEpisodeExcludingUuid:(id)arg1 excludeExplicit:(long long)arg2 excludeStreaming:(long long)arg3;
- (id)newestEpisodeExcludingUuid:(id)arg1 excludeExplicit:(long long)arg2;
- (id)firstUserEpisodeNotPlayed;
- (id)_episodesNextTo:(double)arg1 after:(BOOL)arg2 usePlayOrder:(BOOL)arg3 sortAsc:(BOOL)arg4 restrictToUserEpisodes:(BOOL)arg5 excludePlayed:(BOOL)arg6 excludeExplicit:(long long)arg7 excludeStreaming:(long long)arg8 episodeTypeFilter:(long long)arg9 limit:(long long)arg10;
- (id)_episodesNextToEpisode:(id)arg1 after:(BOOL)arg2 usePlayOrder:(BOOL)arg3 restrictToUserEpisodes:(BOOL)arg4 excludePlayed:(BOOL)arg5 excludeExplicit:(long long)arg6 excludeStreaming:(long long)arg7 episodeTypeFilter:(long long)arg8 limit:(long long)arg9;
- (id)_episodesNextToEpisode:(id)arg1 after:(BOOL)arg2 usePlayOrder:(BOOL)arg3 restrictToUserEpisodes:(BOOL)arg4 excludePlayed:(BOOL)arg5 excludeExplicit:(long long)arg6 episodeTypeFilter:(long long)arg7 limit:(long long)arg8;
- (id)_episodeNextToEpisode:(id)arg1 after:(BOOL)arg2 usePlayOrder:(BOOL)arg3 restrictToUserEpisodes:(BOOL)arg4 excludePlayed:(BOOL)arg5 excludeExplicit:(long long)arg6 excludeStreaming:(long long)arg7 episodeTypeFilter:(long long)arg8;
- (id)_episodeNextToEpisode:(id)arg1 after:(BOOL)arg2 usePlayOrder:(BOOL)arg3 restrictToUserEpisodes:(BOOL)arg4 excludePlayed:(BOOL)arg5 excludeExplicit:(long long)arg6 episodeTypeFilter:(long long)arg7;
- (id)_episodeBeforeEpisode:(id)arg1 usePlayOrder:(BOOL)arg2 restrictToUserEpisodes:(BOOL)arg3 excludePlayed:(BOOL)arg4;
- (id)_episodeAfterEpisode:(id)arg1 usePlayOrder:(BOOL)arg2 restrictToUserEpisodes:(BOOL)arg3 excludePlayed:(BOOL)arg4 excludeExplicit:(long long)arg5 excludeStreaming:(long long)arg6 episodeTypeFilter:(long long)arg7;
- (id)_episodeAfterEpisode:(id)arg1 usePlayOrder:(BOOL)arg2 restrictToUserEpisodes:(BOOL)arg3 excludePlayed:(BOOL)arg4;
- (id)episodeAfterEpisode:(id)arg1;
- (id)episodePublishedAfter:(double)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 excludeStreaming:(long long)arg5 episodeTypeFilter:(long long)arg6;
- (id)episodePublishedBefore:(double)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 excludeStreaming:(long long)arg5 episodeTypeFilter:(long long)arg6;
- (id)episodeOlderThanEpisode:(id)arg1;
- (id)episodeNewerThanEpisode:(id)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 excludeStreaming:(long long)arg5 episodeTypeFilter:(long long)arg6;
- (id)episodesAfterEpisode:(id)arg1 restrictToUserEpisodes:(BOOL)arg2;
- (id)userEpisodesAfterEpisode:(id)arg1;
- (id)userEpisodeAfterEpisode:(id)arg1;
- (id)mostRecentlyManuallyAddedEpisode;
- (id)mostRecentlyPlayedEpisodeExcludingEpisodeUuid:(id)arg1 restrictedToLibrary:(BOOL)arg2 excludeExplicit:(long long)arg3 excludeStreaming:(long long)arg4;
- (id)mostRecentlyPlayedEpisodeExcludingExplicit:(long long)arg1 excludingStreaming:(long long)arg2;
- (id)mostRecentlyPlayedEpisode;
- (id)episodeToResume;
- (BOOL)updateCursorPosition:(BOOL)arg1;
@property(nonatomic) BOOL playbackNewestToOldest;
- (id)sortDescriptorsForPlayOrder;
- (id)sortDescriptorsForSortOrder;
@property(nonatomic) BOOL sortAscending;
@property(nonatomic) BOOL isExplicit;
- (void)setShowTypeSetting:(long long)arg1;
- (BOOL)isSerialShowTypeInFeed;
- (long long)showTypeInFeedResolvedValue;
- (long long)showTypeResolvedValue;
- (void)setWebpageURL:(id)arg1;
- (void)setShowTypeInFeed:(id)arg1;
- (void)setImageURL:(id)arg1;
- (void)setUpdateAvg:(double)arg1;
- (void)setUpdateStdDev:(double)arg1;
- (void)setFeedChangedDate:(double)arg1;
- (void)setItemDescription:(id)arg1;
- (void)setAuthor:(id)arg1;
- (void)setFlags:(long long)arg1;
@property(nonatomic) BOOL needsArtworkUpdate;
- (void)setModifiedDate:(double)arg1;
- (void)setLastDatePlayed:(double)arg1;
@property(nonatomic) BOOL importing;
- (void)setDeletePlayedEpisodes:(long long)arg1;
@property(nonatomic) BOOL hasBeenSynced;
- (void)markPlaylistsForUpdate;
- (id)currentFeedURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

