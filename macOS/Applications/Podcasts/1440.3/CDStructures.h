//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct EntriesContainer {
    struct vector<MTMPU::LayoutInterpolator::Entry, std::__1::allocator<MTMPU::LayoutInterpolator::Entry>> _field1;
    double _field2;
};

struct Entry {
    double _field1;
    double _field2;
};

struct MTAVAssetCacheConfiguration {
    long long _field1;
    long long _field2;
};

struct MTIndexPath {
    long long batch;
    int object;
};

struct MZKeyValueStoreDataVerionPair {
    id _field1;
    id _field2;
};

struct MusicLibraryAddKeepLocalControlStatus {
    long long _field1;
    double _field2;
};

struct Point3D {
    double _field1;
    double _field2;
    double _field3;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct vector<MTMPU::LayoutInterpolator::EntriesContainer, std::__1::allocator<MTMPU::LayoutInterpolator::EntriesContainer>> {
    struct EntriesContainer *__begin_;
    struct EntriesContainer *__end_;
    struct __compressed_pair<MTMPU::LayoutInterpolator::EntriesContainer *, std::__1::allocator<MTMPU::LayoutInterpolator::EntriesContainer>> {
        struct EntriesContainer *__value_;
    } __end_cap_;
};

struct vector<MTMPU::LayoutInterpolator::Entry, std::__1::allocator<MTMPU::LayoutInterpolator::Entry>> {
    struct Entry *_field1;
    struct Entry *_field2;
    struct __compressed_pair<MTMPU::LayoutInterpolator::Entry *, std::__1::allocator<MTMPU::LayoutInterpolator::Entry>> {
        struct Entry *_field1;
    } _field3;
};

struct vector<MTMPU::Point3D, std::__1::allocator<MTMPU::Point3D>> {
    struct Point3D *_field1;
    struct Point3D *_field2;
    struct __compressed_pair<MTMPU::Point3D *, std::__1::allocator<MTMPU::Point3D>> {
        struct Point3D *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int delegateStateChanged:1;
    unsigned int delegateErrorDidOccur:1;
    unsigned int delegateMediaTypeAvailable:1;
    unsigned int delegateDurationAvailable:1;
    unsigned int delegateCallbackForTime:1;
    unsigned int delegatePeriodicUpdate:1;
    unsigned int delegateHasDidChangePlayerItem:1;
    unsigned int delegateHasDidStopPlayerItem:1;
    unsigned int delegateHasDidEndedPlayerItem:1;
    unsigned int delegateLoadedDurationChanged:1;
    unsigned int delegateChapterStarted:1;
    unsigned int delegateCurrentManifestItemChanged:1;
} CDStruct_d823ae3d;

typedef struct {
    double ascender;
    char isAscenderInitialized;
    double bodyLeading;
    char isBodyLeadingInitialized;
    double capHeight;
    char isCapHeightInitialized;
    double descender;
    char isDescenderInitialized;
    double lineHeight;
    char isLineHeightInitialized;
} CDStruct_8d4749b8;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGRect _field1;
    struct CGRect _field2;
} CDStruct_b7523c42;

// Template types
typedef struct vector<MTMPU::Point3D, std::__1::allocator<MTMPU::Point3D>> {
    struct Point3D *_field1;
    struct Point3D *_field2;
    struct __compressed_pair<MTMPU::Point3D *, std::__1::allocator<MTMPU::Point3D>> {
        struct Point3D *_field1;
    } _field3;
} vector_62ce5f2b;

