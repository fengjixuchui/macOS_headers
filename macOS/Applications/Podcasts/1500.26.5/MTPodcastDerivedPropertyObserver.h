//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MTDerivedPropertyChangeNotifying-Protocol.h"
#import "MTLibraryChangeNotifier-Protocol.h"

@class NSMutableDictionary, NSPersistentHistoryToken, NSSet, NSString;
@protocol OS_dispatch_queue;

@interface MTPodcastDerivedPropertyObserver : NSObject <MTDerivedPropertyChangeNotifying, MTLibraryChangeNotifier>
{
    NSObject<OS_dispatch_queue> *_handlerQueue;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    BOOL _isObserving;
    NSMutableDictionary *_cache;
    NSMutableDictionary *_handlers;
    NSMutableDictionary *_podcastCache;
    NSSet *_episodePropertiesToFetch;
    NSSet *_podcastPropertiesToFetch;
    NSSet *_podcastStatsProperties;
    NSPersistentHistoryToken *_latestPersistentHistoryToken;
    CDUnknownBlockType _didFinishProcessingContextSaveHandlerForTests;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(copy, nonatomic) CDUnknownBlockType didFinishProcessingContextSaveHandlerForTests; // @synthesize didFinishProcessingContextSaveHandlerForTests=_didFinishProcessingContextSaveHandlerForTests;
@property(nonatomic) BOOL isObserving; // @synthesize isObserving=_isObserving;
@property(retain, nonatomic) NSPersistentHistoryToken *latestPersistentHistoryToken; // @synthesize latestPersistentHistoryToken=_latestPersistentHistoryToken;
@property(retain, nonatomic) NSSet *podcastStatsProperties; // @synthesize podcastStatsProperties=_podcastStatsProperties;
@property(retain, nonatomic) NSSet *podcastPropertiesToFetch; // @synthesize podcastPropertiesToFetch=_podcastPropertiesToFetch;
@property(retain, nonatomic) NSSet *episodePropertiesToFetch; // @synthesize episodePropertiesToFetch=_episodePropertiesToFetch;
@property(retain, nonatomic) NSMutableDictionary *podcastCache; // @synthesize podcastCache=_podcastCache;
@property(retain, nonatomic) NSMutableDictionary *handlers; // @synthesize handlers=_handlers;
@property(retain, nonatomic) NSMutableDictionary *cache; // @synthesize cache=_cache;
- (void)libraryDidChange:(id)arg1;
- (void)notifyObserversForPodcast:(id)arg1;
- (id)countOfMyMediaEpisodesForEpisodes:(id)arg1 andPredicateForMyEpisodes:(id)arg2;
- (id)countOfUnplayedEpisodesForEpisodes:(id)arg1 andPredicateForEpisodesOnUnplayedTab:(id)arg2;
- (id)countOfNewEpisodesForEpisodes:(id)arg1;
- (void)setDependentPropertyValue:(id)arg1 forKey:(id)arg2 forPodcastUuid:(id)arg3;
- (id)dependentPropertyForKey:(id)arg1 forPodcastUuid:(id)arg2;
- (BOOL)setDerivedPropertyValue:(id)arg1 forKey:(id)arg2 forPodcast:(id)arg3;
- (id)derivedPropertyValueForKey:(id)arg1 forPodcast:(id)arg2;
- (id)derivedPropertiesForPodcast:(id)arg1;
- (id)_predicateForEpisodesToUpdateWithPodcastUuid:(id)arg1 predicateForUnplayedInUnplayedTab:(id)arg2 predicateForUserEpisodes:(id)arg3 predicateForListenNowEpisode:(id)arg4;
- (void)updateFlagForEpisodes:(id)arg1 predicateForUnplayedTab:(id)arg2 predicateForUserEpisodes:(id)arg3 podcastUuid:(id)arg4 ctx:(id)arg5;
- (void)episodeResultsChangedForPodcastUuid:(id)arg1;
- (void)reportStatsForPodcasts;
- (void)processLatestPersistentHistoryTransactions;
- (BOOL)_changeContainsRelevantPodcastChanges:(id)arg1;
- (BOOL)_changeContainsRelevantEpisodeChanges:(id)arg1;
- (BOOL)_shouldUpdatePodcastsStatsForChange:(id)arg1;
- (id)_historyTransactionsSinceLatestPersistentHistoryToken;
- (void)_updateDerivedPropertiesForPodcastUUIDs:(id)arg1;
- (void)_setLastProcessedPersistentHistoryToken:(id)arg1;
- (void)_fetchLatestProcessedPersistentHistoryToken;
- (void)stopObserving;
- (void)startObserving;
- (id)init;
- (void)removeDerivedPropertyChangeHandler:(id)arg1;
- (id)addDerivedPropertyChangeHandler:(CDUnknownBlockType)arg1;
- (unsigned long long)countOfMyMediaEpisodesForPodcast:(id)arg1;
- (unsigned long long)countOfUnplayedEpisodesForPodcast:(id)arg1;
- (unsigned long long)countOfNewEpisodesForPodcast:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

