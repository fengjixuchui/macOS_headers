//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSMutableDictionary, NSOperationQueue, NSString;
@protocol OS_dispatch_queue;

@interface IMMemoryCache : NSObject
{
    BOOL _evictsItemsWithDiscardedContent;
    NSString *_name;
    id _delegate;
    unsigned long long _totalCostLimit;
    unsigned long long _countLimit;
    NSMutableArray *_itemsArray;
    NSMutableDictionary *_items;
    unsigned long long _totalCost;
    unsigned long long _count;
    NSOperationQueue *_queue;
    double _lastCheckTime;
    NSObject<OS_dispatch_queue> *_accessQueue;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *accessQueue; // @synthesize accessQueue=_accessQueue;
@property(nonatomic) double lastCheckTime; // @synthesize lastCheckTime=_lastCheckTime;
@property(retain, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property(nonatomic) unsigned long long count; // @synthesize count=_count;
@property(nonatomic) unsigned long long totalCost; // @synthesize totalCost=_totalCost;
@property(retain, nonatomic) NSMutableDictionary *items; // @synthesize items=_items;
@property(retain, nonatomic) NSMutableArray *itemsArray; // @synthesize itemsArray=_itemsArray;
@property(nonatomic) unsigned long long countLimit; // @synthesize countLimit=_countLimit;
@property(nonatomic) unsigned long long totalCostLimit; // @synthesize totalCostLimit=_totalCostLimit;
@property(nonatomic) BOOL evictsItemsWithDiscardedContent; // @synthesize evictsItemsWithDiscardedContent=_evictsItemsWithDiscardedContent;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void)_removeObjectForKey:(id)arg1;
- (void)_addItem:(id)arg1 forKey:(id)arg2;
- (id)description;
- (long long)numberOfCachedItems;
- (unsigned long long)costForObjectWithKey:(id)arg1;
- (void)_checkLimits;
- (void)_checkLimitsAndEvictObjects;
- (void)checkLimitsAndEvictObjects;
- (BOOL)_shouldRemoveIndex:(unsigned long long)arg1;
- (void)removeObjectsForKeyWithPrefix:(id)arg1;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2 cost:(unsigned long long)arg3;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (id)allKeys;
- (id)init;

@end

