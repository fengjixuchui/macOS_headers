//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MTURLSessionManager.h"

@class MTImageStore, NSMutableDictionary, NSObject;
@protocol OS_dispatch_queue;

@interface MTImageDownloader : MTURLSessionManager
{
    BOOL _hasPurgedTemporaryResourcesDirectory;
    NSMutableDictionary *_clientRequestsByUrl;
    MTImageStore *_imageStore;
    NSObject<OS_dispatch_queue> *_syncQueue;
    NSObject<OS_dispatch_queue> *_imageWorkQueue;
}

- (void).cxx_destruct;
@property(nonatomic) BOOL hasPurgedTemporaryResourcesDirectory; // @synthesize hasPurgedTemporaryResourcesDirectory=_hasPurgedTemporaryResourcesDirectory;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *imageWorkQueue; // @synthesize imageWorkQueue=_imageWorkQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *syncQueue; // @synthesize syncQueue=_syncQueue;
@property(retain, nonatomic) MTImageStore *imageStore; // @synthesize imageStore=_imageStore;
@property(retain, nonatomic) NSMutableDictionary *clientRequestsByUrl; // @synthesize clientRequestsByUrl=_clientRequestsByUrl;
- (double)_urlSessionResourceTimeout;
- (BOOL)_shouldDiscardTransparency;
- (id)_temporaryImagePathByCopyingDownloadedContent:(id)arg1 uuid:(id)arg2 error:(id *)arg3;
- (id)_temporaryImagePathForDownloadedImageWithUuid:(id)arg1;
- (id)_keyForImageDownloaderTempFilename:(id)arg1;
- (id)_temporaryResourcesDirectory;
- (void)_onImageWorkQueuePurgeUnneededItemsInTemporaryResourcesDirectoryIfNecessary;
- (void)cleanupTemporaryResourcesDirectoryIfNecessary;
- (void)_dequeueClientRequests:(id)arg1;
- (id)_clientRequestsForUrl:(id)arg1;
- (long long)_enqueueClientInfoWithUrl:(id)arg1 key:(id)arg2 podcastUuid:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_finishProcessingClientRequests:(id)arg1 originalUrl:(id)arg2 success:(BOOL)arg3 error:(id)arg4;
- (void)_saveArtworkImageUrl:(id)arg1 forPodcastUuids:(id)arg2 logHeader:(id)arg3;
- (void)_processFinishedDownloadWithContentURL:(id)arg1 originalUrl:(id)arg2 actualRequestUrl:(id)arg3 finishedWithContentHandler:(CDUnknownBlockType)arg4 processedKeys:(id)arg5;
- (void)task:(id)arg1 didCompleteWithDownloadedContentUrl:(id)arg2;
- (void)task:(id)arg1 didFailWithError:(id)arg2 orStatusCode:(long long)arg3;
- (void)configureSession:(id)arg1;
- (BOOL)_completeUsingExistingDownloadedImageForUuid:(id)arg1 imageUrl:(id)arg2;
- (void)_downloadImageUrl:(id)arg1 cacheKey:(id)arg2 podcastUuid:(id)arg3 userInitiated:(BOOL)arg4 backgroundFetch:(BOOL)arg5 callback:(CDUnknownBlockType)arg6;
- (void)downloadImageUrl:(id)arg1 cacheKey:(id)arg2 userInitiated:(BOOL)arg3 callback:(CDUnknownBlockType)arg4;
- (void)downloadImageForPodcastUuid:(id)arg1 imageUrl:(id)arg2 userInitiated:(BOOL)arg3 useBackgroundFetch:(BOOL)arg4 callback:(CDUnknownBlockType)arg5;
- (void)downloadImageForPodcastUuid:(id)arg1 userInitiated:(BOOL)arg2 backgroundFetch:(BOOL)arg3 callback:(CDUnknownBlockType)arg4;
- (id)init;

@end

