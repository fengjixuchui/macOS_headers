//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <CoreData/NSManagedObject.h>

#import "IMMetricsDataSource-Protocol.h"

@class MTSyncInfo, NSSet, NSString;

@interface MTPodcast : NSManagedObject <IMMetricsDataSource>
{
}

+ (id)predicateForExcludingExplicitBasedOnSetting;
+ (long long)storeCollectionIdForRedirectURL:(id)arg1;
+ (id)redirectURLForStoreCollectionId:(long long)arg1;
+ (BOOL)isRedirectURL:(id)arg1;
+ (void)setRemovePlayedEpisodesSetting:(long long)arg1 forPodcastUuid:(id)arg2;
+ (id)productURLForStoreCollectionId:(long long)arg1 storeTrackId:(long long)arg2;
+ (unsigned long long)totalUnplayedCount;
+ (void)prepareForPlatform:(id)arg1;
+ (id)insertNewPodcastInManagedObjectContext:(id)arg1 subscribed:(BOOL)arg2 feedUrl:(id)arg3 title:(id)arg4 author:(id)arg5 provider:(id)arg6 category:(id)arg7 imageUrl:(id)arg8 description:(id)arg9;
+ (id)insertNewPodcastInManagedObjectContext:(id)arg1 subscribed:(BOOL)arg2 feedUrl:(id)arg3 title:(id)arg4 author:(id)arg5 provider:(id)arg6 category:(id)arg7 imageUrl:(id)arg8 description:(id)arg9 adamId:(long long)arg10;
+ (id)_imageFetchQueue;
+ (void)_downloadArtworkForPodcastUuid:(id)arg1;
+ (id)_defaultPlaceholderArtworkWithSize:(struct CGSize)arg1;
+ (void)fetchArtworkForPodcastUuid:(id)arg1 size:(struct CGSize)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)artworkForPodcastUuid:(id)arg1 size:(struct CGSize)arg2;
+ (id)predicateForPodcastWithPodcastPID:(long long)arg1;
+ (id)predicateForPodcastStoreId:(long long)arg1;
+ (id)predicateForPodcastUUID:(id)arg1;
+ (id)predicateForPodcastUuids:(id)arg1;
+ (id)predicateForPodcastWithTitle:(id)arg1;
+ (id)predicateForPodcastWithFeedUrl:(id)arg1;
+ (id)predicateForUpdateInterval:(long long)arg1;
+ (id)predicateForUpdatablePodcasts;
+ (id)predicateForAutoDownloadType:(int)arg1;
+ (id)predicateForAutoDownloadEnabled;
+ (id)predicateForHasBeenSynced:(BOOL)arg1;
+ (id)predicateForSyncablePodcasts;
+ (id)predicateForOrphanedFromCloud:(BOOL)arg1;
+ (id)predicateForSubscribedAndNotHidden:(BOOL)arg1;
+ (id)predicateForSubscribed:(BOOL)arg1;
+ (id)predicateForAllPodcasts;
+ (id)userDefaultPropertiesAffectingPredicates;
+ (int)autoDownloadDefaultValue;
+ (long long)deletePlayedEpisodesDefaultValue;
+ (long long)episodeLimitDefaultValue;
+ (id)_defaultsForLoadingDefaultValues;
+ (long long)updateIntervalSettingForTimeInterval:(double)arg1;
+ (double)timeIntervalForUpdate:(long long)arg1;
+ (long long)updateIntervalDefaultValue;
+ (id)latestEpisodeUuidForPodcastUuid:(id)arg1 ctx:(id)arg2;
+ (id)podcastUuidForEpisodeUuid:(id)arg1 ctx:(id)arg2;
+ (id)podcastUuidForFeedUrl:(id)arg1 ctx:(id)arg2;
+ (id)podcastUuidForFeedUrlString:(id)arg1 ctx:(id)arg2;
+ (id)sortDescriptorsForNewestToOldest:(BOOL)arg1;
+ (id)sortDescriptorsForNewestOnTop;
+ (id)sortDescriptorsForOldestOnTop;
+ (id)allPossibleEpisodeListSortOrderProperties;
+ (id)sortDescriptorsForTitle;
+ (id)sortDescriptorsForDateAdded;
+ (id)sortDescriptorsForRecentlyUpdated;
+ (id)sortDescriptorsForLastDatePlayed;
+ (id)sortDescriptorsForAllPodcasts;
+ (id)sortDescriptorsForManualOrder;
- (unsigned long long)countOfMyEpisodes;
- (id)bestFeedURLExcludingRedirectURL:(BOOL)arg1;
- (id)redirectURL;
- (id)countOfUnplayedEpisodes;
- (id)countOfNewEpisodes;
- (void)updateLastTouchDate;
- (void)resetGoDark;
@property(nonatomic, getter=isAuthenticatedDark) BOOL authenticatedDark;
@property(readonly, nonatomic, getter=isPastAutodownloadDark) BOOL autodownloadDark;
@property(readonly, nonatomic, getter=isPastFeedDark) BOOL feedDark;
@property(readonly, nonatomic, getter=isDark) BOOL dark;
@property(nonatomic) BOOL orphanedFromCloud; // @dynamic orphanedFromCloud;
- (id)twitterShareURL;
- (id)shareURL;
- (id)bestAvailableStoreCleanURL;
- (BOOL)isShareable;
- (void)updateEpisodesMetadataIdentifiers;
@property(nonatomic) BOOL subscribed; // @dynamic subscribed;
@property(retain, nonatomic) NSString *updatedFeedURL; // @dynamic updatedFeedURL;
@property(retain, nonatomic) NSString *title; // @dynamic title;
- (void)fetchArtworkWithSize:(struct CGSize)arg1 completion:(CDUnknownBlockType)arg2;
- (id)artworkWithSize:(struct CGSize)arg1;
- (id)metricsAdditionalData;
- (id)metricsContentIdentifier;
- (BOOL)deletePlayedEpisodesResolvedValue;
- (long long)episodeLimitResolvedValue;
- (int)autoDownloadResolvedValue;
- (id)displayURL;
@property(nonatomic) BOOL playbackNewestToOldest;
@property(nonatomic) BOOL isExplicit;
@property(nonatomic) BOOL sortAscending;
@property(nonatomic) long long podcastPID; // @dynamic podcastPID;
- (id)bestDescription;
- (id)episodesInSeasonNumber:(long long)arg1 oldestEpisodesFirst:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 excludeStreaming:(long long)arg5 limit:(unsigned long long)arg6;
- (id)episodesInSeasonNumber:(long long)arg1 oldestEpisodesFirst:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 limit:(unsigned long long)arg5;
- (id)episodesInSeasonNumber:(long long)arg1 oldestEpisodesFirst:(BOOL)arg2;
- (id)episodesInSeasonNumber:(long long)arg1;
- (id)episodesInLatestSeason;
- (long long)latestSeasonNumber;
- (id)seasonNumbers;
- (BOOL)hasMultipleSeasons;
- (BOOL)hasAtLeastOneSeason;
- (id)_fetchRequestForDistinctSeasons;
- (id)oldestEpisodeInLatestSeasonOrShowExcludingPlayed:(BOOL)arg1 excludeExplicit:(long long)arg2 excludeStreaming:(long long)arg3;
- (id)oldestEpisodeInLatestSeasonOrShowExcludingPlayed:(BOOL)arg1 excludeExplicit:(long long)arg2;
- (id)oldestEpisodeInLatestSeasonOrShow;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 excludeStreaming:(long long)arg5 excludingEpisodeUuid:(id)arg6 episodeTypeFilter:(long long)arg7;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 excludingEpisodeUuid:(id)arg5 episodeTypeFilter:(long long)arg6;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 episodeTypeFilter:(long long)arg5;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 excludeStreaming:(long long)arg5 excludingEpisodeUuid:(id)arg6;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 excludingEpisodeUuid:(id)arg5;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4 excludeStreaming:(long long)arg5;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3 excludeExplicit:(long long)arg4;
- (id)_latestOrOldestEpisode:(BOOL)arg1 restrictToUserEpisodes:(BOOL)arg2 excludePlayed:(BOOL)arg3;
- (id)newestEpisodeUuid;
- (id)oldestUserEpisodeNotPlayedExcludingExplicit:(long long)arg1 excludeStreaming:(long long)arg2;
- (id)oldestUserEpisodeNotPlayedExcludingExplicit:(long long)arg1;
- (id)oldestUserEpisodeExcludingExplicit:(long long)arg1 excludeStreaming:(long long)arg2;
- (id)oldestUserEpisodeExcludingExplicit:(long long)arg1;
- (id)oldestUserEpisode;
- (id)oldestEpisodeNotPlayedExcludingExplicit:(long long)arg1 excludingStreaming:(long long)arg2;
- (id)oldestEpisodeNotPlayedExcludingExplicit:(long long)arg1;
- (id)oldestEpisodeNotPlayed;
- (id)oldestFullEpisode;
- (id)oldestEpisodeExcludingExplicit:(long long)arg1 excludeStreaming:(long long)arg2;
- (id)oldestEpisodeExcludingExplicit:(long long)arg1;
- (id)oldestEpisode;
- (id)newestUserEpisodeNotPlayedExcludingExplicit:(long long)arg1 excludeStreaming:(long long)arg2;
- (id)newestUserEpisodeNotPlayedExcludingExplicit:(long long)arg1;
- (id)newestUserEpisodeExcludingExplicit:(long long)arg1;
- (id)newestEpisodeNotPlayedExcludingExplicit:(long long)arg1 excludeStreaming:(long long)arg2;
- (id)newestEpisodeNotPlayedExcludingExplicit:(long long)arg1;
- (id)newestFullEpisode;
- (id)newestEpisode;
- (id)newestEpisodeExcludingUuid:(id)arg1 excludeExplicit:(long long)arg2 excludeStreaming:(long long)arg3;
- (id)newestEpisodeExcludingUuid:(id)arg1 excludeExplicit:(long long)arg2;
- (id)firstUserEpisodeNotPlayed;
- (id)_episodesNextToEpisode:(id)arg1 after:(BOOL)arg2 usePlayOrder:(BOOL)arg3 restrictToUserEpisodes:(BOOL)arg4 excludePlayed:(BOOL)arg5 excludeExplicit:(long long)arg6 excludeStreaming:(long long)arg7 limit:(long long)arg8;
- (id)_episodesNextToEpisode:(id)arg1 after:(BOOL)arg2 usePlayOrder:(BOOL)arg3 restrictToUserEpisodes:(BOOL)arg4 excludePlayed:(BOOL)arg5 excludeExplicit:(long long)arg6 limit:(long long)arg7;
- (id)_episodeNextToEpisode:(id)arg1 after:(BOOL)arg2 usePlayOrder:(BOOL)arg3 restrictToUserEpisodes:(BOOL)arg4 excludePlayed:(BOOL)arg5 excludeExplicit:(long long)arg6 excludeStreaming:(long long)arg7;
- (id)_episodeNextToEpisode:(id)arg1 after:(BOOL)arg2 usePlayOrder:(BOOL)arg3 restrictToUserEpisodes:(BOOL)arg4 excludePlayed:(BOOL)arg5 excludeExplicit:(long long)arg6;
- (id)_episodeBeforeEpisode:(id)arg1 usePlayOrder:(BOOL)arg2 restrictToUserEpisodes:(BOOL)arg3 excludePlayed:(BOOL)arg4;
- (id)_episodeAfterEpisode:(id)arg1 usePlayOrder:(BOOL)arg2 restrictToUserEpisodes:(BOOL)arg3 excludePlayed:(BOOL)arg4 excludeExplicit:(long long)arg5 excludeStreaming:(long long)arg6;
- (id)_episodeAfterEpisode:(id)arg1 usePlayOrder:(BOOL)arg2 restrictToUserEpisodes:(BOOL)arg3 excludePlayed:(BOOL)arg4 excludeExplicit:(long long)arg5;
- (id)_episodeAfterEpisode:(id)arg1 usePlayOrder:(BOOL)arg2 restrictToUserEpisodes:(BOOL)arg3 excludePlayed:(BOOL)arg4;
- (id)episodeAfterEpisode:(id)arg1;
- (id)episodeOlderThanEpisode:(id)arg1;
- (id)episodeNewerThanEpisode:(id)arg1;
- (id)episodeNewerThanEpisode:(id)arg1 excludePlayed:(BOOL)arg2;
- (id)userEpisodeNewerThanEpisode:(id)arg1 excludePlayed:(BOOL)arg2 excludeExplicit:(long long)arg3 excludeStreaming:(long long)arg4;
- (id)userEpisodeNewerThanEpisode:(id)arg1 excludePlayed:(BOOL)arg2 excludeExplicit:(long long)arg3;
- (id)episodesAfterEpisode:(id)arg1 restrictToUserEpisodes:(BOOL)arg2;
- (id)userEpisodesAfterEpisode:(id)arg1;
- (id)userEpisodeAfterEpisode:(id)arg1;
- (id)mostRecentlyManuallyAddedEpisode;
- (id)mostRecentlyPlayedEpisodeExcludingEpisodeUuid:(id)arg1 restrictedToLibrary:(BOOL)arg2 excludeExplicit:(long long)arg3 excludeStreaming:(long long)arg4;
- (id)mostRecentlyPlayedEpisodeExcludingEpisodeUuid:(id)arg1 restrictedToLibrary:(BOOL)arg2 excludeExplicit:(long long)arg3;
- (id)mostRecentlyPlayedEpisodeExcludingEpisodeUuid:(id)arg1 restrictedToLibrary:(BOOL)arg2;
- (id)mostRecentlyPlayedEpisodeExcludingEpisodeUuid:(id)arg1;
- (id)mostRecentlyPlayedEpisodeRestrictedToLibrary:(BOOL)arg1;
- (id)mostRecentlyPlayedEpisodeExcludingExplicit:(long long)arg1 excludingStreaming:(long long)arg2;
- (id)mostRecentlyPlayedEpisodeExcludingExplicit:(long long)arg1;
- (id)mostRecentlyPlayedEpisode;
- (id)episodeToResume;
- (BOOL)updateCursorPosition:(BOOL)arg1;
- (id)sortDescriptorsForPlayOrder;
- (id)sortDescriptorsForSortOrder;
@property(nonatomic) long long showTypeSetting; // @dynamic showTypeSetting;
- (BOOL)isSerialShowTypeInFeed;
- (long long)showTypeInFeedResolvedValue;
- (long long)showTypeResolvedValue;
@property(retain, nonatomic) NSString *webpageURL; // @dynamic webpageURL;
@property(retain, nonatomic) NSString *showTypeInFeed; // @dynamic showTypeInFeed;
@property(retain, nonatomic) NSString *imageURL; // @dynamic imageURL;
@property(nonatomic) double updateAvg; // @dynamic updateAvg;
@property(nonatomic) double updateStdDev; // @dynamic updateStdDev;
@property(nonatomic) double feedChangedDate; // @dynamic feedChangedDate;
@property(retain, nonatomic) NSString *itemDescription; // @dynamic itemDescription;
@property(retain, nonatomic) NSString *author; // @dynamic author;
@property(nonatomic) long long flags; // @dynamic flags;
@property(nonatomic) BOOL needsArtworkUpdate;
@property(nonatomic) double modifiedDate; // @dynamic modifiedDate;
@property(nonatomic) double lastDatePlayed; // @dynamic lastDatePlayed;
@property(nonatomic) BOOL importing;
@property(nonatomic) long long deletePlayedEpisodes; // @dynamic deletePlayedEpisodes;
@property(nonatomic) BOOL hasBeenSynced;
- (void)markPlaylistsForUpdate;
- (id)currentFeedURL;
- (long long)mt_syncID;

// Remaining properties
@property(nonatomic) double addedDate; // @dynamic addedDate;
@property(readonly, nonatomic) BOOL autoDownload; // @dynamic autoDownload;
@property(nonatomic) int autoDownloadType; // @dynamic autoDownloadType;
@property(retain, nonatomic) NSString *category; // @dynamic category;
@property(nonatomic) long long darkCount; // @dynamic darkCount;
@property(nonatomic) long long darkCountLocal; // @dynamic darkCountLocal;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) double downloadedDate; // @dynamic downloadedDate;
@property(nonatomic) long long episodeLimit; // @dynamic episodeLimit;
@property(retain, nonatomic) NSSet *episodes; // @dynamic episodes;
@property(retain, nonatomic) NSString *feedURL; // @dynamic feedURL;
@property(readonly) unsigned long long hash;
@property(nonatomic) BOOL hidden; // @dynamic hidden;
@property(nonatomic) long long keepEpisodes; // @dynamic keepEpisodes;
@property(nonatomic) double lastStoreEpisodesInfoCheckDate; // @dynamic lastStoreEpisodesInfoCheckDate;
@property(nonatomic) double lastStorePodcastInfoCheckDate; // @dynamic lastStorePodcastInfoCheckDate;
@property(nonatomic) double lastTouchDate; // @dynamic lastTouchDate;
@property(retain, nonatomic) NSString *nextEpisodeUuid; // @dynamic nextEpisodeUuid;
@property(nonatomic) BOOL notifications; // @dynamic notifications;
@property(retain, nonatomic) NSSet *playlistSettings; // @dynamic playlistSettings;
@property(retain, nonatomic) NSSet *playlists; // @dynamic playlists;
@property(retain, nonatomic) NSString *provider; // @dynamic provider;
@property(nonatomic) BOOL showPlacardForOrphanedFromCloud; // @dynamic showPlacardForOrphanedFromCloud;
@property(nonatomic) BOOL showPlacardForRemovePlayedEpisodes; // @dynamic showPlacardForRemovePlayedEpisodes;
@property(nonatomic) BOOL showPlacardForSavedEpisodes; // @dynamic showPlacardForSavedEpisodes;
@property(nonatomic) long long sortOrder; // @dynamic sortOrder;
@property(retain, nonatomic) NSString *storeCleanURL; // @dynamic storeCleanURL;
@property(nonatomic) long long storeCollectionId; // @dynamic storeCollectionId;
@property(retain, nonatomic) NSString *storeShortURL; // @dynamic storeShortURL;
@property(readonly) Class superclass;
@property(retain, nonatomic) MTSyncInfo *syncInfo; // @dynamic syncInfo;
@property(nonatomic) long long updateInterval; // @dynamic updateInterval;
@property(nonatomic) double updatedDate; // @dynamic updatedDate;
@property(retain, nonatomic) NSString *uuid; // @dynamic uuid;

@end

