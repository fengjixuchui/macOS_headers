//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <CoreData/NSManagedObject.h>

#import "IMMetricsDataSource-Protocol.h"
#import "MTEpisodeIdentifierProvider-Protocol.h"

@class MTPodcast, MTSyncInfo, NSAttributedString, NSData, NSSet, NSString;
@protocol MTEpisodeIdentifier;

@interface MTEpisode : NSManagedObject <IMMetricsDataSource, MTEpisodeIdentifierProvider>
{
}

+ (void)parseAndPersistHTMLDescriptionIfNeededForEpisodeUuid:(id)arg1;
+ (BOOL)isExternalMedia:(id)arg1;
+ (BOOL)exists:(id)arg1;
+ (BOOL)isSaveSupported;
+ (long long)downloadSizeLimitForVideo:(BOOL)arg1;
+ (long long)downloadSizeLimitForEpisode:(id)arg1;
+ (id)timeRemainingStringForEpisode:(id)arg1 abbreviated:(BOOL)arg2;
+ (id)timeRemainingStringForEpisode:(id)arg1;
+ (id)friendlyPubDateStringForEpisode:(id)arg1 abbreviated:(BOOL)arg2;
+ (id)friendlyPubDateStringForEpisode:(id)arg1;
+ (id)dateLabelDescriptionForEpisode:(id)arg1 download:(id)arg2;
+ (id)episodeWithEnclosureURL:(id)arg1 inManagedObjectContext:(id)arg2;
+ (id)episodeWithMetadataIdentifier:(id)arg1 inManagedObjectContext:(id)arg2;
+ (void)prepareForPlatform:(id)arg1;
+ (id)insertNewEpisodeInManagedObjectContext:(id)arg1;
+ (id)insertNewEpisodeInManagedObjectContext:(id)arg1 title:(id)arg2 podcast:(id)arg3 pubDate:(id)arg4 byteSize:(long long)arg5 guid:(id)arg6 uti:(id)arg7 contentId:(long long)arg8 enclosureUrl:(id)arg9 playStateSource:(int)arg10 importSource:(int)arg11;
+ (id)predicateForEpisodesWithSeasonNumbersOnPodcastUuid:(id)arg1;
+ (id)predicateForSeasonNumber:(long long)arg1;
+ (id)predicateForHasSeasonNumber;
+ (id)predicateForEpisodeTitle:(id)arg1 onPodcastUuid:(id)arg2;
+ (id)predicateForEpisodeGuid:(id)arg1 onPodcastUuid:(id)arg2;
+ (id)predicateForEpisodeStoreTrackIds:(id)arg1;
+ (id)predicateForEpisodeStoreTrackId:(long long)arg1;
+ (id)predicateForMyEpisodesOnPodcastUuid:(id)arg1 ctx:(id)arg2;
+ (id)predicateForEpisodesOnUnplayedTabOnPodcastUuid:(id)arg1 ctx:(id)arg2;
+ (id)predicateForUserEpisodesOnPodcastUuid:(id)arg1 ctx:(id)arg2;
+ (id)predicateForEpisodesInStationShow:(id)arg1;
+ (id)predicateForNewEpisodesOnPodcastUuid:(id)arg1;
+ (id)predicateForEpisodesPublishedThisMonth;
+ (id)predicateForEpisodesPublishedThisWeek;
+ (id)predicateForEpisodesPublishedToday;
+ (id)predicateForPlaylistEpisodes;
+ (id)predicateForUserEpisodesOnPodcastUuid:(id)arg1 episodeLimit:(long long)arg2 deletePlayedEpisodes:(BOOL)arg3;
+ (id)predicateForEpisodesOnSavedTabForPodcastUuid:(id)arg1;
+ (id)predicateForEpisodesInFeedForPodcastUuid:(id)arg1;
+ (id)predicateForEpisodesOnUnplayedTabOnPodcastUuid:(id)arg1 episodeLimit:(long long)arg2 deletePlayedEpisodes:(BOOL)arg3;
+ (id)predicateForMyEpisodesOnPodcastUuid:(id)arg1 episodeLimit:(long long)arg2 deletePlayedEpisodes:(BOOL)arg3;
+ (id)predicateForEpisodesIsFromiTunesSyncOnPodcastUuid:(id)arg1;
+ (id)predicateForRecentlyPlayedEpisodesToBeDeletedOnPodcastUuid:(id)arg1 deletePlayedEpisodes:(BOOL)arg2;
+ (id)predicateForOtherEpisodesOnPodcastUuid:(id)arg1 limittedEpisodesPredicate:(id)arg2 deletePlayedEpisodes:(BOOL)arg3;
+ (id)predicateForIsCurrentlySyncable:(BOOL)arg1;
+ (id)predicateForEpisodeTypeFilter:(long long)arg1;
+ (id)predicateForEpisodeType:(long long)arg1;
+ (id)predicateForEpisodesImportedAfterDate:(id)arg1;
+ (id)predicateForEpisodeTitle:(id)arg1;
+ (id)predicateForHasValidPersistentId:(BOOL)arg1;
+ (id)predicateForPersistentIds:(id)arg1;
+ (id)predicateForPersistentId:(id)arg1;
+ (id)predicateForFeedURLs:(id)arg1;
+ (id)predicateForFeedURL:(id)arg1;
+ (id)predicateForEpisodeGuids:(id)arg1;
+ (id)predicateForEpisodeGuid:(id)arg1;
+ (id)predicateForEpisodeUuids:(id)arg1;
+ (id)predicateForEpisodeUuid:(id)arg1;
+ (id)predicateForHasBeenPlayed;
+ (id)predicateForRecentlyPlayed;
+ (id)predicateForExternalType:(BOOL)arg1;
+ (id)predicateForMetadataFirstSyncEligible:(BOOL)arg1;
+ (id)predicateForAudio:(BOOL)arg1;
+ (id)predicateForVideo:(BOOL)arg1;
+ (id)predicateForFeedDeleted:(BOOL)arg1;
+ (id)predicateForIsFromiTunesSync:(BOOL)arg1;
+ (id)predicateForDownloaded:(BOOL)arg1;
+ (id)predicateForPlayStateManuallySet:(BOOL)arg1;
+ (id)predicateForListenNow;
+ (id)predicateForUserEpisodes;
+ (id)predicateForEpisodesOnUnplayedTab;
+ (id)predicateForPreviouslyPlayedHidingFutureTimestamps;
+ (id)predicateForPreviouslyPlayed;
+ (id)predicateForVisuallyPlayed:(BOOL)arg1;
+ (id)predicateForIsBackCatalogItem;
+ (id)predicateForBacklog:(BOOL)arg1;
+ (id)predicateForSavedTab:(BOOL)arg1;
+ (id)predicateForUserEpisode:(BOOL)arg1;
+ (id)predicateForUnplayedTabFlag:(BOOL)arg1;
+ (id)predicateForPlayed:(BOOL)arg1;
+ (id)predicateForExplicit:(BOOL)arg1;
+ (id)predicateForSentNotification:(BOOL)arg1;
+ (id)predicateForIsNew:(BOOL)arg1;
+ (id)predicateForSuppressAutoDownload:(BOOL)arg1;
+ (id)predicateForSaved:(BOOL)arg1;
+ (id)predicateForPodcastIsHidden:(BOOL)arg1;
+ (id)predicateForSavedEpisodesOnPodcastUuid:(id)arg1;
+ (id)predicateForAllEpisodesOnPodcastUuid:(id)arg1;
+ (id)predicateForLimittedEpisodesOnPodcastUuid:(id)arg1 determinedByLimit:(long long)arg2 deletePlayedEpisodes:(BOOL)arg3;
+ (id)predicateForEpisodesDeterminedByLimitSettings:(long long)arg1;
+ (id)userDefaultPropertiesAffectingPredicates;
+ (BOOL)isPlayhead:(double)arg1 resumableForDuration:(double)arg2;
+ (double)endOfTrackForDuration:(double)arg1;
+ (id)propertyPathForPodcastProperty:(id)arg1;
+ (id)sortDescriptorsForSeasonsWithOldestEpisodesFirst:(BOOL)arg1;
+ (id)sortDescriptorsForListenNow;
+ (id)sortDescriptorsForTitle;
+ (id)sortDescriptorsForRecentlyPlayed;
+ (id)sortDescriptorsForLastDatePlayedAscending:(BOOL)arg1;
+ (id)sortDescriptorsForPubDateAscending:(BOOL)arg1;
+ (id)artworkForEpisodeUuid:(id)arg1 size:(struct CGSize)arg2;
- (id)metricsContentIdentifier;
@property(nonatomic) long long storeTrackId; // @dynamic storeTrackId;
- (BOOL)isCurrentPlayerItem;
- (BOOL)isSaved;
@property(nonatomic) BOOL saved; // @dynamic saved;
@property(nonatomic) BOOL listenNowEpisode; // @dynamic listenNowEpisode;
@property(nonatomic) double lastDatePlayed; // @dynamic lastDatePlayed;
@property(nonatomic) float playhead; // @dynamic playhead;
- (void)setPlayState:(long long)arg1 manually:(BOOL)arg2 source:(int)arg3;
- (void)setPlayed:(BOOL)arg1 manually:(BOOL)arg2 source:(int)arg3;
- (void)incremementPlayCount;
@property(nonatomic) long long playCount; // @dynamic playCount;
@property(nonatomic) BOOL metadataFirstSyncEligible; // @dynamic metadataFirstSyncEligible;
- (void)didChangePersistentID;
@property(retain, nonatomic) NSString *assetURL; // @dynamic assetURL;
@property(retain, nonatomic) NSString *uti; // @dynamic uti;
- (id)playedTextForCarplay;
- (id)playedText;
- (void)_setValue:(id)arg1 forKey:(id)arg2 asynchronously:(BOOL)arg3;
- (id)lazyDescriptionWithHTML:(BOOL)arg1;
@property(retain, nonatomic) NSString *itemDescription; // @dynamic itemDescription;
@property(retain, nonatomic) NSString *itunesSubtitle; // @dynamic itunesSubtitle;
- (BOOL)isInPodcastDetailsUnplayedTab;
- (BOOL)isInMyEpisodes;
- (unsigned long long)reasonForNotPlayable;
- (BOOL)isPlayable;
- (BOOL)isRestricted;
- (BOOL)isShareable;
@property(retain, nonatomic) NSString *author; // @dynamic author;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@property(retain, nonatomic) NSString *guid; // @dynamic guid;
- (void)updateUPPTimestamp;
- (void)updateUPPIdentifierIfNeeded;
- (BOOL)isMedia;
- (BOOL)isExternalType;
- (BOOL)isAudio;
- (BOOL)isVideo;
- (void)setIsTopLevelEpisode:(BOOL)arg1;
- (BOOL)isTopLevelEpisode;
- (id)displayURL;
- (id)playURL;
- (long long)episodeTypeResolvedValue;
- (BOOL)isTrailer;
- (BOOL)isBonus;
- (BOOL)isExplicit;
- (id)bestUrl;
- (void)_setAssetUrl:(id)arg1;
- (BOOL)isDownloaded;
- (BOOL)isPlayheadPartiallyPlayed;
- (BOOL)isPlayheadResumable;
- (double)endOfTrack;
- (double)timeRemaining;
- (double)playbackProgress;
- (BOOL)isPartiallyPlayedBackCatalogItem;
- (BOOL)isBackCatalogItem;
- (BOOL)isVisuallyPlayed;
- (BOOL)isUnplayed;
- (BOOL)isPartiallyPlayed;
- (BOOL)isPlayed;
- (id)bestSummary;
- (id)numberedTitle;
- (id)bestTitle;
@property(nonatomic) double pubDate; // @dynamic pubDate;
@property(nonatomic) long long trackNum; // @dynamic trackNum;
@property(nonatomic) double duration; // @dynamic duration;
@property(nonatomic) long long seasonNumber; // @dynamic seasonNumber;
@property(nonatomic) long long episodeNumber; // @dynamic episodeNumber;
@property(retain, nonatomic) NSString *webpageURL; // @dynamic webpageURL;
@property(retain, nonatomic) NSString *episodeType; // @dynamic episodeType;
@property(retain, nonatomic) NSString *itunesTitle; // @dynamic itunesTitle;
@property(nonatomic) BOOL isNew; // @dynamic isNew;
@property(nonatomic) long long episodeLevel; // @dynamic episodeLevel;
@property(nonatomic) BOOL explicit; // @dynamic explicit;
@property(retain, nonatomic) NSString *podcastUuid; // @dynamic podcastUuid;
@property(retain, nonatomic) NSString *enclosureURL; // @dynamic enclosureURL;
@property(nonatomic) long long byteSize; // @dynamic byteSize;
@property(retain, nonatomic) NSString *cleanedTitle; // @dynamic cleanedTitle;
@property(nonatomic) BOOL feedDeleted; // @dynamic feedDeleted;
@property(nonatomic) long long persistentID; // @dynamic persistentID;
@property(readonly, nonatomic) id <MTEpisodeIdentifier> episodeIdentifier;
- (BOOL)isEpisodeVisited;
- (BOOL)isLatestEpisodeInPodcast;
- (BOOL)isInUserEpisodes;
@property(retain, nonatomic) MTPodcast *podcast; // @dynamic podcast;
- (id)playStatusImageForDarkBackground:(BOOL)arg1;
- (id)playStatusImageForTheme:(id)arg1;
- (id)playStatusImage;
- (id)artworkWithSize:(struct CGSize)arg1;
- (long long)mt_syncID;

// Remaining properties
@property(nonatomic) BOOL audio; // @dynamic audio;
@property(nonatomic) BOOL backCatalog; // @dynamic backCatalog;
@property(retain, nonatomic) NSString *category; // @dynamic category;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) double downloadDate; // @dynamic downloadDate;
@property(retain, nonatomic) NSString *downloadPath; // @dynamic downloadPath;
@property(nonatomic) BOOL externalType; // @dynamic externalType;
@property(nonatomic) long long flags; // @dynamic flags;
@property(nonatomic) BOOL hasBeenPlayed; // @dynamic hasBeenPlayed;
@property(readonly) unsigned long long hash;
@property(nonatomic) double importDate; // @dynamic importDate;
@property(nonatomic) int importSource; // @dynamic importSource;
@property(nonatomic) BOOL isFromITunesSync; // @dynamic isFromITunesSync;
@property(nonatomic) BOOL itemDescriptionHasHTML; // @dynamic itemDescriptionHasHTML;
@property(retain, nonatomic) NSAttributedString *itemDescriptionWithHTML; // @dynamic itemDescriptionWithHTML;
@property(retain, nonatomic) NSString *itemDescriptionWithoutHTML; // @dynamic itemDescriptionWithoutHTML;
@property(nonatomic) double lastUserMarkedAsPlayedDate; // @dynamic lastUserMarkedAsPlayedDate;
@property(nonatomic) BOOL manuallyAdded; // @dynamic manuallyAdded;
@property(retain, nonatomic) NSString *metadataIdentifier; // @dynamic metadataIdentifier;
@property(nonatomic) double metadataTimestamp; // @dynamic metadataTimestamp;
@property(readonly, nonatomic) long long playState; // @dynamic playState;
@property(nonatomic) double playStateLastModifiedDate; // @dynamic playStateLastModifiedDate;
@property(readonly, nonatomic) BOOL playStateManuallySet; // @dynamic playStateManuallySet;
@property(readonly, nonatomic) long long playStateSource; // @dynamic playStateSource;
@property(retain, nonatomic) NSSet *playlists; // @dynamic playlists;
@property(retain, nonatomic) NSData *securityScopedAssetData; // @dynamic securityScopedAssetData;
@property(nonatomic) BOOL sentNotification; // @dynamic sentNotification;
@property(retain, nonatomic) NSSet *settings; // @dynamic settings;
@property(readonly) Class superclass;
@property(nonatomic) BOOL suppressAutoDownload; // @dynamic suppressAutoDownload;
@property(retain, nonatomic) MTSyncInfo *syncInfo; // @dynamic syncInfo;
@property(nonatomic) BOOL unplayedTab; // @dynamic unplayedTab;
@property(nonatomic) BOOL userDeleted; // @dynamic userDeleted;
@property(nonatomic) BOOL userEpisode; // @dynamic userEpisode;
@property(retain, nonatomic) NSString *uuid; // @dynamic uuid;
@property(nonatomic) BOOL video; // @dynamic video;
@property(nonatomic) BOOL visible; // @dynamic visible;

@end

