//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class HGMarkdownHighlightingStyle, NSArray, NSColor, NSDictionary, NSMutableArray, NSOperationQueue, NSTextView;

@interface HGMarkdownHighlighter : NSObject
{
    unsigned long long _clearFontTraitMask;
    struct pmh_Element **_cachedElements;
    NSOperationQueue *_parseHighlightsQueue;
    BOOL _styleDependenciesPending;
    NSMutableArray *_styleParsingErrors;
    double _defaultTextSize;
    BOOL _parseAndHighlightAutomatically;
    BOOL _isActive;
    BOOL _resetTypingAttributes;
    BOOL _makeLinksClickable;
    int _extensions;
    NSArray *_styles;
    HGMarkdownHighlightingStyle *_currentLineStyle;
    double _waitInterval;
    NSTextView *_targetTextView;
    NSColor *_defaultTextColor;
    NSDictionary *_defaultTypingAttributes;
}

@property(retain) NSDictionary *defaultTypingAttributes; // @synthesize defaultTypingAttributes=_defaultTypingAttributes;
@property(copy) NSColor *defaultTextColor; // @synthesize defaultTextColor=_defaultTextColor;
@property int extensions; // @synthesize extensions=_extensions;
@property BOOL makeLinksClickable; // @synthesize makeLinksClickable=_makeLinksClickable;
@property BOOL resetTypingAttributes; // @synthesize resetTypingAttributes=_resetTypingAttributes;
@property BOOL isActive; // @synthesize isActive=_isActive;
@property BOOL parseAndHighlightAutomatically; // @synthesize parseAndHighlightAutomatically=_parseAndHighlightAutomatically;
@property(retain, nonatomic) NSTextView *targetTextView; // @synthesize targetTextView=_targetTextView;
@property double waitInterval; // @synthesize waitInterval=_waitInterval;
@property(retain) HGMarkdownHighlightingStyle *currentLineStyle; // @synthesize currentLineStyle=_currentLineStyle;
@property(copy, nonatomic) NSArray *styles; // @synthesize styles=_styles;
- (void).cxx_destruct;
- (void)deactivate;
- (void)activate;
- (void)highlightNow;
- (void)parseAndHighlightNow;
- (void)applyStylesFromStylesheet:(id)arg1 withErrorHandler:(CDUnknownBlockType)arg2;
- (void)handleStyleParsingError:(id)arg1;
- (id)getDefaultSelectedTextAttributes;
- (void)applyStyleDependenciesToTargetTextView;
- (id)getDefaultStyles;
- (void)textViewDidScroll:(id)arg1;
- (void)textViewTextDidChange:(id)arg1;
- (void)clearElementsCache;
- (void)cacheElementList:(struct pmh_Element **)arg1;
- (void)clearHighlighting;
- (void)applyVisibleRangeHighlighting;
- (void)applyHighlighting:(struct pmh_Element **)arg1 withRange:(struct _NSRange)arg2;
- (void)readClearTextStylesFromTextView;
- (void)clearHighlightingForRange:(struct _NSRange)arg1;
- (unsigned long long)getClearFontTraitMask:(unsigned long long)arg1;
- (void)requestParsing;
- (void)convertOffsets:(struct pmh_Element **)arg1 text:(id)arg2;
- (struct pmh_Element **)parseText:(id)arg1;
- (id)initWithTextView:(id)arg1 waitInterval:(double)arg2 styles:(id)arg3;
- (id)initWithTextView:(id)arg1 waitInterval:(double)arg2;
- (id)initWithTextView:(id)arg1;
- (id)init;

@end

