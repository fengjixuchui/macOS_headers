//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MTKView.h"

@class NSColor, NSImage, NSMutableDictionary, NSRecursiveLock;

@interface CLgPlayheadViewMetal : MTKView
{
    NSRecursiveLock *drawingLock;
    struct CGPoint currentPlayheadPos;
    struct CGRect playheadRectGap;
    BOOL isVertical;
    double currentBackingScaleFactor;
    int playheadVisualState;
    float blurFraction;
    float SPLAlpha;
    float SPLAlphaPlusPulsing;
    BOOL kindDidChange;
    BOOL colorDidChange;
    BOOL widthDidChange;
    BOOL gapDidChange;
    BOOL rectDidChange;
    int forceRedrawCount;
    struct os_unfair_lock_s playheadLock;
    struct PlayheadManagement playhead;
    struct __CVDisplayLink *displayLink;
    float previousXPos;
    float previousYPos;
    struct CGRect previousBounds;
    struct CGRect previousPlayheadGap;
    double previousBackingScaleFactor;
    struct CGRect previousDrawnRect;
    struct CGRect previousDrawnRect2;
    struct CGRect previousDrawnRect3;
    id currentSPLImage;
    struct CGSize playheadImageSize;
    struct CGSize currentSPLImageSize;
    NSMutableDictionary *playheadImageCache;
    id <MTLCommandQueue> commandQueue;
    id <MTLRenderPipelineState> pipeline1SPLState;
    id <MTLRenderPipelineState> pipeline2BlurState;
    id <MTLBuffer> verticesVertBuffer;
    id <MTLBuffer> verticesHorBuffer;
    id <MTLTexture> texture;
    // Error parsing type: {?="viewPortSize""position"}, name: vertexShadPars
    struct {
        float alpha;
        float a;
        float d;
        float playheadGapY;
    } fragmentShadPars;
    // Error parsing type: [24{?="position""textureCoordinate"}], name: quadVerticesVert
    // Error parsing type: [4{?="position""textureCoordinate"}], name: quadVerticesHor
    NSColor *shadowColor;
    int _inLiveResize;
    BOOL _isWide;
    int _playheadKind;
    int _playheadVariant;
    NSColor *_color;
    NSImage *_triangleImage;
    struct CGRect _playheadRect;
}

+ (id)createViewWithFrame:(struct CGRect)arg1 inWindow:(id)arg2;
@property(nonatomic) BOOL isWide; // @synthesize isWide=_isWide;
@property(retain, nonatomic) NSImage *triangleImage; // @synthesize triangleImage=_triangleImage;
@property(retain, nonatomic) NSColor *color; // @synthesize color=_color;
@property(nonatomic) struct CGRect playheadRect; // @synthesize playheadRect=_playheadRect;
@property(nonatomic) int playheadVariant; // @synthesize playheadVariant=_playheadVariant;
@property(nonatomic) int playheadKind; // @synthesize playheadKind=_playheadKind;
@property(nonatomic) BOOL isVertical; // @synthesize isVertical;
@property struct CGPoint currentPlayheadPos; // @synthesize currentPlayheadPos;
@property(nonatomic) int playheadVisualState; // @synthesize playheadVisualState;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)configureForLiveResize:(BOOL)arg1;
- (void)reshapeVertexes;
- (void)updatePlayheadImageForced:(BOOL)arg1;
- (void)updatePlayheadImage;
- (struct CGImage *)playheadImageOfSize:(struct CGSize)arg1 playheadKind:(int)arg2 playheadVariant:(int)arg3 color:(id)arg4 backingScaleFactor:(double)arg5 isWide:(BOOL)arg6;
- (void)loadTextureWithImage:(id)arg1;
- (void)updateFuturePositionsFromPlayhead:(struct PlayheadManagement *)arg1 SPLsize:(struct CGSize)arg2;
- (void)forceSPLPositioningNowToIndex0;
- (void)resetSPLFuturePositions;
- (BOOL)getInterpolatedFuturePlayheadPosition:(CDStruct_3f0684ed *)arg1 atTime:(double)arg2;
- (void)updateVisualStateMachine;
- (void)drawPlayheadInRect:(struct CGRect)arg1 color:(id)arg2;
- (void)redrawNowSyncOnMainThread;
- (void)clearBackground;
- (void)renderPlayheadAtXpos:(double)arg1 ypos:(double)arg2;
- (_Bool)optimNeedsRedrawAtCurrentPlayheadPos;
- (void)drawSuper;
- (void)draw;
- (void)drawInMTKView:(id)arg1;
- (void)mtkView:(id)arg1 drawableSizeWillChange:(struct CGSize)arg2;
- (_Bool)shouldGapBeVisible;
- (void)stopDisplayLink;
- (void)startDisplayLink;
- (void)forceRedrawsAtNextUpdates:(int)arg1;
- (void)forceRedrawAtNextUpdate;
- (void)unhidePlayhead;
- (void)hidePlayhead;
- (void)hidePlayheadUntilNextPositionUpdateOrExplicitUnhide;
@property(nonatomic) struct CGRect playheadRectGap;
- (void)updateScreenScaleFactor;
- (void)handleScreenChanges:(id)arg1;
- (void)unregisterForScreenChangeNotifications;
- (void)registerForScreenChangeNotifications;
- (BOOL)isOpaque;
- (void)viewDidMoveToWindow;
- (void)viewDidChangeBackingProperties;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 device:(id)arg2;
- (_Bool)drawsOnMainThread;
- (void)setDrawsOnMainThread:(BOOL)arg1;
- (void)updateMetalSubsystem;

@end

