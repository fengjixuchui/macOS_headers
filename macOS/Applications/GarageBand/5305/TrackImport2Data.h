//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSOutlineViewDataSource.h"
#import "NSOutlineViewDelegate.h"

@class NSString, TrackImport2OutlineViewObject, TrackImportAssignments, TrackImportCore;

@interface TrackImport2Data : NSObject <NSOutlineViewDelegate, NSOutlineViewDataSource>
{
    BOOL _closeSong;
    short _trackNameFormat;
    TrackImport2OutlineViewObject *_rootObject;
    TrackImport2OutlineViewObject *_destinationArrangeRootObject;
    TrackImportCore *_trackImportCore;
    TrackImportAssignments *_trackImportAssignments;
    struct CDocumentLogic *_sourceDocument;
    struct CDocumentLogic *_destinationDocument;
    long long _songError;
    long long _alternativeIndex;
    NSString *_sourceDocumentPath;
}

@property(nonatomic) short trackNameFormat; // @synthesize trackNameFormat=_trackNameFormat;
@property(nonatomic) BOOL closeSong; // @synthesize closeSong=_closeSong;
@property(retain, nonatomic) NSString *sourceDocumentPath; // @synthesize sourceDocumentPath=_sourceDocumentPath;
@property(nonatomic) long long alternativeIndex; // @synthesize alternativeIndex=_alternativeIndex;
@property(nonatomic) long long songError; // @synthesize songError=_songError;
@property(nonatomic) struct CDocumentLogic *destinationDocument; // @synthesize destinationDocument=_destinationDocument;
@property(nonatomic) struct CDocumentLogic *sourceDocument; // @synthesize sourceDocument=_sourceDocument;
@property(retain, nonatomic) TrackImportAssignments *trackImportAssignments; // @synthesize trackImportAssignments=_trackImportAssignments;
@property(retain, nonatomic) TrackImportCore *trackImportCore; // @synthesize trackImportCore=_trackImportCore;
@property(retain, nonatomic) TrackImport2OutlineViewObject *destinationArrangeRootObject; // @synthesize destinationArrangeRootObject=_destinationArrangeRootObject;
@property(retain, nonatomic) TrackImport2OutlineViewObject *rootObject; // @synthesize rootObject=_rootObject;
- (BOOL)outlineView:(id)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldCollapseItem:(id)arg2;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (struct TrackImportOptions)trackImportOptions;
- (void)setTrackImportOptions:(struct TrackImportOptions)arg1;
- (void)import;
- (void)importObject:(id)arg1;
- (void)uncheckImportButtonStates;
- (void)uncheckImportButtonStatesForObject:(id)arg1;
- (void)countNumberOfSelectedInstTracks:(long long *)arg1 audioTracks:(long long *)arg2 forObject:(id)arg3;
- (BOOL)checkIfSmpteRelevantObject:(id)arg1;
- (BOOL)navigateIntoItem:(id)arg1;
- (void)loadProjectSettingsWithValues:(id)arg1;
- (void)dealloc;
- (long long)setSourceDocumentWithSongPath:(id)arg1 alternativeIndex:(long long)arg2;
- (id)menuWithDestinationArrangeRootObjectForObjectType:(int)arg1;
- (void)updateDestinationArrangeRootObject;
- (void)loadArrangeTracksWithCSong:(struct CSong *)arg1 seqID:(int)arg2 scanFolders:(BOOL)arg3 toObject:(id)arg4;
- (void)loadFolderWithCSong:(struct CSong *)arg1 posOneBasedDisplayedTrackNr:(struct TPosOneBasedTrackNr)arg2 posOneBasedTrackNr:(struct TPosOneBasedTrackNr)arg3 seqID:(int)arg4 collapseLevelObjects:(id *)arg5 toObject:(id)arg6;
- (void)addMixerChannelStripsToObject:(id)arg1;
- (void)addGlobalTracksToObject:(id)arg1;
- (id)initWithSongPath:(id)arg1 destinationDocument:(struct CDocumentLogic *)arg2 alternativeIndex:(long long)arg3;
- (int)destinationSeqID;
- (struct CSong *)destinationSong;
- (struct CSong *)sourceSong;
- (BOOL)isAnimalTrackUUID:(struct CUUID)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

