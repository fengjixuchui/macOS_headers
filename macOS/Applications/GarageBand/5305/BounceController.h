//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "SmallModalDialogController.h"

#import "NSOpenSavePanelDelegate.h"

@class NSButton, NSMatrix, NSPopUpButton, NSString, NSTabView, NSTableView, NSTextField, SegmentedScrubber;

@interface BounceController : SmallModalDialogController <NSOpenSavePanelDelegate>
{
    SegmentedScrubber *startPosition;
    SegmentedScrubber *endPosition;
    NSMatrix *bounceMode;
    NSTableView *destination;
    NSTabView *tabView;
    NSPopUpButton *pcmFileFormat;
    NSPopUpButton *pcmResolution;
    NSPopUpButton *pcmSampleRate;
    NSPopUpButton *pcmStereoFileType;
    NSPopUpButton *pcmDithering;
    NSButton *pcmAddToAudioWindow;
    NSButton *pcmAddToiTunes;
    NSButton *pcmKeepTaggingAndTransientsChunk;
    NSButton *pcmKeepCategoriesChunk;
    NSPopUpButton *auMP3BitRateMono;
    NSPopUpButton *auMP3BitRateStereo;
    NSButton *auMP3UseVBR;
    NSPopUpButton *auMP3Quality;
    NSButton *auMP3UseBestEncoding;
    NSButton *auMP3Filter;
    NSPopUpButton *auMP3StereoMode;
    NSButton *auMP3WriteID3Tags;
    NSButton *auMP3ID3Settings;
    NSButton *mp3AddToiTunes;
    NSButton *m4aAddToiTunes;
    NSPopUpButton *m4aCodec;
    NSPopUpButton *m4aBitRate;
    NSButton *m4aWriteVBR;
    NSButton *cddaSimulateWriteOnly;
    NSButton *cddaWriteMultiSession;
    NSPopUpButton *cddaDevices;
    NSPopUpButton *cddaSpeed;
    NSPopUpButton *cddaDithering;
    NSTextField *cddaStatus;
    NSPopUpButton *cddaDVDAMode;
    NSTextField *cddaComment;
    NSTextField *requires;
    NSTextField *fadeInOutTitle;
    NSTextField *fadeInOutValue;
    NSPopUpButton *normalize;
    NSButton *addEffectTail;
    NSButton *bounce2ndCyclePass;
    NSButton *cancelButton;
    NSButton *bounceButton;
    struct CBounce *pBounce;
}

+ (int)showWithParams:(struct CBounce *)arg1;
+ (id)nibName;
- (void)change_bounce2ndCyclePass:(id)arg1;
- (void)change_addEffectTail:(id)arg1;
- (void)change_normalize:(id)arg1;
- (void)change_bounceMode:(id)arg1;
- (void)change_locator:(id)arg1;
- (BOOL)isDVDApossible;
- (BOOL)isCDDApossible;
- (void)changePCMsettingsForDVDA;
- (BOOL)surroundTypeAllowsDVDA:(BOOL)arg1;
- (void)change_cddaDVDAMode:(id)arg1;
- (void)change_cddaSpeed:(id)arg1;
- (void)change_cddaDevice:(id)arg1;
- (void)change_cddaWriteMultiSession:(id)arg1;
- (void)change_cddaSimulateWriteOnly:(id)arg1;
- (void)click_auMP3ID3Settings:(id)arg1;
- (void)change_auMP3WriteID3Tags:(id)arg1;
- (void)change_auMP3StereoMode:(id)arg1;
- (void)change_auMP3Filter:(id)arg1;
- (void)change_auMP3UseBestEncoding:(id)arg1;
- (void)change_auMP3Quality:(id)arg1;
- (void)change_auMP3UseVBR:(id)arg1;
- (void)change_auMP3BitRateStereo:(id)arg1;
- (void)change_auMP3BitRateMono:(id)arg1;
- (void)change_pcmKeepCategoriesChunk:(id)arg1;
- (void)change_pcmKeepTaggingAndTransientChunks:(id)arg1;
- (void)change_pcmAddToAudioWindow:(id)arg1;
- (void)change_pcmDithering:(id)arg1;
- (void)change_pcmStereoFileType:(id)arg1;
- (void)change_pcmSampleRate:(id)arg1;
- (void)change_pcmResolution:(id)arg1;
- (void)change_pcmFileFormat:(id)arg1;
- (void)change_addToiTunes:(id)arg1;
- (void)change_m4aWriteVBR:(id)arg1;
- (void)change_m4aBitRate:(id)arg1;
- (void)change_m4aCodec:(id)arg1;
- (void)change_destination:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableViewSelectionDidChange:(id)arg1;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)change_fadeInOutValue:(id)arg1;
- (void)updateUI;
- (void)click_OK:(id)arg1;
- (BOOL)panel:(id)arg1 validateURL:(id)arg2 error:(id *)arg3;
- (BOOL)validateSettings;
- (BOOL)cddaMediaValid:(long long *)arg1;
- (void)updateSubView;
- (void)updateRequires;
- (void)setSubView;
- (void)drNotificationReceived:(id)arg1;
- (void)close;
- (void)dealloc;
- (void)awakeFromNib;
- (void)resetParams;
- (void)replace:(id)arg1 with:(id)arg2;
- (id)createClockScrubberForScrubber:(id)arg1 theFormatter:(id)arg2;
- (id)timecodeScrubberWithFrame:(struct CGRect)arg1 smpteFormate:(int)arg2 formatter:(id)arg3;
- (id)createTimecodeScrubberForScrubber:(id)arg1 pSong:(struct CSong *)arg2 theFormatter:(id)arg3;
- (void)setScrubberValues;
- (void)removeObservers;
- (void)addObservers;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

