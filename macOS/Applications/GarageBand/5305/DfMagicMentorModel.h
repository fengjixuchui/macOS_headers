//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class DfDocument, NSDictionary, NSMutableDictionary;

@interface DfMagicMentorModel : NSObject
{
    NSMutableDictionary *_data;
    DfDocument *_document;
    BOOL _needsToCloseDocument;
    BOOL _alwaysDisableRecord;
    int _angleAlternativeFormat;
    NSDictionary *_cachedInputSources;
}

+ (void)setStaticMonitorState:(int)arg1;
+ (int)staticMonitorState;
+ (id)localizedLanguageForLanguage:(id)arg1;
+ (id)englishNameForCurrentLanguage;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (void)initialize;
@property BOOL alwaysDisableRecord; // @synthesize alwaysDisableRecord=_alwaysDisableRecord;
- (long long)shouldSwitchTrackAssignOff:(void *)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)handleUndoRedoNotification:(id)arg1;
- (void)handleDriverChanged:(id)arg1;
@property BOOL voiceOverWasSetByUser;
@property BOOL subtitleWasSetByUser;
- (void)setAutomaticViewSwitchingEnabled:(BOOL)arg1;
- (BOOL)isAutomaticViewSwitchingEnabled;
- (void)setAlternativeScoreMode:(BOOL)arg1;
- (BOOL)alternativeScoreMode;
- (id)activeScoreTrack;
- (void)setActiveScoreTrackIndex:(int)arg1;
- (int)activeScoreTrackIndex;
- (unsigned int)scoreTracksCount;
- (id)mentorGroup;
- (void)prepareForExport;
- (void)_removeAllSuperfluousSongPartsOnExport;
- (void)inputLevelForDisplayOnLevelMeterLeft:(float *)arg1 right:(float *)arg2;
- (void)_cleanupMarkerNameForMarker:(id)arg1;
- (id)description;
- (void)createMixerDefaults;
- (void)restoreMixerDefaults;
- (void)setInitialRecordingTrackVolumes;
- (id)mentorVersionString;
- (BOOL)disableCountIn;
- (BOOL)aoi;
- (BOOL)tempoScaleDontMutesVocal;
- (id)songTitle;
- (id)artistURL;
- (id)artistName;
- (id)document;
- (id)documentName;
- (BOOL)isLTP;
- (BOOL)isMagicOnly;
- (BOOL)isKeyboard;
- (BOOL)isGuitar;
- (id)songType;
- (BOOL)exportAsMagicMentorProjectToURL:(id)arg1 error:(id *)arg2;
- (BOOL)exportAsGBProjectToURL:(id)arg1 error:(id *)arg2;
- (void)setLeftCycle:(long long)arg1 rightCycle:(long long)arg2;
- (void)setPosition:(long long)arg1;
- (int)tempoScaleQuality;
- (void)setTempoScaleQuality:(int)arg1;
- (float)tempoScale;
- (void)setTempoScale:(float)arg1;
@property BOOL showAssessmentResults;
@property BOOL showRealtimeAssessmentResults;
- (void)removeRecordingsAndResultsForAllSongParts;
- (void)removeRecordingsAndResultsForCurrentSongPart;
@property unsigned long long currentDataBaseEntryIndex;
- (id)assessmentDatabase;
- (id)assessmentGroup;
- (id)assessmentResultTrack;
- (id)assessmentExceptionTrack;
- (id)regionOfTypeInCurrentSongPart:(int)arg1;
- (unsigned long long)assessmentStandardReferenceTrackIndex;
- (void)_removeRecordingsForCurrentSongPart;
- (void)_removeAssessmentResultsForCurrentSongPart;
- (void)_removeRecordingsForAllSongParts;
- (void)_removeAssessmentResultsForAllSongParts;
- (void)_removeRecordingsBetweenStartClock:(long long)arg1 endClock:(long long)arg2;
- (void)_removeAssessmentResultsBetweenStartClock:(long long)arg1 endClock:(long long)arg2;
- (id)recordingGroup;
- (id)recordingTrack;
- (id)magicGarageBandSongPart;
- (unsigned int)magicGarageBandSongPartIndex;
- (void)selectSongPartAtIndex:(int)arg1;
- (unsigned int)selectedSongPartIndex;
- (id)selectedSongPart;
- (BOOL)isSelectedSongPartMagicPart;
- (BOOL)selectedSongPartIsPlayPart;
- (id)songParts;
- (id)voiceOverGroup;
- (int)alternateVideoAngleDeselectedTrack;
- (void)setAlternateVideoAngleActive:(BOOL)arg1;
- (BOOL)isAlternateVideoAngleActive;
- (BOOL)hasAlternateVideoAngle;
- (void)selectSubtitleTrackForCurrentSystemLanguage;
- (void)setCurrentSubtitleTrackWithName:(id)arg1;
- (void)setCurrentSubtitleTrackFromInfo:(id)arg1;
- (id)currentSubtitleTrackInfo;
- (id)subtitleTrackInfos;
- (id)defaultSubtitleTrackInfo;
- (id)_subtitleTrackInfos;
- (id)subtitleTracks;
- (id)movie;
- (unsigned long long)indexForInstrumentGroup:(id)arg1;
- (id)myInstrumentGroup;
- (id)instrumentGroupAtIndex:(unsigned long long)arg1;
- (id)instrumentGroups;
- (unsigned long long)instrumentGroupsCount;
- (void)close;
- (void)dealloc;
- (id)initWithContentsOfURL:(id)arg1 error:(id *)arg2;
- (id)initWithDocument:(id)arg1 error:(id *)arg2;
- (void)_deregisterTrackeditingCallback;
- (void)_registerTrackeditingCallback;
- (void)_selectInputIndexFromPreferences;
- (void)_updateAssessmentDatabaseSongPart;
- (void)_createAssessmentGroup;
- (BOOL)_setupAssessmentEnvironment;
- (void)_resetMidiThruLoopFlag;
- (void)_repairBrokenMentorSelectedTracks;
- (void)_restoreGroupSelectedTracks;
- (void)_removeKeyValueObservers;
- (void)_addKeyValueObservers;
- (void)_selectInitialSubtitleTrack;
- (void)_updateCachedInputSources;
- (BOOL)_parseDocument:(id *)arg1;
- (BOOL)_resetRecEnabledStates:(id *)arg1;
- (BOOL)_checkForTempoScalePlugin:(id *)arg1;
- (BOOL)_parseSongParts:(id *)arg1;
- (id)_parseDfMarkerName:(id)arg1 error:(id *)arg2;
- (BOOL)_parseInstrumentGroups:(id *)arg1;
- (BOOL)_parseSongType:(id *)arg1;
- (BOOL)_validateMovie:(id *)arg1;
- (void)_setDocument:(id)arg1;
- (BOOL)_isDocumentWorkingCopy:(id)arg1;
- (void)_resetPersistentMagicMementoForDocument:(id)arg1;
- (void)selectInputSource:(id)arg1;
- (id)activeInputSource;
- (id)inputSources;
- (void)setNilValueForKey:(id)arg1;
- (id)valueForUndefinedKey:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)defaultValueForUndefinedKey:(id)arg1;
- (BOOL)muteStateForSelectedTrackInInstrumentGroupAtIndex:(unsigned long long)arg1;
- (BOOL)muteStateForSelectedTrackInInstrumentGroup:(id)arg1;
- (void)setMuteStateForSelectedTrack:(BOOL)arg1 inInstrumentGroupAtIndex:(unsigned long long)arg2;
- (void)setMuteStateForSelectedTrack:(BOOL)arg1 inInstrumentGroup:(id)arg2;
- (BOOL)soloStateForSelectedTrackInInstrumentGroupAtIndex:(unsigned long long)arg1;
- (BOOL)soloStateForSelectedTrackInInstrumentGroup:(id)arg1;
- (void)setSoloStateForSelectedTrack:(BOOL)arg1 inInstrumentGroupAtIndex:(unsigned long long)arg2;
- (void)setSoloStateForSelectedTrack:(BOOL)arg1 inInstrumentGroup:(id)arg2;
- (void)selectTrackAtIndex:(unsigned long long)arg1 inInstrumentGroupAtIndex:(unsigned long long)arg2;
- (void)selectTrackAtIndex:(unsigned long long)arg1 inInstrumentGroup:(id)arg2;

@end

