//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSSecureCoding.h"

@class DfChord, DfClip, DfDocument, DfEvent, DfFlexMarker, DfMarker, DfObjectSolo, DfRegion, DfTrack, NSImage, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;

@interface DfBasicArrangeModel : NSObject <NSSecureCoding>
{
    DfDocument *m_Document;
    int m_MainFolderID;
    BOOL m_MainFolderIsRootFolder;
    DfRegion *m_MainFolderRegion;
    BOOL m_IsChangingMainFolder;
    NSMutableDictionary *m_TracksDict;
    NSMutableDictionary *m_RootTracksDict;
    NSMutableArray *m_TracksArray;
    NSMutableArray *m_VisibleTracksArray;
    NSMutableArray *m_VisibleRootTracksArray;
    NSMutableArray *m_MainAndRootAndSpecialTracks;
    NSMutableArray *m_RootTracksArray;
    NSMutableArray *m_RootRegions;
    NSMutableArray *m_Regions;
    NSMutableSet *m_SelectedRegions;
    NSMutableSet *m_SelectedRootRegions;
    NSMutableSet *m_AutomaticLoopedRegions;
    NSMutableArray *m_RecordingRegions;
    NSMutableArray *m_Markers;
    NSMutableArray *m_TimeSignatures;
    NSMutableArray *m_Chords;
    DfTrack *m_MasterTrack;
    DfTrack *m_MediaTrack;
    DfTrack *m_ghostTrack;
    DfTrack *m_CurrentTrack;
    DfTrack *m_preCurrentTrack;
    DfTrack *m_preCurrentSamplerTrack;
    DfRegion *m_CurrentRegion;
    DfMarker *m_CurrentMarker;
    DfEvent *m_CurrentEvent;
    unsigned long long m_CurrentEventIndex;
    DfFlexMarker *m_CurrentFlexMarker;
    long long m_CurrentSnapClock;
    long long m_SelectionClock[3];
    unsigned int m_hasSelectedObjects:1;
    CDStruct_b40ec427 m_VisibleClockRange[3];
    CDStruct_0060c59e m_RegionEditLimits;
    unsigned int m_RegionMoveTransaction:1;
    unsigned int m_RegionStartClockTransaction:1;
    unsigned int m_RegionEndClockTransaction:1;
    unsigned int m_RegionLoopEndClockTransaction:1;
    unsigned long long m_EventCounter;
    unsigned long long m_SelectedEventCounter;
    struct _LgScore *m_Score;
    BOOL m_currentActiveChordTrackingEnabled;
    DfChord *m_currentActiveChord;
    long long m_currentActiveChordIndex;
    DfChord *m_currentActiveChordNext;
    DfClip *m_currentActiveArrangeClip;
    long long m_currentActiveArrangeClipSPL;
    DfObjectSolo *m_objectSoloHelper;
    long long m_CurrentRecordingInitialStartClock;
    unsigned int m_caughtByUser:1;
    unsigned int m_isInEditMode:1;
    int m_currentEditAction;
    NSImage *m_arrangeMarkerCarryover;
    NSImage *m_masterTrackMarkerCarryover;
    BOOL m_countIn;
    BOOL m_metronom;
    BOOL m_isRecordingAudio;
    DfTrack *m_RecordingMidiTrack;
    int m_TrappedRecordingRegions;
    BOOL m_flexEnabled;
    BOOL m_shouldUpdateFlexModes;
    BOOL m_spotEraseEnabled;
    BOOL m_shouldTempMuteRegionsOnCurrentTrackWhilePlaying;
    BOOL m_shouldTempMuteRegionsOnCurrentTrackWhileRecording;
    int m_LCDDisplayMode;
    int m_quantizeMode[3];
    int m_quantizeGroup[3];
    char m_quantizeAutomatic[3];
    BOOL m_snapToGrid;
    long long m_BarClockInterval[3];
    long long m_BeatClockInterval[3];
    long long m_TickClockInterval[3];
    float m_BarInterval[3];
    float m_BeatInterval[3];
    float m_TickInterval[3];
    float m_LastZoomIndex[3];
    double m_SongPartsLeftNeighborWindowMaxSize[3];
    double m_SongPartsRightNeighborWindowMaxSize[3];
    double m_SongPartsLeftNeighborWindowEffectiveSize[3];
    double m_SongPartsRightNeighborWindowEffectiveSize[3];
    long long m_CoordClockOffset[3];
    float m_CoordOffset[3];
    int m_firstVisibleSongPartMarkerID;
    int m_lastVisibleSongPartMarkerID;
    long long m_firstVisibleSongPartMarkerStartClockBeforeUndoRedo;
    BOOL m_effectiveVisibleSongPartMarkerIDsWhileMainFolderIsNotRootAreSet;
    int m_effectiveFirstVisibleSongPartMarkerIDWhileMainFolderIDIsNotRoot;
    int m_effectiveLastVisibleSongPartMarkerIDWhileMainFolderIDIsNotRoot;
    long long m_ArrangeVisibleAndEditingOverwriteEndClock;
    BOOL m_moveAutomationDataEnabled;
    NSMutableArray *m_preparedFreezeTracks;
    NSMutableArray *m_preFreezeMutedTracks;
    BOOL m_freezeWasCanceled;
    BOOL m_stopAfterFreeze;
    BOOL m_PasteLocationIsActiveArrangeClipAbsoluteSPL;
    int m_CurrentlyAddingOrDuplicatingTrackCounter;
    int m_useRoundForMainFolderEndClockAdjustment;
    short m_SignatureIsOddHack;
    BOOL m_DisablePostTrackOrRegionWillBeDeletedFromModelNotification;
    float m_ZoomIndex[3];
    float m_ZoomIndexMin[3];
    float m_ZoomIndexMax[3];
    BOOL m_mediaTrackIsVisible;
    int m_mediaTrackType;
    NSMutableDictionary *m_mediaProperties;
    NSMutableArray *m_MediaMarkers;
    int m_midiEditorType;
    long long m_ArrangeSPLVisibility;
    long long m_lastGrid;
    BOOL m_lastChromatic;
    NSString *m_movieFullPathBackup;
    BOOL m_TrackRecordEnableIsVisible;
    BOOL _shouldAutoCreateGenInstRegionsIfNeeded;
    BOOL _shouldAutoInitializeCreatedGenInstRegions;
}

+ (int)mapLegacyStringBasedChannelBrowserIconID:(id)arg1 inputMethodKey:(id)arg2;
+ (id)tempDocument;
+ (void)setTempDocument:(id)arg1;
+ (BOOL)shouldForceChannelToNoTransposeMode:(id)arg1;
+ (BOOL)deletePersistentIntersongClipboardIfExists;
+ (BOOL)loadPersistentIntersongClipboardIntoCurrentClipboardIfExists;
+ (BOOL)saveSongClipboardToPersistentIntersongClipboardIfNeccessary:(id)arg1;
+ (id)interSongClipboardBundleName;
+ (id)interSongClipboardFolder;
+ (BOOL)pasteClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2 onNewTracksIntoDocument:(id)arg3 deleteTracksWithKnownUUIDs:(BOOL)arg4;
+ (id)getSamplerFilesFileNamesFromSamplerInstrumentFile:(id)arg1;
+ (id)getSamplerInstrumentFileNamesFromCurrentLogicClipboard;
+ (id)getAudioFileNamesFromCurrentLogicClipboard:(BOOL)arg1 filterOutLibraryContent:(BOOL)arg2;
+ (BOOL)getTracksClippedFlagForClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2;
+ (id)saveAllRegionsOfDocument:(id)arg1 intoClipboardBundleAtFolderPath:(id)arg2 withName:(id)arg3 includeAudioAndSamplerFiles:(BOOL)arg4 overwriteExisting:(BOOL)arg5 auditableTracksOnly:(BOOL)arg6 maxTrackCount:(long long)arg7 outNumberOfTracks:(long long *)arg8 outMaxTrackCountNotEnough:(char *)arg9 unmutedSessionTrackUUIDsInTargetSong:(id)arg10 mutedSessionTrackUUIDsInTargetSong:(id)arg11;
+ (long long)getNumberOfTracksInCurrentClipboard;
+ (id)getSamplerFilesFolderPathForClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2;
+ (id)getSamplerInstrumentsFolderPathForClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2;
+ (id)getAudioFolderPathForClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2;
+ (id)getDataFilePathForClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2;
+ (id)saveCurrentClipboardToClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2 includeAudioAndSamplerFiles:(BOOL)arg3 overwriteExisting:(BOOL)arg4 additionalMetaData:(id)arg5;
+ (id)getRelativePathFromFullBundleResourcePath:(id)arg1 explicitBundleName:(id)arg2 keepBundleName:(BOOL)arg3;
+ (id)getContentBundleNameFromFullPath:(id)arg1;
+ (id)_bundlePathComponentSearchString:(id)arg1;
+ (id)getFullPathFromRelativeLibraryPath:(id)arg1;
+ (BOOL)fileReferenceIsFromLibraryBundle:(id)arg1 includeAdditionalContentBundles:(BOOL)arg2;
+ (id)fixLibraryFileReferenceToLocalLibraryBundleIfNeccessary:(id)arg1 includeAdditionalContentBundles:(BOOL)arg2;
+ (BOOL)loadClipboardWithClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2 outAdditionalMetaData:(id *)arg3;
+ (BOOL)loadClipboardWithClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2;
+ (BOOL)existsClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2;
+ (BOOL)deleteClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2;
+ (id)clipboardBundleExtension;
+ (id)getLogicObjectsPasteboardFlagsDictionary;
+ (BOOL)checkInstalledPackageIDsForLogicObjectsPasteboard:(id)arg1;
+ (id)getInstalledPackageIDsForLogicObjectsPasteboard;
+ (void)setLogicObjectsPasteboardFlagsFromDictionary:(id)arg1 audioFilesPath:(id)arg2 samplerFilesRootPath:(id)arg3;
+ (void)resetLogicObjectsPasteboardFlags;
+ (BOOL)currentPasteboardIsFromDocument:(id)arg1;
+ (BOOL)_specialMarkerExistsInPasteboard;
+ (BOOL)specialMarkerExistsInPasteboard;
+ (void)prepareLocalSongPasteboard;
+ (void)removeSpecialPasteboardType;
+ (void)addSpecialPasteboardType;
+ (float)standardZoomIndexMax:(int)arg1;
+ (float)standardZoomIndexMin:(int)arg1;
+ (id)libraryChannelStripFullPathForInputMethodKey:(id)arg1 andChannelStripFileName:(id)arg2;
+ (Class)trackClass;
+ (Class)regionClass;
+ (long long)newDocumentBarCount;
+ (void)initialize;
+ (BOOL)supportsSecureCoding;
+ (BOOL)useSongParts;
+ (id)mediaTrackNameForType:(int)arg1;
@property(nonatomic) BOOL shouldAutoInitializeCreatedGenInstRegions; // @synthesize shouldAutoInitializeCreatedGenInstRegions=_shouldAutoInitializeCreatedGenInstRegions;
@property(nonatomic) BOOL shouldAutoCreateGenInstRegionsIfNeeded; // @synthesize shouldAutoCreateGenInstRegionsIfNeeded=_shouldAutoCreateGenInstRegionsIfNeeded;
@property(nonatomic) BOOL disablePostTrackOrRegionWillBeDeletedFromModelNotification; // @synthesize disablePostTrackOrRegionWillBeDeletedFromModelNotification=m_DisablePostTrackOrRegionWillBeDeletedFromModelNotification;
@property(nonatomic) BOOL shouldTempMuteRegionsOnCurrentTrackWhileRecording; // @synthesize shouldTempMuteRegionsOnCurrentTrackWhileRecording=m_shouldTempMuteRegionsOnCurrentTrackWhileRecording;
@property(nonatomic) BOOL shouldTempMuteRegionsOnCurrentTrackWhilePlaying; // @synthesize shouldTempMuteRegionsOnCurrentTrackWhilePlaying=m_shouldTempMuteRegionsOnCurrentTrackWhilePlaying;
@property(nonatomic) BOOL spotEraseEnabled; // @synthesize spotEraseEnabled=m_spotEraseEnabled;
@property(nonatomic) BOOL stopAfterFreeze; // @synthesize stopAfterFreeze=m_stopAfterFreeze;
@property BOOL freezeWasCanceled; // @synthesize freezeWasCanceled=m_freezeWasCanceled;
@property BOOL shouldUpdateFlexModes; // @synthesize shouldUpdateFlexModes=m_shouldUpdateFlexModes;
@property(nonatomic) DfDocument *document; // @synthesize document=m_Document;
- (void).cxx_destruct;
- (void)updateSignatureIsOddHack;
- (void)setSignatureIsOddHack:(short)arg1;
- (BOOL)notify:(id)arg1;
- (void)inputEQWasEnabledForChannel:(id)arg1;
- (BOOL)isCaughtByUser;
- (void)setCaughtByUser:(BOOL)arg1;
- (void)endEdit:(int)arg1;
- (void)beginEdit:(int)arg1;
- (void)prepareSelectedRegionsForEditing:(BOOL)arg1;
- (BOOL)pasteLogicObjectsFromPasteBoard:(id)arg1;
- (BOOL)pasteLogicObjectsFromPasteBoard;
- (void)_setAffectedSPLAfterPaste:(long long)arg1;
- (long long)currentPasteClock;
- (void)setPasteLocationIsActiveArrangeClipAbsoluteSPL:(BOOL)arg1;
- (BOOL)specialPasteCurrentLogicClipbaordOnNewTracksAtClock:(long long)arg1;
- (void)_afterPaste:(BOOL)arg1;
- (void)_beforePaste;
- (void)copySelectedEventsFromRegionsOnTrackToPasteBoard:(id)arg1;
- (void)copySelectedLogicObjectsFromSeqToPasteBoard:(int)arg1;
- (BOOL)cutSelectedEventsOfType:(unsigned long long)arg1 fromRegionsOrAutomationOnTrackToPasteBoard:(id)arg2;
- (BOOL)cutSelectedLogicObjectsToPasteBoard:(int)arg1;
- (void)_fillCutCopyPasteHelpersWithCurrentInfoForSource:(int)arg1;
- (long long)lastCopyToPasteboardRegionMaxClock;
- (long long)lastCopyToPasteboardRegionMinClock;
- (id)lastCopyToPasteboardSourceTrackInputMethodKey;
- (BOOL)lastCopyToPasteBoardContainsPodcastRegions;
- (BOOL)lastCopyToPasteBoardContainsAudioRegions;
- (BOOL)lastCopyToPasteBoardContainsMidiRegions;
- (BOOL)lastCopyToPasteboardContainsRegionsFromMultipleTracks;
- (BOOL)lastCopyToPasteBoardContainsAudioClips;
- (BOOL)lastCopyToPasteBoardContainsMidiClips;
- (BOOL)lastCopyToPasteboardContainsClipsFromMultipleColumns;
- (BOOL)lastCopyToPasteboardContainsClipsFromMultipleTracks;
- (id)_lastCopyToPasteBoardDocumentRef;
- (int)lastCopyToPasteBoardSourceType;
- (void)resetLogicObjectsPasteboardFlags;
- (BOOL)deleteSelectedLogicObjects:(int)arg1;
- (BOOL)allowEditGlobal;
- (void)deleteSelectedItems:(BOOL)arg1;
- (void)abortEdit;
- (BOOL)isEditing;
- (void)quantizedClock:(long long)arg1 lowClock:(long long *)arg2 highClock:(long long *)arg3 quantizeType:(int)arg4;
- (void)quantizedClock:(long long)arg1 lowClock:(long long *)arg2 highClock:(long long *)arg3 withMode:(int)arg4;
- (int)getAutomaticQuantizeModeForClockMode:(int)arg1;
- (BOOL)isClockSnapEnabled;
- (long long)currentSnapClock;
- (void)setCurrentSnapClock:(long long)arg1;
- (void)updateAutomaticQuantizeModeIfNeededForClockMode:(int)arg1;
- (int)quantizeGroupForMode:(int)arg1;
- (void)setQuantizeGroup:(int)arg1 forMode:(int)arg2;
- (BOOL)snapToGridEnabled;
- (void)setSnapToGridEnabled:(BOOL)arg1;
- (BOOL)quantizeAutomaticEnabledForMode:(int)arg1;
- (void)setQuantizeAutomaticEnabled:(BOOL)arg1 forMode:(int)arg2;
- (int)quantizeModeForMode:(int)arg1;
- (void)setQuantizeMode:(int)arg1 forMode:(int)arg2;
- (float)calculateZoomIndexForCoordDistance:(double)arg1 betweenClock1:(long long)arg2 andClock2:(long long)arg3 forMode:(int)arg4 minIndex:(double)arg5 maxIndex:(double)arg6;
- (void)setZoomIndexWithoutAnyInternalUpdates:(float)arg1 forMode:(int)arg2 updateCoordOffset:(BOOL)arg3;
- (BOOL)setZoomIndexForCoordDistance:(double)arg1 betweenClock1:(long long)arg2 andClock2:(long long)arg3 forMode:(int)arg4 minIndex:(double)arg5 maxIndex:(double)arg6;
- (BOOL)setZoomIndexForCoordDistance:(double)arg1 betweenClock1:(long long)arg2 andClock2:(long long)arg3 forMode:(int)arg4;
- (double)coordDistanceBetweenClock1:(long long)arg1 andClock2:(long long)arg2 Mode:(int)arg3 onGrid:(int)arg4 abs:(BOOL)arg5;
- (float)lastZoomIndexForMode:(int)arg1;
- (float)zoomIndexMax:(int)arg1;
- (float)zoomIndexMin:(int)arg1;
- (void)setZoomIndexMin:(float)arg1 andMax:(float)arg2 forMode:(int)arg3;
- (void)setZoomIndex:(float)arg1 forMode:(int)arg2;
- (void)updateAutomaticSnapToGridEnableForMode:(int)arg1;
- (BOOL)isAtZoomIndexMinForMode:(int)arg1;
- (float)zoomIndexForMode:(int)arg1;
- (float)quantizeOffsetCoord:(float)arg1 withMode:(int)arg2 onGrid:(int)arg3;
- (float)quantizeCoord:(float)arg1 withMode:(int)arg2 onGrid:(int)arg3;
- (long long)gridPositionForClock:(long long)arg1 quantizeType:(int)arg2 direction:(int)arg3;
- (long long)gridPositionForClock:(long long)arg1 mode:(int)arg2 direction:(int)arg3;
- (long long)quantizeClock:(long long)arg1 withMode:(int)arg2 onGrid:(int)arg3;
- (BOOL)filterClock:(long long)arg1 toClock:(long long *)arg2 withMode:(int)arg3;
- (long long)clockForOffsetCoord:(float)arg1 Mode:(int)arg2 onGrid:(int)arg3;
- (long long)clockForCoord:(float)arg1 Mode:(int)arg2 onGrid:(int)arg3;
- (float)offsetCoordForClock:(long long)arg1 Mode:(int)arg2 onGrid:(int)arg3;
- (float)coordForClock:(long long)arg1 Mode:(int)arg2 onGrid:(int)arg3;
- (long long)clockFromDisplay:(float)arg1 Mode:(int)arg2;
- (float)clockToDisplay:(long long)arg1 Mode:(int)arg2;
- (float)offsetCoordForClock:(long long)arg1 Mode:(int)arg2 onGrid:(int)arg3 Alignment:(int)arg4;
- (float)coordForClock:(long long)arg1 Mode:(int)arg2 onGrid:(int)arg3 Alignment:(int)arg4;
- (float)coordOffsetForMode:(int)arg1;
- (long long)coordClockOffsetForMode:(int)arg1;
- (void)setCoordClockOffset:(long long)arg1 forMode:(int)arg2;
- (void)_updateCoordOffsetAndOtherHelpersForMode:(int)arg1;
- (BOOL)createUndoStepForRegion:(id)arg1 withString:(id)arg2 checkGrooveMaster:(BOOL)arg3;
- (void)createUndoStepForRegion:(id)arg1 withString:(id)arg2;
- (void)createUndoStepForTrackAutomationData:(id)arg1 withString:(id)arg2;
- (void)createUndoStepForTempoWithString:(id)arg1;
- (void)createUndoStepForTransposeWithString:(id)arg1;
- (void)createUndoStepWithPointerGroup:(int)arg1 andSeqID:(long long)arg2 withString:(id)arg3;
- (void)createUndoStepForMarkerWithString:(id)arg1;
- (void)createUndoStepForArrangeAndAutomationWithString:(id)arg1;
- (BOOL)createUndoStep:(id)arg1 checkGrooveMaster:(BOOL)arg2;
- (void)createUndoStep:(id)arg1;
- (void)automaticMasterTrackFadeOutNeedsUpdateIfAvailable;
- (BOOL)updateEndOfFolderWithIDToLatestRegions:(int)arg1 onlySelectedRegions:(BOOL)arg2;
- (BOOL)updateEndOfMainFolderMarker:(BOOL)arg1;
- (void)documentIsAboutToStartRecording:(BOOL)arg1;
- (void)documentIsAboutToStartPlaying:(BOOL)arg1;
- (void)quickStart;
- (void)tempMuteRegionsOnTrack:(id)arg1;
- (void)tempMuteRegionsOnCurrentTrack;
- (void)tempUnMuteAllRegionsInMainFolder;
- (BOOL)shouldUseRecordingTakesAndReplaceModeInsteadOfTakesMode;
- (void)documentDidStopRecording:(BOOL)arg1;
- (BOOL)_isTakeRecordingMode;
- (BOOL)shouldUseTakeRecordingFromSPL;
- (long long)takeRecordingCycleLength;
- (long long)takeRecordingCycleStart;
- (long long)movieEndClock;
- (void)updateDefaultCycleLength;
- (void)updateIdle;
- (void)handleClockDidUpdateAfterGlobalNotficicationWasSent;
- (void)updateClock:(long long)arg1;
- (void)updateCellRecClock:(long long)arg1;
- (void)updateScore;
- (void)update;
- (BOOL)mainFolderIsRootFolder;
- (void)setFolderEndClock:(long long)arg1 ofFolderWithID:(int)arg2 postNotification:(BOOL)arg3;
- (void)setMainFolderEndClock:(long long)arg1 postNotification:(BOOL)arg2;
- (long long)folderEndClock:(int)arg1;
- (long long)folderStartClock:(int)arg1;
- (long long)mainFolderEndClock;
- (long long)mainFolderStartClock;
- (void)_updateMainFolderRegion:(BOOL)arg1;
- (void)setMainFolderID:(int)arg1;
- (int)mainFolderID;
- (long long)currentRecordingInitialStartClock;
- (void)autoFixChannelStripFullPathForChannel:(id)arg1;
- (id)libraryChannelStripFullPathForTrack:(id)arg1 andChannelStripFileName:(id)arg2;
- (id)channelStripFolderBasePathForTrack:(id)arg1;
- (BOOL)userDidManuallyChangeTempo;
- (void)setUserDidManuallyChangeTempo:(BOOL)arg1;
- (void)disableAutomaticRecordingForLastSongPartIfNeeded;
- (long long)quantizedFolderAutomaticRecordingEndClockForClock:(long long)arg1 folderID:(int)arg2;
- (long long)quantizedMainfFolderAutomaticRecordingEndClockForClock:(long long)arg1;
- (BOOL)automaticRecordingIsActive;
- (BOOL)automaticRecordingIsActiveForFolderID:(int)arg1;
- (void)setAutomaticRecordingActiveForLastSongPart:(BOOL)arg1;
- (BOOL)isAutomaticRecordingActiveForLastSongPart;
- (BOOL)shouldRecordWithCycleRecordingIfCycleIsActive;
- (BOOL)shouldRecordWithMergeRecording;
- (int)getBounceStartClock:(long long *)arg1 andEndClock:(long long *)arg2 useCycle:(BOOL)arg3 shouldAddEffectTail:(char *)arg4;
- (id)movieFullPathBackup;
- (void)setMovieFullPathBackup:(id)arg1;
- (void)setLastChromatic:(BOOL)arg1;
- (BOOL)lastChromatic;
- (void)setLastGrid:(long long)arg1;
- (long long)lastGrid;
- (BOOL)countInEnabled;
- (void)setCountInEnabled:(BOOL)arg1;
- (BOOL)metronomEnabled;
- (void)setMetronomEnabled:(BOOL)arg1;
- (void)setMasterTrackVisible:(BOOL)arg1;
- (BOOL)masterTrackIsVisible;
- (id)undoManager;
- (void)setArrangeSPLVisibility:(long long)arg1;
- (long long)arrangeSPLVisibility;
- (long long)latestElementClock;
- (BOOL)recordingAudio;
- (int)midiEditorType;
- (void)setMidiEditorType:(int)arg1;
- (BOOL)isRecording;
- (void)setLCDDisplayMode:(int)arg1;
- (int)LCDDisplayMode;
- (void)setTrackOfScore:(id)arg1;
- (struct _LgScore *)score;
- (CDStruct_b40ec427)visibleClockRangeForMode:(int)arg1;
- (void)setVisibleClockRange:(CDStruct_b40ec427)arg1 forMode:(int)arg2;
- (long long)selectionClockforMode:(int)arg1;
- (void)setSelectionClock:(long long)arg1 forMode:(int)arg2;
- (BOOL)hasSelection;
- (void)clearSelection;
- (void)deselectAll;
@property(readonly, nonatomic) struct LGDOCUMENT *logicDocument;
- (void)dealloc;
- (void)close;
- (BOOL)newDocumentCreated;
- (id)initWithDocument:(id)arg1;
- (id)init;
- (void)importTempoListFromAudioRegion:(id)arg1;
- (void)autoAdjustLUFSRegionGainForSelectedAudioRegions;
- (id)currentRegionSoloRegion;
- (void)stopRegionSolo;
- (void)playRegionSolo:(id)arg1;
- (BOOL)exportComposition:(id)arg1 forTypes:(long long)arg2 onTrack:(id)arg3 andTrack:(id)arg4 withCreatorFlags:(unsigned long long)arg5 barClockStart:(long long)arg6;
- (void)refreshStatsInComposition:(id)arg1 minimumRegionStartLgClock:(long long)arg2 withCreatorFlags:(unsigned long long)arg3;
- (BOOL)applyAnalysisResults:(unsigned long long)arg1 forAudioRegion:(id)arg2 absoluteAlignmentClock:(long long)arg3 options:(long long)arg4;
- (BOOL)applyAnalysisResults:(unsigned long long)arg1 forAudioRegion:(id)arg2;
- (BOOL)getAnalysisResultsBasicBeatsClockInfo:(CDStruct_db489c38 *)arg1 forAudioRegion:(id)arg2;
- (id)createEmptyMidiRegionOnTrack:(id)arg1 withName:(id)arg2 basedOnAnalysisResultsOfRegion:(id)arg3 includeUpbeat:(BOOL)arg4 forceToAudioRegionEnd:(BOOL)arg5 createUndo:(BOOL)arg6 removeOverlaps:(BOOL)arg7;
- (id)createEmptyMidiRegionOnTrack:(id)arg1 withName:(id)arg2 clockStart:(long long)arg3 clockEnd:(long long)arg4 includeUpbeat:(BOOL)arg5 forceToAudioRegionEnd:(BOOL)arg6 createUndo:(BOOL)arg7 removeOverlaps:(BOOL)arg8;
- (id)convertSelectedAudioRegionToEasySamplerInstrument;
- (void)prepareRegionsTempMaxEndClocksBeforeTempoChanges:(BOOL)arg1 inFolder:(int)arg2;
- (void)_prepareRegionsTempMaxEndClocks:(id)arg1 theMaxClock:(long long)arg2 forceAllRegions:(BOOL)arg3;
- (void)resetRegionsTempMaxEndClocks;
- (BOOL)arrangeContainsAutomaticLoopedRegions;
- (BOOL)fillRegionGapOnTrack:(id)arg1 atClockWithEmptyRegionsIfNeeded:(long long)arg2 onlyInActiveSongParts:(BOOL)arg3 minClockLength:(long long)arg4 quantizeToBars:(BOOL)arg5;
- (long long)lengthOfRegionGapOnTrack:(id)arg1 atClock:(long long)arg2 onlyInActiveSongParts:(BOOL)arg3 quantizeToBars:(BOOL)arg4 outStartClock:(long long *)arg5;
- (id)createEmptyMidiRegionsOnTrack:(id)arg1 startClock:(long long)arg2 endClock:(long long)arg3 defaultPieceLength:(long long)arg4 minClockLength:(long long)arg5 quantizeToBars:(BOOL)arg6;
- (id)createEmptyMidiRegionOnTrack:(id)arg1 withName:(id)arg2 startClock:(long long)arg3 endClock:(long long)arg4 createUndo:(BOOL)arg5 removeOverlaps:(BOOL)arg6;
- (id)createEmptyMidiRegionOnTrack:(id)arg1 withName:(id)arg2 forNoteAtStartClock:(long long)arg3 length:(long long)arg4 createUndo:(BOOL)arg5 removeOverlaps:(BOOL)arg6 extendRegionToContainerFolderOrSongPartsSize:(BOOL)arg7;
- (void)deselectRegionsOfTrackWithID:(CDStruct_3d4e291e)arg1 betweenStartClock:(long long)arg2 andEndClock:(long long)arg3;
- (void)selectRegionsOfTrackWithID:(CDStruct_3d4e291e)arg1 betweenStartClock:(long long)arg2 andEndClock:(long long)arg3;
- (void)_setRegionsOfTrackWithID:(CDStruct_3d4e291e)arg1 betweenStartClock:(long long)arg2 andEndClock:(long long)arg3 selected:(BOOL)arg4;
- (void)deselectRegionsBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2;
- (void)selectRegionsBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2;
- (void)_setRegionsBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2 selected:(BOOL)arg3;
- (id)regionsBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2;
- (BOOL)glueSelectedRegions;
- (BOOL)divideSelectedRegionsAtClock:(long long)arg1 divideSelectionFlag:(int)arg2;
- (BOOL)divideSelectedRegionsAtClock:(long long)arg1;
- (void)divideRegionsBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2;
- (void)divideRegionsAndTrackEventsBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2;
- (id)midiRegionForSeqID:(long long)arg1;
- (void)setRegionsLoopEndClock:(long long)arg1;
- (void)setRegionsEndClock:(long long)arg1;
- (void)setRegionsStartClock:(long long)arg1;
- (void)moveRegionsToClock:(long long)arg1 andTrackNr:(int)arg2;
- (long long)relativeRegionLoopEndClock:(long long)arg1;
- (long long)relativeRegionEndClock:(long long)arg1;
- (int)relativeRegionTrackNr:(int)arg1;
- (long long)relativeRegionStartClock:(long long)arg1;
- (void)setNameOfSelectedRegions:(id)arg1 makeUndo:(BOOL)arg2;
- (long long)countRegionsOfTrack:(id)arg1;
- (long long)latestRegionEndClock:(BOOL)arg1;
- (struct _LgRegion *)regionHandleForID:(CDStruct_ae571156)arg1;
- (id)_regionForID:(CDStruct_ae571156)arg1 inArray:(id)arg2;
- (id)regionForID:(CDStruct_ae571156)arg1;
- (id)selectedRegionsIdenticalName;
- (unsigned long long)countSelectedRegions;
- (unsigned long long)hasSelectedRegions;
- (unsigned long long)countSelectedRegionsOfTrackID:(CDStruct_3d4e291e)arg1;
- (unsigned long long)countSelectedRegionsOfType:(int)arg1;
- (BOOL)hasSelectedRegionsOfType:(int)arg1;
- (void)deselectAllRegionsNotLocatedOnTrackWithID:(CDStruct_3d4e291e)arg1;
- (BOOL)selectAllRegionsOfTrackWithID:(CDStruct_3d4e291e)arg1 behindClock:(long long)arg2;
- (BOOL)selectAllRegionsFromClock:(long long)arg1;
- (void)deselectAllRegionsNotInActiveSongPartsOrNotOnTrack:(id)arg1;
- (void)deselectAllRegionsNotInActiveSongParts;
- (void)selectAllRegionsOfTrackWithID:(CDStruct_3d4e291e)arg1 onlyWithinActiveSongParts:(BOOL)arg2;
- (void)selectAllRegionsOfTrackWithID:(CDStruct_3d4e291e)arg1;
- (void)selectAllRegionsWithinActiveSongPartsOnTracks:(id)arg1;
- (void)selectAllRegionsWithinActiveSongParts;
- (void)deselectAllRegionsOfTrackWithID:(CDStruct_3d4e291e)arg1;
- (void)deselectAllRegionsExceptOfTrackWithID:(CDStruct_3d4e291e)arg1;
- (void)deselectAllRegions;
- (void)markAllRegions:(BOOL)arg1;
- (void)markSelectedRegions:(BOOL)arg1;
- (void)selectAllRegions;
- (void)deleteRegionsOnTrack:(id)arg1 hideTrack:(BOOL)arg2 unsoloTrack:(BOOL)arg3 makeUndo:(BOOL)arg4;
- (void)deleteRegionWithoutSE:(id)arg1;
- (void)setCurrentRegion:(id)arg1 selectTrack:(BOOL)arg2;
- (void)setCurrentRegion:(id)arg1 selectTrack:(BOOL)arg2 setSelectionClock:(BOOL)arg3;
- (void)setSelectedRegion:(id)arg1 as:(BOOL)arg2;
- (void)minAndMaxClockOfRegionsInFolderWithID:(int)arg1 selectedRegionsOnly:(BOOL)arg2 minClock:(long long *)arg3 maxClock:(long long *)arg4;
- (BOOL)restrictTrackChangeOfSelectedRegions:(int *)arg1;
- (void)updateRegionEditLimits;
- (void)resetRegionEditLimits;
- (CDStruct_0060c59e)regionEditLimits;
- (id)defaultNameForRegionsOnTrack:(id)arg1;
- (void)removeRecordingRegions;
- (void)createRecordingRegions;
- (BOOL)shouldCreateRecordingRegionForTrackEvenIfNotRecordEnabled:(id)arg1;
- (void)_createClipPerformanceRecordingRegionForTrack:(id)arg1 clip:(id)arg2 startClock:(long long)arg3;
- (id)recordingRegions;
- (void)c_newRootRegionCreated:(void *)arg1;
- (unsigned long long)totalRegionCount;
- (id)selectedRegion;
- (id)currentRegion;
- (id)automaticLoopedRegions;
- (id)selectedRootRegions;
- (id)rootRegions;
- (id)selectedRegions;
- (id)regions;
- (void)_copyRootRegionsIntoMainFolderRegionContainers;
- (void)_removeAllMainFolderRegionsFromModelAndNotifyAboutDeletion:(BOOL)arg1;
- (void)updateCurrentExistingRegions:(BOOL)arg1;
- (void)updateRegions;
- (id)_updateRegions:(BOOL)arg1;
- (void)_updateRegionsFromFolderWithID:(int)arg1 inContainer:(id)arg2 isRootRegionsExtraCollectRun:(BOOL)arg3;
- (int)mergeRegion:(struct _LgSongIterator *)arg1:(const struct _LgRegion *)arg2;
- (void)addAppSpecificAssetsMetaDataEntriesForSavingDocumentToDict:(id)arg1;
- (void)convertGenInstTracksAfterSongLoadIfNeeded;
- (void)_autoFixOriginalCSTPathsInArrangeRootTrackChannels;
- (void)songDidLoad;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setLastVisibleSongMarker:(id)arg1;
- (void)setFirstVisibleSongMarker:(id)arg1;
- (id)getSongPartsInfoArray;
- (BOOL)setSongPartStructureAndSongLengthFromSongPartsInfoArray:(id)arg1;
- (void)adjustSongPartsToBarlenghtsAfterSignatureChange:(id)arg1;
- (id)currentSongPartsBarlengths;
- (BOOL)canDuplicateSongPartWithMarkerIndex:(long long)arg1;
- (long long)availableBarCountSpaceLeftInSong;
- (BOOL)_adjustTempMaxEndClockRegionsOrSongPartBoundsOrSongEndAfterTempoChange:(int)arg1;
- (BOOL)adjustTempMaxEndClockRootRegionsOrSongPartBoundsOrSongEndAfterTempoChange;
- (BOOL)_trimRegionsToTempMaxEndClockIfNecessary:(id)arg1;
- (BOOL)adjustRegionsOrSongPartBoundsOrFolderEndInFolderWithID:(int)arg1 onlySelectedRegions:(BOOL)arg2 ignoreActiveSongParts:(BOOL)arg3;
- (BOOL)trimRegionsInFolder:(int)arg1 toMaxClock:(long long)arg2 onlySelected:(BOOL)arg3 skipAutoLoopedRegions:(BOOL)arg4;
- (BOOL)doOneShotAutoLoopForRegions:(id)arg1 onlySelectedRegions:(BOOL)arg2;
- (BOOL)doOneShotAutoLoopForSelectedRegionsInActiveSongPart;
- (id)_regionsInSongPartWithIndex:(long long)arg1 sourceRegions:(id)arg2 includingLeftOverlapping:(BOOL)arg3 andRightOperlapping:(BOOL)arg4 onlyForTrack:(id)arg5 onlyAudio:(BOOL)arg6;
- (id)rootRegionsInSongPartWithIndex:(long long)arg1 includingLeftOverlapping:(BOOL)arg2 andRightOperlapping:(BOOL)arg3 onlyForTrack:(id)arg4 onlyAudio:(BOOL)arg5;
- (id)regionsInSongPartWithIndex:(long long)arg1 includingLeftOverlapping:(BOOL)arg2 andRightOperlapping:(BOOL)arg3 onlyForTrack:(id)arg4 onlyAudio:(BOOL)arg5;
- (id)regionsInSongPartWithIndex:(long long)arg1 includingLeftOverlapping:(BOOL)arg2 andRightOperlapping:(BOOL)arg3 onlyForTrack:(id)arg4;
- (id)regionsInActiveSongPartsIncludingLeftOverlapping:(BOOL)arg1 andRightOperlapping:(BOOL)arg2 onlyForTrack:(id)arg3;
- (id)regionsInActiveSongPartsIncludingLeftOverlapping:(BOOL)arg1 andRightOperlapping:(BOOL)arg2;
- (double)songPartsRightNeighborWindowEffectiveSizeForMode:(int)arg1;
- (double)songPartsLeftNeighborWindowEffectiveSizeForMode:(int)arg1;
- (double)songPartsRightNeighborWindowMaxSizeForMode:(int)arg1;
- (double)songPartsLeftNeighborWindowMaxSizeForMode:(int)arg1;
- (void)setSongPartsRightNeighborWindowMaxSize:(double)arg1 forMode:(int)arg2;
- (void)setSongPartsLeftNeighborWindowMaxSize:(double)arg1 forMode:(int)arg2;
- (void)moveSongPartWithMarkerIndex:(long long)arg1 toNewIndex:(long long)arg2 makeUndo:(BOOL)arg3;
- (void)duplicateSongPartWithMarkerIndex:(long long)arg1 makeUndo:(BOOL)arg2;
- (void)setLengthOfSongPartWithMarkerIndex:(long long)arg1 toBarCount:(int)arg2 makeUndo:(BOOL)arg3;
- (void)deleteSongPartWithMarkerIndex:(long long)arg1 makeUndo:(BOOL)arg2 updateActiveSongPartsIfNecessary:(BOOL)arg3;
- (void)adjustLastSongPartLengthAndSongEndOrMainFolderEndToLatestRegionEndClock:(long long)arg1;
- (void)autoAdjustFolderLengthWithID:(int)arg1 selectedRegionsOnly:(BOOL)arg2;
- (void)adjustLastSongPartLengthAndSongEndOrMainFolderEndToLatestRegionEnd;
- (void)adjustLastSongPartLengthToSongEnd;
- (void)_setSongEndToLatestMarkerEndClock;
- (void)setSongEndToLatestMarkerEndClock;
- (void)returnSPLToPreviousRegionStartOnTrackOrActiveSongPartsStart:(id)arg1;
- (void)returnSPLToActiveSongPartsStart;
- (void)setSpeed:(float)arg1 ofRegionsInMainFolder:(id)arg2 removeOverLaps:(BOOL)arg3 respectActiveSongParts:(BOOL)arg4;
- (void)didChangeSpeedOfRegionsInMainFolder:(id)arg1 removeOverLaps:(BOOL)arg2 respectActiveSongParts:(BOOL)arg3;
- (void)prepareChangeSpeedOfRegionsInMainFolder:(id)arg1 respectActiveSongParts:(BOOL)arg2;
- (void)setFollowTempo:(BOOL)arg1 ofRegionsInMainFolder:(id)arg2 removeOverLaps:(BOOL)arg3 respectActiveSongParts:(BOOL)arg4;
- (void)_afterMultipleRegionsDidChangeLength_RemoveOverLaps:(BOOL)arg1 respectSongPartsAndSongEnd:(BOOL)arg2;
- (void)_prepareForMultipleRegionsWillChangeLength:(BOOL)arg1;
- (void)setTransposeOfRegionsInActiveSongParts:(long long)arg1 onTrack:(id)arg2 includeClips:(BOOL)arg3 includeActiveArrangeClip:(BOOL)arg4;
- (long long)getTransposeOfRegionsInActiveSongPartsOnTrack:(id)arg1 includeClips:(BOOL)arg2 includeActiveArrangeClip:(BOOL)arg3;
- (BOOL)canTransposeRegionsOnTrack:(id)arg1 includeClips:(BOOL)arg2 includeActiveArrangeClip:(BOOL)arg3;
- (void)quantizeRegionsInActiveSongParts:(int)arg1 onTrack:(id)arg2 includeClips:(BOOL)arg3 includeActiveArrangeClip:(BOOL)arg4;
- (int)getQuantizeTypeOfRegionsInActiveSongPartsOnTrack:(id)arg1 includeClips:(BOOL)arg2 includeActiveArrangeClip:(BOOL)arg3;
- (void)makeSongCompatibleForSongPartsIfNeccessary;
- (BOOL)shouldCreateGenInstRegionsForNewSongPartOrSongPartLengthChange;
- (void)addNewSongPartWithLength:(long long)arg1 makeUndo:(BOOL)arg2;
- (void)_checkIfSongPartsAreValid;
- (int)indexOfLastActiveSongPartMarker;
- (int)indexOfFirstActiveSongPartMarker;
- (BOOL)allOrLastSongPartIsActive;
- (BOOL)allSongPartsActive;
- (float)coordWidthOfActiveSongPartsForMode:(int)arg1;
- (long long)firstActiveSongPartStartClock;
- (long long)lastActiveSongPartEndClock;
- (long long)arrangeOriginalVisibleAndEditingEndClock;
- (long long)arrangeEffectiveVisibleAndEditingEndClock;
- (void)setArrangeVisibleAndEditingOverwriteEndClock:(long long)arg1 sendMainFolderEndChangedNotificationIfNecessary:(BOOL)arg2;
- (long long)arrangeVisibleAndEditingOverwriteEndClock;
- (BOOL)setSongPositionToActiveSongPartsEndIfNecessary;
- (BOOL)setSongPositionToActiveSongPartsStartIfNecessary;
- (BOOL)setSongPositionToSongPartStartWithIndexIfNecessary:(long long)arg1;
- (BOOL)setActiveSongPartToCurrentSPLPositionIfNecessary;
- (void)setActiveSongPartsFromMarkerIndex:(int)arg1 toMarkerIndex:(int)arg2 forceUpdate:(BOOL)arg3;
- (void)setActiveSongPartsFromMarkerIndex:(int)arg1 toMarkerIndex:(int)arg2;
- (void)setCycleAccordingToSongPartsFromMarkerIndex:(int)arg1 toMarkerIndex:(int)arg2;
- (void)updateCycleAccordingToActiveSongPartsOrMainFolder;
- (void)checkIfActiveSongPartsStillExistAndUpdateInternals:(BOOL)arg1;
- (void)_setCoordClockOffsetForSongPartMarker:(id)arg1 forMode:(int)arg2;
- (BOOL)setZoomIndexToFitActiveSongPartsInCoordDistance:(double)arg1 forMode:(int)arg2;
- (id)nameForNewSongPart;
- (void)clearAllButOneSongPartMarkers;
- (void)clearAllPartsMarkers;
- (void)glueSelectedMarkerMakeUndo:(BOOL)arg1;
- (void)setBorderOfCurrentMarker:(long long)arg1;
- (void)exchangeSelectedMarkerWith:(id)arg1;
- (BOOL)deleteSelectedMarkerMakeUndo:(BOOL)arg1;
- (BOOL)deleteContentOfSelectedMarkerMakeUndo:(BOOL)arg1;
- (BOOL)isMarkerDeletionAllowed;
- (void)applyMarkerChangeBorder;
- (void)beforeMarkerChangeBorderMakeUndo:(BOOL)arg1;
- (void)applyMarkerMove;
- (void)beforeMarkerMoveMakeUndo:(BOOL)arg1 withDivide:(BOOL)arg2;
- (void)sortMarkerFillGap;
- (void)sortMarker;
- (void)clearArrangementImagesForAllMarker;
- (id)masterTrackImageBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2;
- (id)arrangementImageBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2;
- (void)setArrangementImagesForAllMarker;
- (id)masterTrackMarkerCarryover;
- (id)arrangeMarkerCarryover;
- (id)regionsEnclosedByMarker:(id)arg1;
- (BOOL)isClockEnclosedBySelectedMarker:(long long)arg1;
- (id)markerAtClock:(long long)arg1;
- (long long)firstSelectedMarkerStartClock;
- (long long)latestSelectedMarkerEndClock;
- (long long)latestMarkerEndClock;
- (void)setMarkersEndClock:(long long)arg1;
- (void)setMarkersStartClock:(long long)arg1;
- (void)moveMarkersToClock:(long long)arg1 andTrack:(CDStruct_3d4e291e)arg2;
- (long long)relativeMarkerEndClock:(long long)arg1;
- (long long)relativeMarkerStartClock:(long long)arg1;
- (void)setNameOfSelectedMarkers:(id)arg1 makeUndo:(BOOL)arg2;
- (struct _LgMarker *)markerHandleForID:(int)arg1;
- (id)markerForID:(int)arg1;
- (unsigned long long)countSelectedMarker;
- (unsigned long long)countMarkers;
- (void)deselectAllMarkers;
- (void)markAllMarkers:(BOOL)arg1;
- (void)markSelectedMarkers:(BOOL)arg1;
- (void)selectAllMarkers;
- (void)setCurrentMarker:(id)arg1;
- (void)setCurrentMarker:(id)arg1 setSelectionClock:(BOOL)arg2;
- (void)setSelectedMarker:(id)arg1 as:(BOOL)arg2;
- (void)setSelectionOfASingleMarker:(id)arg1 as:(BOOL)arg2;
- (id)selectedMarker;
- (id)currentMarker;
- (id)addMarkerInTheGapBetweenLastMarkerAndSongEnd;
- (void)addMarkerBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2;
- (void)addMarker;
- (id)nameForNewMarker;
- (id)uniqueMarkerName:(id)arg1 andCount:(int)arg2;
- (id)markers;
- (void)updateMarker;
- (id)_updateMarker:(BOOL)arg1;
- (int)mergeMarker:(struct _LgSongIterator *)arg1:(const struct _LgMarker *)arg2;
- (id)timeSignatureForClock:(long long)arg1;
- (long long)indexOfTimeSignatureForClock:(long long)arg1;
- (id)timeSignatures;
- (void)updateTimeSignatures;
- (void)addNewTimeSignatureAtClock:(long long)arg1 beatsPerBar:(long long)arg2 beatDenom:(long long)arg3;
- (id)_updateTimeSignatures:(BOOL)arg1;
- (void)setMediaProperties:(id)arg1;
- (id)mediaProperties;
- (void)updateFlexQuantizeForRegions:(id)arg1;
- (void)updateFlexQuantizeForSelRegions;
- (BOOL)selectedRegionIsOnGrooveMaster;
- (BOOL)hasAudioRegionsWithoutTransients;
- (id)currentFlexMarker;
- (void)setCurrentFlexMarker:(id)arg1;
- (void)updateFlexMarkerBypassStatesInTracks:(id)arg1;
- (void)updateFlexModes;
- (void)setFlexEnabled:(BOOL)arg1;
- (BOOL)isFlexEnabled;
- (void)moveSelectedChords:(long long)arg1;
- (void)deleteSelectedChords;
- (void)selectAllChords;
- (void)deselectAllChords;
- (void)_setAllChordsSelected:(BOOL)arg1;
- (void)clearChordTrack;
- (void)setCurrentActiveChordTrackingEnabled:(BOOL)arg1;
- (BOOL)currentActiveChordTrackingEnabled;
- (void)_updateCurrentActiveChord:(BOOL)arg1;
- (id)currentActiveChord;
- (id)chordForClock:(long long)arg1;
- (long long)indexOfChordForClock:(long long)arg1;
- (id)chords;
- (void)updateChords;
- (id)addNewChordAtClock:(long long)arg1;
- (id)addChordWithCChordRef:(void *)arg1 atClock:(long long)arg2;
- (id)_updateChords:(BOOL)arg1;
- (void)resetUIMarkedFlagsOfAllEventsInRegionsOnTrack:(id)arg1;
- (void)deselectAllEvents;
- (BOOL)hasSelectedEventOfType:(unsigned long long)arg1;
- (void)updateCurrentEvent;
- (void)setCurrentEvent:(id)arg1 index:(unsigned long long)arg2;
- (void)setCurrentEvent:(id)arg1;
- (unsigned long long)currentEventIndex;
- (id)currentEvent;
- (void)operationOfTrack:(id)arg1 operation:(int)arg2 andType:(unsigned long long)arg3;
- (long long)minAndMaxOfNoteEventsOfTrack:(id)arg1 minClock:(long long *)arg2 maxClock:(long long *)arg3 minValue:(long long *)arg4 maxValue:(long long *)arg5 onlySelected:(BOOL)arg6 clampToRegionBounds:(BOOL)arg7;
- (void)minAndMaxClockOfSelectedEventsOfTrack:(id)arg1 minClock:(long long *)arg2 maxClock:(long long *)arg3 type:(unsigned long long)arg4 andFilter:(struct _LgEventFilter *)arg5;
- (void)minAndMaxClockOfEventsOfTrack:(id)arg1 minClock:(long long *)arg2 maxClock:(long long *)arg3 type:(unsigned long long)arg4 andFilter:(struct _LgEventFilter *)arg5;
- (void)updateSelectedEventsOfTrack:(id)arg1 andType:(unsigned long long)arg2;
- (BOOL)hasTrackEvents:(id)arg1 ofType:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (unsigned long long)countEventsOfTrack:(id)arg1 type:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (BOOL)hasTrackSelectedEvents:(id)arg1 ofType:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (unsigned long long)countSelectedEventsOfTrack:(id)arg1 type:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (void)deselectAllEventsOfTrack:(id)arg1 type:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (void)selectAllEventsOfTrack:(id)arg1 andType:(unsigned long long)arg2;
- (void)selectAllEventsOfTrack:(id)arg1 type:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3 startClock:(long long)arg4 endClock:(long long)arg5;
- (id)createArrayOfTrackEventsFromTrack:(id)arg1 withFilter:(struct _LgEventFilter *)arg2 betweenStartClock:(long long)arg3 andEndClock:(long long)arg4;
- (id)createArrayOfEventsFromTrack:(id)arg1 ofType:(unsigned long long)arg2 withFilter:(struct _LgEventFilter *)arg3 betweenStartClock:(long long)arg4 andEndClock:(long long)arg5 scoreHandle:(struct _LgScore *)arg6;
- (id)createArrayOfEventsFromTrack:(id)arg1 ofType:(unsigned long long)arg2 withFilter:(struct _LgEventFilter *)arg3 betweenStartClock:(long long)arg4 andEndClock:(long long)arg5;
- (BOOL)faderEventsControlWAHPedal:(id)arg1 onGuitarTrack:(id)arg2;
- (void)deleteFaderEventsInRegionsOnTrack:(id)arg1 withUndoString:(id)arg2;
- (id)collectFaderEventNumbersInRegionsOnTrack:(id)arg1;
- (BOOL)regionsOnTrackContainFaderEvents:(id)arg1;
- (void)deleteFaderEventsInSelectedRegionsWithUndoString:(id)arg1;
- (id)collectFaderEventNumbersInSelectedRegions;
- (BOOL)selectedRegionsContainFaderEvents;
- (BOOL)selectEventsFromRegion:(id)arg1 startClock:(long long)arg2 endClock:(long long)arg3 lowerValue:(long long)arg4 upperValue:(long long)arg5 minNoteLength:(long long)arg6 withFilter:(struct _LgEventFilter *)arg7 withMode:(int)arg8 ofType:(unsigned long long)arg9 Mark:(int)arg10 singleSelection:(BOOL)arg11;
- (void)operationOfRegion:(id)arg1 operation:(int)arg2 andType:(unsigned long long)arg3;
- (void)minAndMaxOfNoteEventsOfRegion:(id)arg1 minClock:(long long *)arg2 maxClock:(long long *)arg3 minValue:(long long *)arg4 maxValue:(long long *)arg5 onlySelected:(BOOL)arg6;
- (void)minAndMaxClockOfSelectedEventsOfRegion:(id)arg1 minClock:(long long *)arg2 maxClock:(long long *)arg3 andType:(unsigned long long)arg4;
- (void)minAndMaxClockOfEventsOfRegion:(id)arg1 minClock:(long long *)arg2 maxClock:(long long *)arg3 andType:(unsigned long long)arg4;
- (void)updateSelectedEventsOfRegion:(id)arg1 andType:(unsigned long long)arg2;
- (void)minVelocityofSelectedNoteEvents:(long long *)arg1 andMaxVelocity:(long long *)arg2 inRegion:(id)arg3;
- (BOOL)hasRegionEvents:(id)arg1 ofType:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (unsigned long long)countEventsOfRegion:(id)arg1 type:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (BOOL)hasRegionSelectedEvents:(id)arg1 ofType:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (unsigned long long)countSelectedEventsOfRegion:(id)arg1 type:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (void)deselectAllEventsOfRegion:(id)arg1 type:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (void)selectAllEventsOfRegion:(id)arg1 andType:(unsigned long long)arg2;
- (void)selectAllEventsOfRegion:(id)arg1 type:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (id)createArrayOfTransientFromRegion:(id)arg1 betweenStartClock:(long long)arg2 andEndClock:(long long)arg3;
- (id)createArrayOfFlexEventsFromRegion:(id)arg1 withFilter:(struct _LgEventFilter *)arg2 betweenStartClock:(long long)arg3 andEndClock:(long long)arg4;
- (id)createArrayOfNoteEventsFromRegion:(id)arg1 withFilter:(struct _LgEventFilter *)arg2 betweenStartClock:(long long)arg3 andEndClock:(long long)arg4;
- (id)createArrayOfControllerEventsFromRegion:(id)arg1 withControllerNumber:(CDStruct_5115be14)arg2 betweenStartClock:(long long)arg3 andEndClock:(long long)arg4;
- (int)c_UpdateCurrentEvent:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_UpdateSelectedEventCounter:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_UpdateSelectedEvents:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_MinMaxOfNotes:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_MinMaxClockOfEvents:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_MinMaxClockOfSelectedEvents:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_MinMaxVelocityOfSelectedEvents:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_Select:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_Deselect:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_AutomationHitTest:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_ControllerHitTest:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_ScoreHitTest:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_NoteHitTest:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_CollectFlexEvents:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_CollectTransients:(struct _LgSongIterator *)arg1:(const struct _LgTransient *)arg2;
- (int)c_CollectEvents:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_CountEvents:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_CountSelectedEvents:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (void)afterEventIterate;
- (void)beforeEventIterate;
- (BOOL)isMoveAutomationDataEnabled;
- (void)setMoveAutomationDataEnabled:(BOOL)arg1;
- (void)removeNotSupportedRootTracksAndGridRowsForGridImportedRowsWithInstIDs:(id)arg1;
- (void)localizeRootTrackNamesAndAffectedGridRowsWithInstIDs:(id)arg1;
- (BOOL)shouldUseCellRecordingEngine;
- (void)notifyActiveArrangeClipAboutChangedContentIfNecessary;
- (void)_deferredNotifyActiveArrangeClipAboutChanged;
- (BOOL)defaultTransposeLockedValueForClip:(id)arg1 pCanBeChangedInUI:(char *)arg2;
- (BOOL)defaultTransposeLockedValueForClip:(id)arg1;
- (void)setActiveArrangeClipSPL:(long long)arg1;
- (long long)activeArrangeClipSPL;
- (void)_updateBufferedCurrentActiveArrangeClipSPL:(BOOL)arg1;
- (void)_handleClipEventForClip:(id)arg1 event:(int)arg2 clock:(long long)arg3;
- (id)activeArrangeClip;
- (void)setActiveArrangeClip:(id)arg1;
- (id)addNewArrangeTracksForMidiFileImportIfNeccesaryForFileAtPath:(id)arg1 modifyMainSongSettingsIfPossible:(BOOL)arg2;
- (void)setupMidiFileImportedTracksWithInstIDToProgChangeMapping:(id)arg1;
- (void)setDefaultTrackEqFreqsIfNecessaryForTrack:(id)arg1;
- (void)convertLegacyTracksWhileSongLoadingIfNeeded;
- (BOOL)multiTrackRecordingActive;
- (void)_checkAndResetSoloSafeStatesOfRootTracksIfNeeded;
- (void)convertGenInstTrackAndRegionsToNormalMidiTrackForTracksWithInstID:(int)arg1;
- (id)createNewAudioTrackForSubMixBouncingResultAndMakeUndo:(BOOL)arg1;
- (id)bounceSingleTrack:(id)arg1 toFileAtPath:(id)arg2;
- (void)deleteMultipleTracks:(id)arg1 makeUndo:(BOOL)arg2 undoStepName:(id)arg3;
- (id)duplicateTrack:(id)arg1 addNewTrackAtEndOfList:(BOOL)arg2;
- (id)duplicateTrack:(id)arg1;
- (void)_decCurrentlyAddingOrDuplicatingTrackCounter:(BOOL)arg1;
- (void)_incCurrentlyAddingOrDuplicatingTrackCounter;
- (BOOL)currentlyAddingOrDuplicatingTrack;
- (id)createTrackOfType:(int)arg1 withChannelStrip:(id)arg2 andNumberOfChannels:(unsigned long long)arg3 atTrackIndex:(long long)arg4 inputMethodKey:(id)arg5 makeUndo:(BOOL)arg6 categoryName:(id)arg7 chStripName:(id)arg8;
- (id)createTrackOfType:(int)arg1 withChannelStrip:(id)arg2 andNumberOfChannels:(unsigned long long)arg3 atTrackIndex:(long long)arg4 inputMethodKey:(id)arg5 makeUndo:(BOOL)arg6;
- (id)defaultInputMethodKeyForLoopTrack:(id)arg1;
- (void)setMediaTrackType:(int)arg1 preventClearOfTrack:(BOOL)arg2;
- (void)setMediaTrackType:(int)arg1;
- (id)mediaTrackTypeAsNonLocalizedString;
- (int)mediaTrackType;
- (void)setMediaTrackVisible:(BOOL)arg1;
- (BOOL)mediaTrackIsVisible;
- (id)tracksContainingSelectedRegions;
- (void)setTrackRecordEnableIsVisible:(BOOL)arg1;
- (BOOL)trackRecordEnableIsVisible;
- (long long)deleteTracksWithSessionTrackUUIDs:(id)arg1 mutedTracksOnly:(BOOL)arg2 makeUndo:(BOOL)arg3 undoStepName:(id)arg4;
- (void)addMasterTrackFadeout:(BOOL)arg1;
- (void)addMasterTrackFadeout:(BOOL)arg1 endClock:(long long)arg2 milliSeconds:(double)arg3;
- (BOOL)updateMonoStereoConfigOfAudioTracks;
- (BOOL)canTrackBeSwitchedToStereo:(id)arg1;
- (BOOL)shouldQuantizeRegionsAfterRecordingForTrack:(id)arg1;
- (void)synchronizeRecEnableStatesOfTracks;
- (void)recallRecEnableStatesOfTracks;
- (void)postTrackSelectionNotificationsForOldTrack:(id)arg1 newTrack:(id)arg2;
- (id)trackForAutomationSeqID:(long long)arg1;
- (long long)countInputMonitoringEnabledChannels;
- (long long)countRecEnabledMidiTracksByIncludingCurrentTrackEvenIfFrozen:(BOOL)arg1;
- (long long)countRecEnabledAudioTracksByIncludingCurrentTrackEvenIfFrozen:(BOOL)arg1;
- (long long)_countRecEnabledTracksByIncludingCurrentTrackEvenIfFrozen:(BOOL)arg1 type:(int)arg2;
- (long long)countRecEnabledTracksByIncludingCurrentTrackEvenIfFrozen:(BOOL)arg1;
- (void)recEnableAndInputMonitoringOffForAllExceptCurrentTrack;
- (void)monitoringOffAllTracksExceptCurrentTrack;
- (void)monitoringOffAllTracks;
- (void)_monitoringOffAllTracksButSkipInstID:(int)arg1;
- (void)recEnableOffAllTracksExceptCurrentTrack;
- (void)recEnableOffAllTracks;
- (void)_recEnableOffAllTracksButSkipTrack:(id)arg1;
- (void)soloOffAllTracks;
- (void)muteOffAllTracks;
- (void)selectSITrackForMTRecording;
- (id)recEnabledSITrack;
- (BOOL)shouldPreventRecEnablingForTrack:(id)arg1;
- (void)repairFreezeStatus;
- (void)recallFreezePreparedTracks:(BOOL)arg1;
- (void)resetFreezePreparedTracks;
- (void)storeFreezePreparedTracks;
- (BOOL)hasFreezedPreparedTrack;
- (int)countFreezedPreparedTracks;
- (int)countFreezedTracks:(BOOL)arg1 alsoIfOnlyFreezePrepared:(BOOL)arg2;
- (int)countFreezedTracks:(BOOL)arg1;
- (void)resetFreezeTracks:(BOOL)arg1 alsoIfOnlyFreezePrepared:(BOOL)arg2;
- (void)resetFreezeTracks:(BOOL)arg1;
- (void)freezePrepareAllFrozenTracks;
- (BOOL)allowEditOnFreezedTracks:(BOOL)arg1 alsoIfOnlyFreezePrepared:(BOOL)arg2;
- (BOOL)allowEditOnFreezedTracks:(BOOL)arg1;
- (BOOL)allowEditOnTrackWithInstID:(long long)arg1;
- (BOOL)allowEditOnTrack:(id)arg1 alsoIfOnlyFreezePrepared:(BOOL)arg2;
- (BOOL)allowEditOnTrack:(id)arg1;
- (void)removeSessionTrackUUIDIfIsConnectedHostForTrack:(id)arg1;
- (BOOL)trackIsEasySamplerTrack:(id)arg1;
- (unsigned long long)countTracksOfType:(int)arg1;
- (unsigned long long)numTracks;
- (id)usedAudioUnitIDStrings;
- (unsigned long long)countAudioUnitRootTracks;
- (unsigned long long)countAlchemyRootTracks;
- (unsigned long long)countDrummerRootTracks;
- (unsigned long long)countGenInstRootTracks;
- (id)rootTrackForInstID:(long long)arg1;
- (id)mainTrackForInstID:(long long)arg1;
- (id)_trackForInstID:(long long)arg1 inTracks:(id)arg2;
- (id)trackForID:(CDStruct_3d4e291e)arg1;
- (id)trackForUUID:(id)arg1;
- (BOOL)hasRealInstrumentTracks;
- (BOOL)areOtherTracksSoloed:(id)arg1;
- (void)autoUnhideRootTracksWithRegionsIfNecessary;
- (void)updateVisibleTracks;
- (void)ensureAutomationIsActiveForAllRootTracks;
- (id)lastTrack;
- (id)firstTrack;
- (id)preCurrentSamplerTrack;
- (id)preCurrentTrack;
- (id)grooveMasterTrack;
- (void)setGhostTrack:(id)arg1;
- (id)ghostTrack;
- (id)editorTrack;
- (void)reSelectCurrentTrack:(BOOL)arg1;
- (void)reSelectCurrentTrack;
- (void)setCurrentTrackWithID:(CDStruct_3d4e291e)arg1;
- (BOOL)_masterTrackAllowedToBeSelectedAfterUndo;
- (void)setCurrentTrack:(id)arg1 doDeselect:(BOOL)arg2;
- (void)setCurrentTrack:(id)arg1;
- (CDStruct_3d4e291e)currentTrackID;
- (id)currentTrack;
- (id)mediaTrack;
- (id)masterTrack;
- (id)rootTracks;
- (id)visibleRootTracks;
- (id)visibleTracks;
- (id)tracks;
- (void)_clearAllChannelAndTrackCaches;
- (void)_removeAllMainFolderTracksFromModelIfNotRootInTracks;
- (void)trackWillBeDeletedFromModel:(id)arg1;
- (void)updateTracks;
- (void)_tracksUpdated;
- (id)_updateTracks:(BOOL)arg1;
- (void)_sortTrackArrayByTrackNr:(id)arg1;
- (void)_deleteCollectedUnknownTracksWithNumbers:(id)arg1 andUUIDs:(id)arg2 inFolderWithID:(int)arg3 oldTrackObjectsByUUIDs:(id)arg4;
- (int)addTrack:(struct _LgSongIterator *)arg1:(const struct _LgTrack *)arg2;
- (void)_checkForDuplicateGinstsInTracks;

@end

