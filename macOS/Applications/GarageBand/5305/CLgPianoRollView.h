//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "CLgView.h"

#import "MAPianoRollViewDelegate.h"

@class CLgPianoRollContentsView, CLgPianoRollKeyboardContentsView, NSString;

@interface CLgPianoRollView : CLgView <MAPianoRollViewDelegate>
{
    long long s_iColorSchemeIdx;
    _Bool m_bPrevBackgroundBright;
    struct CEv *miditail;
    struct CGColorSpace *colorSpace;
    struct CGColor **velocityLayerColorCache;
    struct CGColor **velocityNoteColorCache;
    double _savedLocalInspectorHeaderWidth;
}

@property double savedLocalInspectorHeaderWidth; // @synthesize savedLocalInspectorHeaderWidth=_savedLocalInspectorHeaderWidth;
- (void)toggleInlineInspector;
- (void)dealloc;
- (void)handleUM_GEDIT:(id)arg1;
- (void)handleUM_CHSEL:(id)arg1;
- (void)handleUM_MIDIN:(id)arg1;
- (void)checkKeyboardHighlights:(id)arg1;
- (void)midiInputData:(id)arg1;
- (void)updateEditorMode:(BOOL)arg1;
- (void)handleUM_KEYLABELS_CHANGED:(id)arg1;
- (void)handleUM_UPDATE_PIANOROLL_CATCHMODE:(id)arg1;
- (void)posOrZoomChanged:(BOOL)arg1;
- (void)updateKeyMap:(BOOL)arg1;
- (void)updateFoldedViewAutoZoom;
- (void)foldedModeHasChanged:(BOOL)arg1;
- (void)updateKeyMap:(BOOL)arg1 withRedraw:(BOOL)arg2;
- (void)setPreferredZoomAndScrollPositions;
- (void)restorePreferredZoomAndScrollPositions;
- (void)viewVisibilityChange:(BOOL)arg1;
- (void)removeObservers;
- (void)addObservers;
- (void)splitViewSizeChanged:(id)arg1;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (id)newSectionViewWithFrame:(struct CGRect)arg1 section:(int)arg2;
- (id)newSectionViewControllerForSection:(int)arg1;
- (void)setupSubviews;
- (void)becomesVisible:(id)arg1;
- (id)userData;
- (long long)currentToolForPianoRollView:(id)arg1 withNote:(struct TNoteInfo *)arg2;
- (vector_b720f2ec)pianoRollView:(id)arg1 gridPositionsFrom:(float)arg2 to:(float)arg3;
- (void)pianoRollViewDoPanning:(id)arg1;
- (void)pianoRollView:(id)arg1 openSecondaryEditorWithIndex:(int)arg2;
- (void)pianoRollView:(id)arg1 zoomToRect:(struct CGRect)arg2;
- (id)pianoRollView:(id)arg1 labelForNote:(unsigned long long)arg2;
- (long long)pianoRollView:(id)arg1 getGroovePositions:(struct TGrooveMapInfo *)arg2 useTemplate:(BOOL)arg3;
- (void)pianoRollView:(id)arg1 insertControllerEventsInGrooveMap:(struct TGrooveMapInfo)arg2 fromClock:(long long)arg3 toClock:(long long)arg4;
- (void)pianoRollView:(id)arg1 moveSPLToClock:(long long)arg2 startPlayback:(BOOL)arg3;
- (struct TRegionInfo *)bestRegionAtClock:(long long)arg1;
- (void)afterSelectionChange;
- (void)pianoRollView:(id)arg1 changeMouseOver:(long long)arg2 withEvent:(id)arg3;
- (BOOL)mouseIsInPianoRollView:(id)arg1;
- (void)pianoRollView:(id)arg1 checkStretchNonNoteEventsFromRect:(CDStruct_ff3c81cc)arg2 ToRect:(CDStruct_ff3c81cc)arg3 inRegion:(struct TRegionInfo *)arg4;
- (int)pianoRollView:(id)arg1 scaleQuantizedNoteNrForOriginalNoteNr:(int)arg2;
- (BOOL)pianoRollViewHasStretchSelectionRect:(id)arg1;
- (BOOL)pianoRollViewGrooveBrushAllowsDrawOnAllNotesInScale:(id)arg1;
- (void)pianoRollView:(id)arg1 setEventInfoToNote:(int)arg2 clock:(long long)arg3;
- (void)pianoRollView:(id)arg1 sortNotesInRegion:(int)arg2;
- (void)pianoRollView:(id)arg1 makeUndoForEditingAction:(long long)arg2;
- (long long)pianoRollView:(id)arg1 quantizedPosForGrooveBrush:(long long)arg2 forceHigherPosition:(BOOL)arg3;
- (long long)pianoRollView:(id)arg1 quantizedPos:(long long)arg2;
- (long long)pianoRollView:(id)arg1 AccessibilityQuantizedPos:(long long)arg2 directionIsLeft:(BOOL)arg3 increasedStepWidth:(BOOL)arg4;
- (long long)pianoRollView:(id)arg1 quantizedHigherPos:(long long)arg2;
- (long long)pianoRollView:(id)arg1 quantizedPosForPencilTool:(long long)arg2;
- (BOOL)pianoRollViewAllowsRegionBorderEdits:(id)arg1;
- (long long)pianoRollView:(id)arg1 quantizedPosForStretchIndicators:(long long)arg2;
- (void)pianoRollView:(id)arg1 setEventDefaults:(struct TNoteInfo *)arg2;
- (void)pianoRollViewGetEventDefaults:(id)arg1;
- (long long)pianoRollView:(id)arg1 xPosToClockPos:(float)arg2;
- (void)pianoRollView:(id)arg1 setSingleRegionViewWithEvent:(struct TNoteInfo *)arg2;
- (void)pianoRollView:(id)arg1 AccessibilityNote:(struct TNoteInfo *)arg2 setSelected:(BOOL)arg3 deselectOthers:(BOOL)arg4;
- (id)pianoRollView:(id)arg1 accessibilyDescriptionForScreenPoint:(struct CGPoint)arg2;
- (id)pianoRollView:(id)arg1 accessibilyDescriptionForNoteLength:(struct TNoteInfo *)arg2;
- (id)pianoRollView:(id)arg1 accessibilyDescriptionForNote:(struct TNoteInfo *)arg2;
- (float)pianoRollViewgetEndPositionOfFolder:(id)arg1;
- (float)pianoRollViewGetStartPositionOfTronLoop:(id)arg1;
- (void)pianoRollView:(id)arg1 previewEvent:(struct TNoteInfo *)arg2 stopOtherPreviewEvents:(BOOL)arg3;
- (void)pianoRollView:(id)arg1 hasChangedSelectionStatusForDisplayNoteNr:(int)arg2 toState:(BOOL)arg3;
- (double)pianoRollView:(id)arg1 eventToLength:(struct TNoteInfo *)arg2;
- (double)pianoRollView:(id)arg1 eventToX:(struct TNoteInfo *)arg2;
- (struct CGColor *)pianoRollView:(id)arg1 colorForNote:(struct TNoteInfo *)arg2 useSelection:(BOOL)arg3;
- (struct CGColor *)pianoRollView:(id)arg1 colorForNoteSelectionBorder:(struct TNoteInfo *)arg2;
- (struct CGColor *)pianoRollViewCachedColorBlack:(id)arg1;
- (int)pianoRollView:(id)arg1 hueForNote:(struct TNoteInfo *)arg2;
- (struct CGColor *)newNoteColorFromVelocity:(struct TNoteInfo *)arg1;
- (struct CGColor *)pianoRollView:(id)arg1 colorFromMidiChannel:(struct TNoteInfo *)arg2 forShadow:(BOOL)arg3;
- (long long)pianoRollViewTronAnchorPosition:(id)arg1;
- (struct CGColor *)pianoRollView:(id)arg1 colorFromArticulation:(struct TNoteInfo *)arg2 forShadow:(BOOL)arg3;
- (struct CGColor *)pianoRollView:(id)arg1 colorForVelocityLayer:(struct TNoteInfo *)arg2;
- (struct CGColor *)pianoRollView:(id)arg1 colorForNoteLabel:(struct TNoteInfo *)arg2;
- (void)buildVelocityLayerColorCache;
- (void)buildVelocityNoteColorCache;
- (int)hueForVelocity:(float)arg1;
- (BOOL)pianoRollViewLimitToOneDirectionPreference:(id)arg1;
- (BOOL)pianoRollViewSnapIsEnabled:(id)arg1;
- (BOOL)pianoRollViewShowsNoteLabels:(id)arg1;
- (BOOL)pianoRollViewShowsArticulationColors:(id)arg1;
- (BOOL)pianoRollViewShowsMidiChannel:(id)arg1;
- (struct CGColor *)pianoRollView:(id)arg1 colorForRegionID:(int)arg2 forNote:(struct TNoteInfo *)arg3 forNotePart:(long long)arg4;
- (void)getSBValuesForHue:(int)arg1 saturation:(int *)arg2 brightness:(int *)arg3 isNote:(BOOL)arg4 isSelected:(BOOL)arg5 isLooped:(BOOL)arg6;
- (void)closeHelpTagInPianoRollView:(id)arg1;
- (void)pianoRollView:(id)arg1 showHelpTagForEditingAction:(long long)arg2 withEvent:(struct TNoteInfo *)arg3 relativeValueChange:(long long)arg4;
- (void)pianoRollViewDeleteMarkedNotes:(id)arg1;
- (void)pianoRollView:(id)arg1 markNoteToBeDeleted:(struct TNoteInfo *)arg2;
- (BOOL)pianoRollViewCheckTrackProtected:(id)arg1;
- (void)pianoRollViewDisableCatch:(id)arg1;
- (void)pianoRollViewDisableCatchIfPlaying:(id)arg1;
- (void)pianoRollView:(id)arg1 forceClockDisplayWithClock:(long long)arg2;
- (void)pianoRollViewPerformRegionBackgroundClick:(id)arg1 withRegion:(struct TRegionInfo *)arg2 allowUnselect:(BOOL)arg3;
- (_Bool)isOneTrackView;
- (BOOL)pianoRollView:(id)arg1 handleRightMouseDownWithEvent:(id)arg2 clickedLayer:(id)arg3;
- (int)pianoRollViewSelectedTrackNr:(id)arg1;
- (BOOL)pianoRollView:(id)arg1 checkOpenContextMenu:(id)arg2 clickedLayer:(id)arg3;
- (void)pianoRollView:(id)arg1 changeLength:(long long)arg2 forRegion:(struct TRegionInfo *)arg3 atLeftCorner:(BOOL)arg4;
- (void)pianoRollViewFinishRegionBoundsEdit:(id)arg1;
- (long long)pianoRollViewMidiTickUnit;
- (void)pianoRollViewApplyEventFilter:(id)arg1;
- (void)pianoRollRedoIdle:(id)arg1;
- (BOOL)pianoRollViewIsBrightColored:(id)arg1;
- (void)quantizeSelectedEventsInPianoRollView:(id)arg1;
- (BOOL)currentEditFlagsForPianoRollView:(id)arg1;
- (int)ColorHueFromRegionID:(int)arg1;
- (double)initialContentHeaderWidth;
@property(readonly, nonatomic) CLgPianoRollContentsView *cv;
@property(readonly, nonatomic) CLgPianoRollKeyboardContentsView *ckv;
- (double)constrainContentsHeaderWidth:(double)arg1;
- (double)constrainInspectorWidth:(double)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

