//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSResponder.h"

#import "GkChordTrainerGridView_Delegate.h"
#import "GkMentorFretboardDelegate.h"
#import "GlossaryControllerOwnerProtocol.h"
#import "NSMenuDelegate.h"
#import "NSWindowDelegate.h"

@class DfChannel, DfChordTrainerModel, DfGlossaryController, DfGuardWindowController, GkBaseChordDrawing, GkChordTrainerGridView, GkMagicMentorSongNavigatorView, GkMentorDigitView, GkMentorFretboard, GkMentorPowerMeter, MABackgroundView, MAButton, MAFillView, MALevelMeter, MANavigatorControl, MAPlgImageTitlePopUpButton, MAPlgNeedle, MAPopUpButton, MASingleLEDLevelMeter, MASlider, MATextField, NSColor, NSDictionary, NSMutableDictionary, NSString, NSTabView, NSTextField, NSTimer, NSView, NSWindow, WebView;

@interface DfChordTrainerWindowController : NSResponder <NSMenuDelegate, NSWindowDelegate, GlossaryControllerOwnerProtocol, GkMentorFretboardDelegate, GkChordTrainerGridView_Delegate>
{
    DfGuardWindowController *_guardWindowController;
    DfChordTrainerModel *_model;
    NSWindow *_window;
    NSWindow *_bottomOverlayWindow;
    GkBaseChordDrawing *_chordDrawing;
    id _delegate;
    MAFillView *_navigatorUnderlayFillView;
    int _monitorState;
    BOOL _ignoreMonitorStateChangedNotification;
    NSTimer *_timer;
    BOOL _playing;
    BOOL _wasStartedFromBeginning;
    NSMutableDictionary *_correctChords;
    BOOL _showGreenDigits;
    NSView *_chordTrainerContentView;
    NSView *_chordTrainerHeaderView;
    MAFillView *_chordTrainerMiddleView;
    NSView *_chordTrainerBottomView;
    MAButton *_playButton;
    MAButton *_startOverButton;
    GkMagicMentorSongNavigatorView *_navigatorView;
    GkMentorFretboard *_fretboard;
    GkChordTrainerGridView *_chordTrainerGridView;
    MASlider *_masterVolumeSlider;
    MAPopUpButton *_levelPopUpButton;
    NSTextField *_titleTextField;
    MAButton *_exitButton;
    MAButton *_backButton;
    MAButton *_tunerButton;
    MAButton *_setupPageButton;
    MAButton *_glossaryButton;
    MASingleLEDLevelMeter *_levelMeter;
    NSTabView *_tabView;
    GkMentorDigitView *_assessmentDigitView;
    GkMentorPowerMeter *_assessmentPowerMeter;
    MABackgroundView *_clockColonView;
    GkMentorDigitView *_clockMinutesDigitView;
    GkMentorDigitView *_clockSecondsDigitView;
    NSTextField *_statusText;
    BOOL _recordEnabled;
    BOOL _blockNewFretboardDataAvailableCallback;
    NSWindow *_setupPageWindow;
    NSView *_setupPageFrame;
    NSView *_setupPageContentView;
    MAFillView *_setupPageBackgroundView;
    NSTabView *_setupPageTopTabView;
    MAPopUpButton *_setupPageInputSelectionPopupButton;
    MAPopUpButton *_setupPageMonitorPopupButton;
    MAButton *_setupPageApogeeButton;
    long long _oldPreferenceWindowLevel;
    NSTextField *_setupPageInputSelectionGuitarText;
    NSTextField *_setupPageInputSelectionMonitorText;
    NSDictionary *_inputSources;
    MALevelMeter *_setupPageInputLevelMeter;
    MASlider *_setupPageInputLevelSlider;
    NSWindow *_tunerWindow;
    MAFillView *_tunerBackgroundView;
    NSView *_tunerContainerView;
    NSView *_tunerContentView;
    MAPlgNeedle *_tunerNeedleTunerView;
    MAPlgImageTitlePopUpButton *_tunerNoteImagePopUpButton;
    MATextField *_tunerReferenceTextField;
    MATextField *_tunerDeviationTextField;
    MATextField *_tunerTuningNameTextField;
    MATextField *_tunerStringNameTextField;
    MATextField *_tunerInstructionTextField;
    GkMentorFretboard *_tunerFretboard;
    MAButton *_tunerDoneButton;
    NSTimer *_tunerTimer;
    NSColor *_tunerNeedleColorDefault;
    NSColor *_tunerNeedleColorCorrect;
    NSColor *_tunerNeedleColorWrong;
    DfChannel *_tunerChannel;
    CDStruct_c9c61e84 _tunerTuningInformation;
    int _tunerSelectedString;
    double _tunerInitialTunerContainerViewHeight;
    NSWindow *_glossaryWindow;
    NSView *_glossaryContentView;
    MANavigatorControl *_glossaryNavigatorControl;
    WebView *_glossaryWebView;
    DfGlossaryController *_glossaryController;
}

@property int monitorState; // @synthesize monitorState=_monitorState;
@property id delegate; // @synthesize delegate=_delegate;
- (void)newFretboardDataAvailableCallback:(id)arg1;
- (void)chordDetectedCallback;
- (void)redGlowCallback;
- (void)whiteGlowCallback;
- (void)noSignalCallback;
- (struct CGImage *)GkChordTrainerGridView:(id)arg1 createCGImageForLayer:(unsigned long long)arg2 withSize:(struct CGSize)arg3;
- (id)GkChordTrainerGridView:(id)arg1 nameForLayer:(unsigned long long)arg2;
- (void)windowDidChangeScreen:(id)arg1;
- (void)handleScreenChangeNotification:(id)arg1;
- (void)keyDown:(id)arg1;
- (unsigned long long)_weightedScoreFromValue:(unsigned long long)arg1;
- (void)_resetScore;
- (void)stop;
- (void)start;
- (void)handleMonitorStateChangedNotification:(id)arg1;
- (void)handleChangedDriverNotification:(id)arg1;
- (void)_handleMonitorShortcut:(id)arg1;
- (id)webView;
- (id)navigatorControl;
- (void)navigatorViewAction:(id)arg1;
- (void)levelButtonAction:(id)arg1;
- (void)startOverButtonAction:(id)arg1;
- (void)playButtonAction:(id)arg1;
- (void)masterVolumeSlider:(id)arg1;
- (void)closeWindow:(id)arg1;
- (void)performClose:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)_captureScreen;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)windowDidFailToEnterFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (id)customWindowsToExitFullScreenForWindow:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (id)customWindowsToEnterFullScreenForWindow:(id)arg1;
- (void)showWindow:(id)arg1;
- (void)setShowGreenDigits:(BOOL)arg1;
- (BOOL)showGreenDigits;
@property BOOL leftHanded;
@property BOOL topDownView;
- (void)idleCallHandler:(id)arg1;
- (void)_timerCallback:(id)arg1;
- (void)_stopTimer;
- (void)_restartTimer;
- (void)_advanceClock;
- (void)_resetClock;
- (void)_moveToChord:(unsigned long long)arg1;
- (void)_updateLevelMeter;
- (void)_setupLevelMeter;
- (void)_updateDigitAssets;
- (void)_updateHeaderControls;
- (void)_updateGuitarFretboard;
- (void)_updateFretboardLayout;
- (void)_updateStatusText;
- (void)_updatePlayButton;
- (void)_updateLevelPopupMenu;
- (void)_showAllCorrectStringsOnFretboard;
- (void)_updateFretboardWithChord:(id)arg1;
- (void)_resetFretboard;
- (void)_updateNavigatorViewSelection;
- (void)_updateNavigatorView;
- (void)_updateMainGradientBackgroundViewSize;
- (void)_updateChordGridViewLayout;
- (void)_updateBottomOverlayWindowPosition;
- (void)_updateLayout;
- (void)_windowWillClose;
- (void)_createBottomOverlayWindow;
- (void)_windowIsUpAndRunning;
- (void)_windowDidLoad;
- (void)setInitialLayerCount;
- (void)_windowWillLoad;
- (void)_setShadowForButton:(id)arg1;
- (id)model;
- (id)window;
- (void)dealloc;
- (id)initWithChordTrainerModel:(id)arg1;
- (void)setupPageHandleInputGainChangedNotification:(id)arg1;
- (BOOL)setupPageHandleMonitorStateChangedNotification:(id)arg1;
- (BOOL)setupPageHandleDriverChangedNotification:(id)arg1;
- (void)_updateSetupPageLevelMeter;
- (void)_updateInputLevelSlider;
- (void)_updateApogeeButton;
- (void)_updateButtons;
- (void)setupInputLevelSliderAction:(id)arg1;
- (void)setupApogeeButtonAction:(id)arg1;
- (void)setupMonitorMenuAction:(id)arg1;
- (void)setupInputSelectionMenuAction:(id)arg1;
- (void)_updateMonitorDescription;
- (void)_updateInputSelectionDescription;
- (void)setupTopDownFretboardAction:(id)arg1;
- (void)setupLeftHandAction:(id)arg1;
- (void)setupDoneAction:(id)arg1;
- (void)setupGbPreferenceAction:(id)arg1;
- (void)setupWindowMouseDown:(id)arg1;
- (void)setupPageWindowDidClose;
- (void)setupPageWindowWillClose;
- (void)createSetupPageWindowWithSize:(struct CGSize)arg1;
- (void)_setupPageWindowDidLoad;
- (void)_setApogeeWindowVisible:(BOOL)arg1;
- (void)_setPreferenceWindowVisible:(BOOL)arg1;
- (void)_updateMonitorPopup;
- (void)_populateMonitorMenu;
- (void)_populateInputSelectionMenu;
- (void)_setupInputLevelSlider;
- (void)_setupSetupPageLevelMeter;
- (void)glossaryWindowMouseDown:(id)arg1;
- (void)glossaryWindowDidClose;
- (void)glossaryWindowWillClose;
- (void)createGlossaryWindowWithSize:(struct CGSize)arg1;
- (void)_glossaryWindowDidLoad;
- (void)GkMentorFretboard:(id)arg1 userClickedString:(unsigned int)arg2;
- (void)tunerDoneButtonAction:(id)arg1;
- (void)tunerWindowMouseDown:(id)arg1;
- (void)tunerWindowDidResize:(id)arg1;
- (void)tunerWindowDidClose;
- (void)tunerWindowWillClose;
- (void)createTunerWindowWithSize:(struct CGSize)arg1;
- (void)_tunerWindowDidLoad;
- (void)_updateTunerLayout;
- (void)_updateTuningNameAndStringName;
- (void)_tunerTimerCallback:(id)arg1;
- (void)_stopTuner;
- (void)_startTuner;
- (id)_enumeratedWordingForString:(unsigned int)arg1;
- (void)setTagsOfMenu:(id)arg1 toColor:(id)arg2;
- (void)updateChildWindowSizesAfterScreenUpdate;
- (void)_updateSetupWindowSize;
- (void)_updateTunerWindowSize;
- (void)_updateGlossaryWindowSize;
- (void)glossaryButtonAction:(id)arg1;
- (void)tunerButtonAction:(id)arg1;
- (void)setupButtonAction:(id)arg1;
- (void)closeGlossaryWindow;
- (void)showGlossaryWindow;
- (struct CGRect)_glossaryWindowRect;
- (void)closeTunerWindow;
- (void)showTunerWindow;
- (struct CGRect)_tunerWindowRect;
- (void)closeSetupPageWindow;
- (void)showSetupPageWindow;
- (struct CGRect)_setupPageWindowRect;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

