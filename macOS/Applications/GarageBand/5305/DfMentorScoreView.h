//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSView.h"

@class DfRegion, NSArray, NSBezierPath, NSDictionary, NSImage, NSTimer, NSViewAnimation;

@interface DfMentorScoreView : NSView
{
    struct _LgScore *m_scoreHandle;
    long long m_currentSPL;
    double m_splCoord;
    NSViewAnimation *m_viewAnimation;
    BOOL m_blockAnimatedScrolling;
    BOOL m_blockAllScrolling;
    float m_scrollDuration;
    DfRegion *m_currentRegion;
    double m_currentRegionLeftX;
    double m_currentRegionRightX;
    long long m_leftScrollAnchor;
    long long m_neverExceedLeftClock;
    struct CGRect m_oldBounds;
    BOOL m_useSoftLaneElementsAssets;
    NSArray *m_laneElementsArray;
    NSImage *m_splTriangleImage;
    struct CGSize m_splTriangleSize;
    float m_splTriangleYOffset;
    float m_staffHeight;
    NSBezierPath *m_songSectionTag;
    NSImage *m_cycleIndicator;
    NSDictionary *m_errorImageSets;
    long long m_leftCycleClock;
    long long m_rightCycleClock;
    double m_leftCycleX;
    double m_rightCycleX;
    BOOL m_showsCycle;
    struct {
        char mouseDown;
        char mouseMoved;
        long long clockFromX;
        double positionXonMouseDown;
        double positionXCurrent;
        struct CGRect rectDraggedCycleLeft;
        struct CGRect rectDraggedCycleRight;
        long long clockDraggedCycleLeft;
        long long clockDraggedCycleRight;
        long long leftCycleClock;
        long long rightCycleClock;
        double leftCycleX;
        double rightCycleX;
        char leftCycleIsInCurrentRegion;
        char rightCycleIsInCurrentRegion;
        char swapped;
    } m_mouseDownState;
    id m_delegate;
    BOOL m_delegateRespondsToShouldChange;
    BOOL m_delegateRespondsToChanged;
    BOOL m_delegateRespondsToMouseDown;
    BOOL m_delegateRespondsToMouseMoved;
    BOOL m_delegateRespondsToMouseUp;
    long long m_splToolTipTag;
    int m_mouseActionTag;
    int m_splMovementDirection;
    NSTimer *m_autoscrollTimer;
}

@property long long neverExceedLeftClock; // @synthesize neverExceedLeftClock=m_neverExceedLeftClock;
@property BOOL blockAllScrolling; // @synthesize blockAllScrolling=m_blockAllScrolling;
@property BOOL blockAnimatedScrolling; // @synthesize blockAnimatedScrolling=m_blockAnimatedScrolling;
- (void)autoscrollCallback:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)_checkLeftCycle:(long long *)arg1 rightCycle:(long long *)arg2;
- (void)mouseDown:(id)arg1;
- (BOOL)_checkAutoScroll:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (id)laneElementsArray;
- (void)setUseSoftLaneElementsAssets:(BOOL)arg1;
- (BOOL)useSoftLaneElementsAssets;
- (void)setLaneElementsArray:(id)arg1;
- (void)setLeftScrollAnchor:(long long)arg1;
- (id)currentRegion;
- (void)setCurrentRegion:(id)arg1;
- (BOOL)showsCycle;
- (void)setShowsCycle:(BOOL)arg1;
- (long long)rightCycleClock:(long long)arg1;
- (long long)leftCycleClock:(long long)arg1;
- (void)setLeftCycleClock:(long long)arg1 rightCycleClock:(long long)arg2;
- (void)setScrollDuration:(float)arg1;
- (float)scrollDuration;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawAssessmentLaneElements;
- (void)setSPL:(long long)arg1 animate:(BOOL)arg2;
- (BOOL)skipScrollInCycle;
- (struct _LgScore *)scoreHandle;
- (void)setScoreTrackID:(CDStruct_3d4e291e)arg1;
- (void)setScoreHandle:(struct _LgScore *)arg1;
- (void)constructSplTriangleImage;
- (struct CGRect)_splRectForX:(float)arg1;
- (void)updateVisibleRect;
- (float)_calculateNewVisibleRectXForced:(BOOL)arg1;
- (void)stopAnimatedScrolling;
- (void)_updateScrollViewSize;
- (void)updateScoreVerticalSpacing;
- (void)updateScore;
- (void)sendScoreCommand:(int)arg1 Parameter:(void *)arg2;
- (void)_updateCycleDisplayPositions;
- (float)_rightVisibleRectXOffset;
- (struct CGRect)_draggedCycleRectFromClock:(long long)arg1;
- (struct CGRect)_rightCycleHitRect;
- (struct CGRect)_leftCycleHitRect;
- (float)currentRegionRightX;
- (float)currentRegionLeftX;
- (float)splCoord;
- (void)startAnimation:(float)arg1;
- (long long)roundedBarForClock:(long long)arg1 direction:(int)arg2;
- (void)_updateTooltipRect;
- (void)resetCursorRects;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)myInit;

@end

