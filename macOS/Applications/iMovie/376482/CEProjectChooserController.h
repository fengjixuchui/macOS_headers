//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class CEProjectChooserProjectContentView, CEProjectChooserToolbarView, FFLibrary, FFSequenceRecord, LKWindow, LKWindowModule, LKWindowModuleController, NSButton, NSPopUpButton, NSString, NSTextField, NSView, NSWindow;

@interface CEProjectChooserController : NSObject
{
    BOOL _userModifiedProjectName;
    int _projectType;
    FFLibrary *_library;
    struct _NSModalSession *_chooserSession;
    NSString *_selectedProjectID;
    NSWindow *_appMainWindow;
    LKWindow *_window;
    LKWindowModule *_windowModule;
    LKWindowModuleController *_windowModuleController;
    FFSequenceRecord *_curProject;
    NSView *_contentView;
    NSView *_chooserContainerView;
    CEProjectChooserProjectContentView *_projectContentView;
    CEProjectChooserProjectContentView *_trailerContentView;
    CEProjectChooserToolbarView *_toolbarView;
    NSButton *_createButton;
    NSPopUpButton *_frameSizeMenu;
    NSPopUpButton *_frameRateMenu;
    NSTextField *_frameSizeLabel;
    NSTextField *_frameRateLabel;
    NSTextField *_tempTextField;
    long long _returnCode;
}

@property(retain, nonatomic) NSTextField *tempTextField; // @synthesize tempTextField=_tempTextField;
@property(retain, nonatomic) NSTextField *frameRateLabel; // @synthesize frameRateLabel=_frameRateLabel;
@property(retain, nonatomic) NSTextField *frameSizeLabel; // @synthesize frameSizeLabel=_frameSizeLabel;
@property(retain, nonatomic) NSPopUpButton *frameRateMenu; // @synthesize frameRateMenu=_frameRateMenu;
@property(retain, nonatomic) NSPopUpButton *frameSizeMenu; // @synthesize frameSizeMenu=_frameSizeMenu;
@property(retain, nonatomic) NSButton *createButton; // @synthesize createButton=_createButton;
@property(retain, nonatomic) CEProjectChooserToolbarView *toolbarView; // @synthesize toolbarView=_toolbarView;
@property(retain, nonatomic) CEProjectChooserProjectContentView *trailerContentView; // @synthesize trailerContentView=_trailerContentView;
@property(retain, nonatomic) CEProjectChooserProjectContentView *projectContentView; // @synthesize projectContentView=_projectContentView;
@property(retain, nonatomic) NSView *chooserContainerView; // @synthesize chooserContainerView=_chooserContainerView;
@property(retain, nonatomic) NSView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) FFSequenceRecord *curProject; // @synthesize curProject=_curProject;
@property(retain, nonatomic) LKWindowModule *windowModule; // @synthesize windowModule=_windowModule;
@property(retain, nonatomic) LKWindow *window; // @synthesize window=_window;
@property(nonatomic) NSWindow *appMainWindow; // @synthesize appMainWindow=_appMainWindow;
@property(retain, nonatomic) NSString *selectedProjectID; // @synthesize selectedProjectID=_selectedProjectID;
@property(nonatomic) struct _NSModalSession *chooserSession; // @synthesize chooserSession=_chooserSession;
@property(nonatomic) int projectType; // @synthesize projectType=_projectType;
@property(nonatomic) BOOL userModifiedProjectName; // @synthesize userModifiedProjectName=_userModifiedProjectName;
- (BOOL)isProjectName:(id)arg1 inEvent:(id)arg2;
- (id)currentContentView;
- (void)switchToContentViewForProjectType:(int)arg1;
- (void)eventSelected:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)releaseChooserWind;
- (void)hideChooserWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)showChooserIsTrailer:(BOOL)arg1;
- (void)myCenterWindow:(id)arg1;
- (struct CGSize)chooserWindowMinSize;
- (struct CGSize)chooserWindowDimensions;
- (void)windowWillClose:(id)arg1;
- (void)willBecomeActive;
- (void)willResignActive;
- (void)stopChooserModal;
- (void)startChooserModal;
- (void)doProjectChooserForExistingProject:(id)arg1;
- (void)doProjectChooserForType:(int)arg1 library:(id)arg2;
- (void)doCancelProjectChooser:(id)arg1;
- (void)doChangeProjectTheme:(id)arg1;
- (void)chooserWindowDidClose;
- (void)doCreateProject:(id)arg1;
- (void)syncCreateButton;
- (void)syncToSelection;
- (void)syncProjectChooserForExistingProject:(id)arg1;
- (void)syncProjectChooserForDefaultProjectSetting;
- (void)syncProjectChooserForProjectType;
- (id)retrievePersistentProjectIDForProjectType:(int)arg1;
- (void)savePersistentProjectID:(id)arg1 forProjectType:(int)arg2;
- (void)projectChooserWindowWillStartClosing:(id)arg1;
- (void)notificationHandler:(id)arg1;
- (void)removeNotifications;
- (void)installNotifications;
- (void)dealloc;
- (id)init;

@end

