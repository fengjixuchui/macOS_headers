//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSView.h"

#import "NSDraggingDestination.h"
#import "NSDraggingSource.h"
#import "NSMenuDelegate.h"
#import "NSPopoverDelegate.h"
#import "NSTextInputClient.h"
#import "PTYMouseHandlerDelegate.h"
#import "PointerControllerDelegate.h"
#import "iTermBadgeLabelDelegate.h"
#import "iTermColorMapDelegate.h"
#import "iTermFindCursorViewDelegate.h"
#import "iTermFindOnPageHelperDelegate.h"
#import "iTermFocusFollowsMouseFocusReceiver.h"
#import "iTermIndicatorsHelperDelegate.h"
#import "iTermKeyboardHandlerDelegate.h"
#import "iTermMouseReportingFrustrationDetectorDelegate.h"
#import "iTermSelectionDelegate.h"
#import "iTermSelectionScrollHelperDelegate.h"
#import "iTermSemanticHistoryControllerDelegate.h"
#import "iTermTextDrawingHelperDelegate.h"
#import "iTermTextViewAccessibilityHelperDelegate.h"
#import "iTermURLActionHelperDelegate.h"

@class FindContext, NSArray, NSCursor, NSDictionary, NSFont, NSMutableArray, NSString, NSTouchBar, NSWindow, PTYFontInfo, PTYMouseHandler, ThreeFingerTapGestureRecognizer, iTermBadgeLabel, iTermColorMap, iTermFindCursorView, iTermFindOnPageHelper, iTermIndicatorsHelper, iTermKeyboardHandler, iTermQuickLookController, iTermRateLimitedUpdate, iTermScrollAccumulator, iTermSelection, iTermSelectionScrollHelper, iTermSemanticHistoryController, iTermShellIntegrationWindowController, iTermTextDrawingHelper, iTermTextViewAccessibilityHelper, iTermURLActionHelper;

@interface PTYTextView : NSView <PTYMouseHandlerDelegate, iTermMouseReportingFrustrationDetectorDelegate, iTermURLActionHelperDelegate, iTermBadgeLabelDelegate, iTermTextViewAccessibilityHelperDelegate, iTermFindCursorViewDelegate, iTermFindOnPageHelperDelegate, iTermKeyboardHandlerDelegate, iTermSelectionDelegate, iTermSelectionScrollHelperDelegate, NSDraggingSource, NSMenuDelegate, NSPopoverDelegate, iTermColorMapDelegate, iTermFocusFollowsMouseFocusReceiver, iTermIndicatorsHelperDelegate, iTermSemanticHistoryControllerDelegate, iTermTextDrawingHelperDelegate, NSDraggingDestination, NSTextInputClient, PointerControllerDelegate>
{
    NSCursor *cursor_;
    PTYMouseHandler *_mouseHandler;
    iTermURLActionHelper *_urlActionHelper;
    iTermShellIntegrationWindowController *_shellIntegrationInstallerWindow;
    BOOL _inRefresh;
    double _lineHeight;
    double _charWidth;
    NSDictionary *_markedTextAttributes;
    double _timeOfLastBlink;
    iTermSelectionScrollHelper *_selectionScrollHelper;
    iTermTextDrawingHelper *_drawingHelper;
    int _lastAccessibilityCursorX;
    int _lastAccessibiltyAbsoluteCursorY;
    BOOL _changedSinceLastExpose;
    BOOL openingContextMenu_;
    ThreeFingerTapGestureRecognizer *threeFingerTapGestureRecognizer_;
    CDStruct_dc106ac8 _previousCursorCoord;
    CDStruct_ffe6b7c1 _validationClickPoint;
    iTermSelection *_oldSelection;
    struct CGSize _badgeDocumentVisibleRectSize;
    BOOL _showStripesWhenBroadcastingInput;
    iTermTextViewAccessibilityHelper *_accessibilityHelper;
    iTermBadgeLabel *_badgeLabel;
    struct CGPoint _mouseLocationToRefuseFirstResponderAt;
    NSMutableArray *_highlightedRows;
    iTermScrollAccumulator *_scrollAccumulator;
    iTermRateLimitedUpdate *_shadowRateLimit;
    BOOL _useNonAsciiFont;
    BOOL _useBoldFont;
    BOOL _asciiLigatures;
    BOOL _nonAsciiLigatures;
    BOOL _useCustomBoldColor;
    BOOL _brightenBold;
    BOOL _useItalicFont;
    BOOL _blinkingCursor;
    BOOL _blinkAllowed;
    BOOL _dimOnlyText;
    BOOL _showSearchingCursor;
    BOOL _suppressDrawing;
    BOOL _useNativePowerlineGlyphs;
    int _keyFocusStolenCount;
    iTermSelection *_selection;
    id <PTYTextViewDataSource> _dataSource;
    id <PTYTextViewDelegate> _delegate;
    NSArray *_smartSelectionRules;
    double _horizontalSpacing;
    double _verticalSpacing;
    long long _thinStrokes;
    double _transparency;
    PTYFontInfo *_primaryFont;
    PTYFontInfo *_secondaryFont;
    double _charWidthWithoutSpacing;
    double _charHeightWithoutSpacing;
    iTermColorMap *_colorMap;
    iTermSemanticHistoryController *_semanticHistoryController;
    CDUnknownBlockType _drawingHook;
    iTermQuickLookController *_quickLookController;
    iTermIndicatorsHelper *_indicatorsHelper;
    iTermKeyboardHandler *_keyboardHandler;
    iTermFindOnPageHelper *_findOnPageHelper;
    iTermFindCursorView *_findCursorView;
    NSWindow *_findCursorWindow;
    NSTouchBar *_touchBar;
    NSString *_savedSelectedText;
}

+ (struct CGSize)charSizeForFont:(id)arg1 horizontalSpacing:(double)arg2 verticalSpacing:(double)arg3;
+ (BOOL)useLayerForBetterPerformance;
+ (void)runCommand:(id)arg1;
@property(copy, nonatomic) NSString *savedSelectedText; // @synthesize savedSelectedText=_savedSelectedText;
@property(retain) NSTouchBar *touchBar; // @synthesize touchBar=_touchBar;
@property(retain, nonatomic) NSWindow *findCursorWindow; // @synthesize findCursorWindow=_findCursorWindow;
@property(retain, nonatomic) iTermFindCursorView *findCursorView; // @synthesize findCursorView=_findCursorView;
@property(readonly, nonatomic) iTermFindOnPageHelper *findOnPageHelper; // @synthesize findOnPageHelper=_findOnPageHelper;
@property(readonly, nonatomic) iTermURLActionHelper *urlActionHelper; // @synthesize urlActionHelper=_urlActionHelper;
@property(readonly, nonatomic) iTermKeyboardHandler *keyboardHandler; // @synthesize keyboardHandler=_keyboardHandler;
@property(nonatomic) BOOL useNativePowerlineGlyphs; // @synthesize useNativePowerlineGlyphs=_useNativePowerlineGlyphs;
@property(nonatomic) BOOL suppressDrawing; // @synthesize suppressDrawing=_suppressDrawing;
@property(readonly, nonatomic) NSArray *highlightedRows; // @synthesize highlightedRows=_highlightedRows;
@property(readonly, nonatomic) iTermIndicatorsHelper *indicatorsHelper; // @synthesize indicatorsHelper=_indicatorsHelper;
@property(readonly, nonatomic) int keyFocusStolenCount; // @synthesize keyFocusStolenCount=_keyFocusStolenCount;
@property(retain, nonatomic) iTermQuickLookController *quickLookController; // @synthesize quickLookController=_quickLookController;
@property(nonatomic) BOOL showSearchingCursor; // @synthesize showSearchingCursor=_showSearchingCursor;
@property(copy, nonatomic) CDUnknownBlockType drawingHook; // @synthesize drawingHook=_drawingHook;
@property(retain, nonatomic) iTermSemanticHistoryController *semanticHistoryController; // @synthesize semanticHistoryController=_semanticHistoryController;
@property(readonly, nonatomic) iTermColorMap *colorMap; // @synthesize colorMap=_colorMap;
@property(readonly, nonatomic) double charHeightWithoutSpacing; // @synthesize charHeightWithoutSpacing=_charHeightWithoutSpacing;
@property(readonly, nonatomic) double charWidthWithoutSpacing; // @synthesize charWidthWithoutSpacing=_charWidthWithoutSpacing;
@property(readonly, nonatomic) double charWidth; // @synthesize charWidth=_charWidth;
@property(readonly, nonatomic) double lineHeight; // @synthesize lineHeight=_lineHeight;
@property(readonly, nonatomic) PTYFontInfo *secondaryFont; // @synthesize secondaryFont=_secondaryFont;
@property(readonly, nonatomic) PTYFontInfo *primaryFont; // @synthesize primaryFont=_primaryFont;
@property(nonatomic) double transparency; // @synthesize transparency=_transparency;
@property(nonatomic) BOOL dimOnlyText; // @synthesize dimOnlyText=_dimOnlyText;
@property(nonatomic) BOOL blinkAllowed; // @synthesize blinkAllowed=_blinkAllowed;
@property(nonatomic) BOOL blinkingCursor; // @synthesize blinkingCursor=_blinkingCursor;
@property(nonatomic) BOOL useItalicFont; // @synthesize useItalicFont=_useItalicFont;
@property(nonatomic) BOOL brightenBold; // @synthesize brightenBold=_brightenBold;
@property(readonly, nonatomic) BOOL useCustomBoldColor; // @synthesize useCustomBoldColor=_useCustomBoldColor;
@property(nonatomic) BOOL nonAsciiLigatures; // @synthesize nonAsciiLigatures=_nonAsciiLigatures;
@property(nonatomic) BOOL asciiLigatures; // @synthesize asciiLigatures=_asciiLigatures;
@property(nonatomic) long long thinStrokes; // @synthesize thinStrokes=_thinStrokes;
@property(nonatomic) BOOL useBoldFont; // @synthesize useBoldFont=_useBoldFont;
@property(nonatomic) double verticalSpacing; // @synthesize verticalSpacing=_verticalSpacing;
@property(nonatomic) double horizontalSpacing; // @synthesize horizontalSpacing=_horizontalSpacing;
@property(copy, nonatomic) NSArray *smartSelectionRules; // @synthesize smartSelectionRules=_smartSelectionRules;
@property(nonatomic) id <PTYTextViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) id <PTYTextViewDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) BOOL useNonAsciiFont; // @synthesize useNonAsciiFont=_useNonAsciiFont;
@property(retain, nonatomic) iTermSelection *selection; // @synthesize selection=_selection;
- (id)badgeLabelFontOfSize:(double)arg1;
- (struct CGSize)badgeLabelSizeFraction;
- (void)keyboardHandler:(id)arg1 insertText:(id)arg2;
- (struct _NSRange)keyboardHandlerMarkedTextRange:(id)arg1;
- (void)keyboardHandler:(id)arg1 sendEventToController:(id)arg2;
- (void)keyboardHandler:(id)arg1 interpretKeyEvents:(id)arg2;
- (void)keyboardHandler:(id)arg1 loadContext:(CDStruct_41394ce2 *)arg2 forEvent:(id)arg3;
- (BOOL)keyboardHandler:(id)arg1 shouldHandleKeyDown:(id)arg2;
- (void)popoverDidClose:(id)arg1;
- (void)menuDidClose:(id)arg1;
- (int)accessibilityHelperNumberOfLines;
- (int)accessibilityHelperWidth;
- (struct screen_char_t *)accessibilityHelperLineAtIndex:(int)arg1;
- (id)accessibilityHelperCurrentDocumentURL;
- (id)accessibilityHelperSelectedText;
- (CDStruct_7a47e81c)accessibilityHelperSelectedRange;
- (CDStruct_7a47e81c)accessibilityRangeOfCursor;
- (void)accessibilityHelperSetSelectedRange:(CDStruct_7a47e81c)arg1;
- (CDStruct_1ef3fb1f)accessibilityHelperCursorCoord;
- (struct CGRect)accessibilityHelperFrameForCoordRange:(CDStruct_7a47e81c)arg1;
- (CDStruct_1ef3fb1f)accessibilityHelperCoordForPoint:(struct CGPoint)arg1;
- (int)accessibilityHelperLineNumberForAccessibilityLineNumber:(int)arg1;
- (int)accessibilityHelperAccessibilityLineNumberForLineNumber:(int)arg1;
- (void)setAccessibilitySelectedTextRange:(struct _NSRange)arg1;
- (id)accessibilityDocument;
- (struct _NSRange)accessibilityVisibleCharacterRange;
- (long long)accessibilityInsertionPointLineNumber;
- (id)accessibilitySelectedTextRanges;
- (struct _NSRange)accessibilitySelectedTextRange;
- (id)accessibilitySelectedText;
- (long long)accessibilityNumberOfCharacters;
- (id)accessibilityValue;
- (id)accessibilityLabel;
- (BOOL)isAccessibilityFocused;
- (id)accessibilityHelp;
- (id)accessibilityRoleDescription;
- (id)accessibilityRole;
- (id)accessibilityAttributedStringForRange:(struct _NSRange)arg1;
- (struct CGRect)accessibilityFrameForRange:(struct _NSRange)arg1;
- (struct _NSRange)accessibilityRangeForIndex:(long long)arg1;
- (struct _NSRange)accessibilityRangeForPosition:(struct CGPoint)arg1;
- (id)accessibilityStringForRange:(struct _NSRange)arg1;
- (struct _NSRange)accessibilityRangeForLine:(long long)arg1;
- (long long)accessibilityLineForIndex:(long long)arg1;
- (BOOL)isAccessibilityElement;
- (struct CGRect)accessibilityConvertScreenRect:(struct CGRect)arg1;
- (id)drawingHelperLabelForDropTargetOnLine:(int)arg1;
- (void)drawingHelperDidFindRunOfAnimatedCellsStartingAt:(CDStruct_1ef3fb1f)arg1 ofLength:(int)arg2;
- (id)drawingHelperMatchesOnLine:(int)arg1;
- (id)drawingHelperFontForChar:(unsigned short)arg1 isComplex:(BOOL)arg2 renderBold:(char *)arg3 renderItalic:(char *)arg4;
- (id)drawingHelperColorForCode:(int)arg1 green:(int)arg2 blue:(int)arg3 colorMode:(int)arg4 bold:(BOOL)arg5 faint:(BOOL)arg6 isBackground:(BOOL)arg7;
- (id)drawingHelperTimestampForLine:(int)arg1;
- (void)drawingHelperUpdateFindCursorView;
- (id)drawingHelperCharactersWithNotesOnLine:(int)arg1;
- (id)drawingHelperTextExtractor;
- (struct screen_char_t *)drawingHelperCopyLineAtIndex:(int)arg1 toBuffer:(struct screen_char_t *)arg2;
- (struct screen_char_t *)drawingHelperLineAtScreenIndex:(int)arg1;
- (struct screen_char_t *)drawingHelperLineAtIndex:(int)arg1;
- (id)drawingHelperMarkOnLine:(int)arg1;
- (void)drawingHelperDrawBackgroundImageInRect:(struct CGRect)arg1 blendDefaultBackground:(BOOL)arg2;
- (int)colorMapKeyForCode:(int)arg1 green:(int)arg2 blue:(int)arg3 colorMode:(int)arg4 bold:(BOOL)arg5 isBackground:(BOOL)arg6;
- (BOOL)charBlinks:(struct screen_char_t)arg1;
- (id)colorForCode:(int)arg1 green:(int)arg2 blue:(int)arg3 colorMode:(int)arg4 bold:(BOOL)arg5 faint:(BOOL)arg6 isBackground:(BOOL)arg7;
- (void)selectionScrollWillStart;
- (struct CGPoint)pointForEvent:(id)arg1;
- (struct CGRect)liveRect;
- (id)indicatorFullScreenFlashColor;
- (void)colorMap:(id)arg1 mutingAmountDidChangeTo:(double)arg2;
- (void)colorMap:(id)arg1 dimmingAmountDidChangeTo:(double)arg2;
- (void)colorMap:(id)arg1 didChangeColorForKey:(int)arg2;
- (id)selectionIndexesOnLine:(int)arg1 containingCharacter:(unsigned short)arg2 inRange:(struct _NSRange)arg3;
- (CDStruct_1ef3fb1f)selectionPredecessorOfCoord:(CDStruct_1ef3fb1f)arg1;
- (CDStruct_c7660f97)selectionRangeForLineAt:(CDStruct_1ef3fb1f)arg1;
- (int)selectionViewportWidth;
- (CDStruct_c7660f97)selectionRangeForWrappedLineAt:(CDStruct_1ef3fb1f)arg1;
- (CDStruct_c7660f97)selectionRangeForSmartSelectionAt:(CDStruct_1ef3fb1f)arg1;
- (CDStruct_c7660f97)selectionRangeForWordAt:(CDStruct_1ef3fb1f)arg1;
- (CDStruct_c7660f97)selectionRangeForParentheticalAt:(CDStruct_1ef3fb1f)arg1;
- (CDStruct_1ef3fb1f)selectionRangeOfTerminalNullsOnLine:(int)arg1;
- (void)selectionDidChange:(id)arg1;
- (void)_settingsChanged:(id)arg1;
- (void)applicationDidResignActive:(id)arg1;
- (id)getFontForChar:(unsigned short)arg1 isComplex:(BOOL)arg2 renderBold:(char *)arg3 renderItalic:(char *)arg4;
- (void)semanticHistoryLaunchCoprocessWithCommand:(id)arg1;
- (void)showFireworks;
- (void)endFindCursor;
- (void)findCursorViewDismiss;
@property(readonly, nonatomic) BOOL isFindingCursor;
- (void)placeFindCursorOnAutoHide;
- (void)beginFindCursor:(BOOL)arg1 forceFireworks:(BOOL)arg2;
- (void)beginFindCursor:(BOOL)arg1;
- (void)createFindCursorWindowWithFireworks:(BOOL)arg1;
- (struct CGRect)cursorScreenFrame;
- (struct CGPoint)cursorCenterInFindCursorWindowCoords;
- (struct CGPoint)cursorCenterInScreenCoords;
- (double)verticalOffset;
@property(readonly, nonatomic) struct CGRect cursorFrame;
- (BOOL)getAndResetChangedSinceLastExpose;
- (void)aboutToHide;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (void)findOnPageSelectedResultDidChange;
- (void)findOnPageLocationsDidChange;
- (struct _NSRange)findOnPageRangeOfVisibleLines;
- (void)clearHighlights:(BOOL)arg1;
- (void)findString:(id)arg1 forwardDirection:(BOOL)arg2 mode:(unsigned long long)arg3 withOffset:(int)arg4 scrollToFirstResult:(BOOL)arg5;
- (void)resetFindCursor;
- (long long)findOnPageOverflowAdjustment;
- (void)findOnPageFailed;
- (void)findOnPageRevealRange:(CDStruct_7a47e81c)arg1;
- (void)findOnPageDidWrapForwards:(BOOL)arg1;
- (void)findOnPageSaveFindContextAbsPos;
- (void)findOnPageSelectRange:(CDStruct_7a47e81c)arg1 wrapped:(BOOL)arg2;
- (void)findOnPageSetFindString:(id)arg1 forwardDirection:(BOOL)arg2 mode:(unsigned long long)arg3 startingAtX:(int)arg4 startingAtY:(int)arg5 withOffset:(int)arg6 inContext:(id)arg7 multipleResults:(BOOL)arg8;
- (BOOL)continueFindAllResults:(id)arg1 inContext:(id)arg2;
- (BOOL)continueFind:(double *)arg1;
@property(readonly, nonatomic) FindContext *findContext;
- (void)addSearchResult:(id)arg1;
@property(readonly, nonatomic) BOOL findInProgress;
- (void)performFindPanelAction:(id)arg1;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (long long)conversationIdentifier;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1;
- (id)attributedSubstringForProposedRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (id)validAttributesForMarkedText;
- (struct _NSRange)selectedRange;
- (struct _NSRange)markedRange;
- (BOOL)hasMarkedText;
- (void)unmarkText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (void)insertText:(id)arg1;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (void)doCommandBySelector:(SEL)arg1;
- (void)printContent:(id)arg1;
- (void)print:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)uploadFilenamesOnPasteboard:(id)arg1 location:(struct CGPoint)arg2;
- (void)maybeUpload:(id)arg1;
- (BOOL)confirmUploadOfFiles:(id)arg1 toPath:(id)arg2;
- (void)downloadWithSCP:(id)arg1;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (unsigned long long)dragOperationForSender:(id)arg1;
- (void)_dragText:(id)arg1 forEvent:(id)arg2;
- (void)_dragImage:(id)arg1 forEvent:(id)arg2;
- (unsigned long long)dragOperationForSender:(id)arg1 numberOfValidItems:(int *)arg2;
- (BOOL)prepareForDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)imageIsVisible:(id)arg1;
- (BOOL)missingImageIsVisible:(id)arg1;
- (void)imageDidLoad:(id)arg1;
- (void)togglePauseAnimatingImage:(id)arg1;
- (void)inspectImage:(id)arg1;
- (void)openImage:(id)arg1;
- (void)copyImage:(id)arg1;
- (void)saveImageAs:(id)arg1;
- (id)menuAtCoord:(CDStruct_1ef3fb1f)arg1;
- (id)menuForMark:(id)arg1 directory:(id)arg2;
- (id)titleBarMenu;
- (id)menuForEvent:(id)arg1;
- (BOOL)addCustomActionsToMenu:(id)arg1 matchingText:(id)arg2 line:(int)arg3;
- (void)advancedPasteWithConfiguration:(id)arg1 fromSelection:(BOOL)arg2 withEvent:(id)arg3;
- (void)selectPreviousPaneWithEvent:(id)arg1;
- (void)selectNextPaneWithEvent:(id)arg1;
- (void)newHorizontalSplitWithProfile:(id)arg1 withEvent:(id)arg2;
- (void)newVerticalSplitWithProfile:(id)arg1 withEvent:(id)arg2;
- (void)newTabWithProfile:(id)arg1 withEvent:(id)arg2;
- (void)newWindowWithProfile:(id)arg1 withEvent:(id)arg2;
- (void)selectPaneBelowWithEvent:(id)arg1;
- (void)selectPaneAboveWithEvent:(id)arg1;
- (void)selectPaneRightWithEvent:(id)arg1;
- (void)selectPaneLeftWithEvent:(id)arg1;
- (void)sendText:(id)arg1 withEvent:(id)arg2;
- (void)sendHexCode:(id)arg1 withEvent:(id)arg2;
- (void)sendEscapeSequence:(id)arg1 withEvent:(id)arg2;
- (void)movePaneWithEvent:(id)arg1;
- (void)previousWindowWithEvent:(id)arg1;
- (void)nextWindowWithEvent:(id)arg1;
- (void)previousTabWithEvent:(id)arg1;
- (void)nextTabWithEvent:(id)arg1;
- (void)quickLookWithEvent:(id)arg1;
- (void)extendSelectionWithEvent:(id)arg1;
- (void)openContextMenuWithEvent:(id)arg1;
- (void)smartSelectAndMaybeCopyWithEvent:(id)arg1 ignoringNewlines:(BOOL)arg2;
- (void)openTargetInBackgroundWithEvent:(id)arg1;
- (void)openTargetWithEvent:(id)arg1;
- (void)pasteFromSelectionWithEvent:(id)arg1;
- (void)pasteFromClipboardWithEvent:(id)arg1;
- (id)contextMenuWithEvent:(id)arg1;
- (void)openSemanticHistoryPath:(id)arg1 orRawFilename:(id)arg2 workingDirectory:(id)arg3 lineNumber:(id)arg4 columnNumber:(id)arg5 prefix:(id)arg6 suffix:(id)arg7 completion:(CDUnknownBlockType)arg8;
- (void)setSemanticHistoryPrefs:(id)arg1;
- (void)recomputeBadgeLabel;
- (void)setBadgeLabel:(id)arg1;
@property(readonly, nonatomic) CDStruct_1ef3fb1f cursorCoord;
- (void)placeCursorOnCurrentLineWithEvent:(id)arg1 verticalOk:(BOOL)arg2;
- (CDStruct_1ef3fb1f)moveCursorHorizontallyTo:(CDStruct_1ef3fb1f)arg1 from:(CDStruct_1ef3fb1f)arg2;
- (void)updateCursor:(id)arg1;
- (void)showHideNotes:(id)arg1;
@property(readonly, nonatomic) BOOL anyAnnotationsAreVisible;
- (void)updateNoteViewFrames;
- (void)showNotes:(id)arg1;
- (void)addNote:(id)arg1;
- (void)addViewForNote:(id)arg1;
- (void)removeHighlightedRow:(id)arg1;
- (void)highlightMarkOnLine:(int)arg1 hasErrorCode:(BOOL)arg2;
- (void)beginFlash:(id)arg1;
- (void)searchInBrowser:(id)arg1;
- (void)browse:(id)arg1;
- (void)mail:(id)arg1;
- (void)bury:(id)arg1;
- (void)reRunCommand:(id)arg1;
- (void)terminalStateReset:(id)arg1;
- (void)terminalStateToggleCSIu:(id)arg1;
- (void)terminalStateToggleApplicationKeypad:(id)arg1;
- (void)terminalStateToggleApplicationCursor:(id)arg1;
- (void)terminalStateTogglePasteBracketing:(id)arg1;
- (void)terminalStateToggleMouseReporting:(id)arg1;
- (void)terminalStateToggleFocusReporting:(id)arg1;
- (void)terminalStateToggleAlternateScreen:(id)arg1;
- (void)restartTextViewSession:(id)arg1;
- (void)closeTextViewSession:(id)arg1;
- (void)toggleBroadcastingInput:(id)arg1;
- (void)editTextViewSession:(id)arg1;
- (void)clearTextViewBuffer:(id)arg1;
- (void)swapSessions:(id)arg1;
- (void)movePane:(id)arg1;
- (void)splitTextViewHorizontally:(id)arg1;
- (void)splitTextViewVertically:(id)arg1;
- (void)saveDocumentAs:(id)arg1;
- (id)contentWithAttributes:(BOOL)arg1;
@property(readonly, nonatomic) NSString *content;
- (id)attributedContent;
- (BOOL)pasteValuesOnPasteboard:(id)arg1 cdToDirectory:(BOOL)arg2;
- (void)pasteBase64Encoded:(id)arg1;
- (void)pasteSelection:(id)arg1;
- (void)pasteOptions:(id)arg1;
- (void)paste:(id)arg1;
- (void)copyWithStyles:(id)arg1;
- (void)copy:(id)arg1;
- (void)copySelectionAccordingToUserPreferences;
- (BOOL)liveSelectionRespectsSoftBoundaries;
- (id)getWordForX:(int)arg1 y:(int)arg2 range:(CDStruct_c7660f97 *)arg3 respectDividers:(BOOL)arg4;
- (BOOL)isAnyCharSelected;
- (void)growSelectionRight;
- (BOOL)growSelectionLeft;
- (void)selectCommandOutput:(id)arg1;
- (BOOL)moveSelectionEndpointToX:(int)arg1 Y:(int)arg2 locationInTextView:(struct CGPoint)arg3;
- (void)moveSelectionEndpoint:(long long)arg1 inDirection:(long long)arg2 by:(long long)arg3 cursorCoord:(CDStruct_1ef3fb1f)arg4;
- (void)moveSelectionEndpoint:(long long)arg1 inDirection:(long long)arg2 by:(long long)arg3;
- (id)logicalMovementHelperForCursorCoordinate:(CDStruct_1ef3fb1f)arg1;
- (SEL)selectorForSmartSelectionAction:(id)arg1;
- (BOOL)_haveShortSelection;
- (void)sendSelection:(id)arg1;
- (id)selectedAttributedTextWithPad:(BOOL)arg1;
- (id)selectedTextCappedAtSize:(int)arg1 minimumLineNumber:(int)arg2;
- (id)selectedTextAttributed:(BOOL)arg1 cappedAtSize:(int)arg2 minimumLineNumber:(int)arg3;
- (id)selectedTextCappedAtSize:(int)arg1;
@property(readonly, nonatomic) NSString *selectedText;
- (void)deselect;
- (void)selectRange:(CDStruct_7ab14d82)arg1;
- (void)selectOutputOfLastCommand:(id)arg1;
- (void)selectCurrentCommand:(id)arg1;
- (void)selectAll:(id)arg1;
- (CDStruct_7a47e81c)rangeByTrimmingNullsFromRange:(CDStruct_7a47e81c)arg1 trimSpaces:(BOOL)arg2;
- (id)smartSelectAtX:(int)arg1 y:(int)arg2 to:(CDStruct_c7660f97 *)arg3 ignoringNewlines:(BOOL)arg4 actionRequired:(BOOL)arg5 respectDividers:(BOOL)arg6;
- (BOOL)_markChangedSelectionAndBlinkDirty:(BOOL)arg1 width:(int)arg2;
- (BOOL)shouldRedrawBlinkingObjects;
- (void)markCursorDirty;
- (BOOL)refresh;
- (void)refreshAccessibility;
- (void)handleScrollbackOverflow:(int)arg1 userScroll:(BOOL)arg2;
- (BOOL)updateDirtyRects:(char *)arg1;
- (BOOL)_isAnythingBlinking;
- (BOOL)_isTextBlinking;
@property(readonly, nonatomic) BOOL isCursorBlinking;
- (void)releaseKeyFocus;
- (BOOL)stealKeyFocus;
@property(readonly, nonatomic) BOOL isInKeyWindow;
@property(readonly, nonatomic) double transparencyAlpha;
@property(readonly, nonatomic) BOOL useTransparency;
- (void)setMinimumContrast:(double)arg1;
@property(nonatomic) BOOL useSmartCursorColor;
- (void)setBlend:(float)arg1;
- (float)blend;
- (void)setTransparencyAffectsOnlyDefaultBackgroundColor:(BOOL)arg1;
- (double)minimumUnderlineOffset;
- (double)minimumBaselineOffset;
@property(nonatomic) BOOL cursorVisible;
@property(nonatomic) BOOL showTimestamps;
- (void)toggleShowTimestamps:(id)arg1;
- (void)setCharWidth:(double)arg1;
- (void)setLineHeight:(double)arg1;
- (void)setFont:(id)arg1 nonAsciiFont:(id)arg2 horizontalSpacing:(double)arg3 verticalSpacing:(double)arg4;
@property(readonly, nonatomic) NSFont *nonAsciiFontEvenIfNotUsed;
@property(readonly, nonatomic) NSFont *nonAsciiFont;
@property(readonly, nonatomic) NSFont *font;
- (void)setMarkedTextAttributes:(id)arg1;
- (id)markedTextAttributes;
- (void)setCursorType:(long long)arg1;
- (void)setCursorNeedsDisplay;
- (void)setUseBoldColor:(BOOL)arg1 brighten:(BOOL)arg2;
- (void)setAntiAlias:(BOOL)arg1 nonAscii:(BOOL)arg2;
@property(nonatomic) BOOL highlightCursorLine;
- (struct CGRect)rectWithHalo:(struct CGRect)arg1;
- (struct CGRect)gridRect;
@property(readonly, nonatomic) long long firstVisibleAbsoluteLineNumber;
@property(readonly, nonatomic) CDStruct_1ef3fb1f rangeOfVisibleLines;
- (struct CGRect)visibleContentRect;
- (BOOL)coordinateIsInMutableArea:(CDStruct_1ef3fb1f)arg1;
- (struct CGPoint)locationInTextViewFromEvent:(id)arg1;
@property(readonly, nonatomic) double desiredHeight;
- (struct CGRect)scrollViewContentSize;
- (void)resetMouseLocationToRefuseFirstResponderAt;
- (void)refuseFirstResponderAtCurrentMouseLocation;
- (void)useBackgroundIndicatorChanged:(id)arg1;
- (struct CGRect)configureIndicatorsHelperWithRightMargin:(double)arg1;
- (BOOL)removeUnderline;
- (BOOL)hasUnderline;
- (BOOL)getAndResetDrawingAnimatedImageFlag;
- (void)maybeInvalidateWindowShadow;
- (double)excess;
- (void)updateScrollerForBackgroundColor;
- (void)updateMarkedTextAttributes;
- (id)defaultTextColor;
- (id)defaultBackgroundColor;
@property(readonly, nonatomic) iTermTextDrawingHelper *drawingHelper;
- (void)performBlockWithFlickerFixerGrid:(CDUnknownBlockType)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)it_scrollWheelMomentum:(id)arg1;
- (BOOL)it_wantsScrollWheelMomentumEvents;
- (void)threeFingerTap:(id)arg1;
- (void)sendFakeThreeFingerClickDown:(BOOL)arg1 basedOnEvent:(id)arg2;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)pressureChangeWithEvent:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)touchesCancelledWithEvent:(id)arg1;
- (void)touchesMovedWithEvent:(id)arg1;
- (void)touchesEndedWithEvent:(id)arg1;
- (void)touchesBeganWithEvent:(id)arg1;
- (void)otherMouseDragged:(id)arg1;
- (void)otherMouseUp:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (void)rightMouseDragged:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseUp:(id)arg1;
- (BOOL)mouseDownImpl:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (BOOL)wantsScrollEventsForSwipeTrackingOnAxis:(long long)arg1;
- (void)viewDidMoveToWindow;
- (void)invalidateInputMethodEditorRect;
- (void)setNeedsDisplayOnLine:(int)arg1 inRange:(CDStruct_1ef3fb1f)arg2;
- (void)setNeedsDisplayOnLine:(int)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (BOOL)isOpaque;
- (BOOL)isFlipped;
- (BOOL)shouldDrawInsertionPoint;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewDidChangeBackingProperties;
- (void)removeAllTrackingAreas;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay:(BOOL)arg1;
- (struct CGRect)adjustScroll:(struct CGRect)arg1;
- (void)setAlphaValue:(double)arg1;
- (void)scrollLineNumberRangeIntoView:(CDStruct_1ef3fb1f)arg1;
- (void)_scrollToCenterLine:(int)arg1;
- (void)_scrollToLine:(int)arg1;
- (void)scrollToSelection;
- (void)scrollToAbsoluteOffset:(long long)arg1 height:(int)arg2;
@property(readonly, nonatomic) long long absoluteScrollPosition;
- (double)pageScrollHeight;
- (void)scrollBy:(double)arg1;
- (int)inputMethodEditorLength;
@property(readonly, nonatomic) BOOL keyIsARepeat;
- (void)keyUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)scrollEnd;
- (void)scrollHome;
- (void)scrollPageDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)scrollLineDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)validateMenuItem:(id)arg1;
- (void)changeFont:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 colorMap:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (double)mouseHandlerAccumulatedDeltaY:(id)arg1 forEvent:(id)arg2;
- (id)mouseHandlerSwipeHandler:(id)arg1;
- (void)mouseHandler:(id)arg1 dragSemanticHistoryWithEvent:(id)arg2 coord:(CDStruct_1ef3fb1f)arg3;
- (void)mouseHandler:(id)arg1 dragText:(id)arg2 forEvent:(id)arg3;
- (id)mouseHandlerSelectedText:(id)arg1;
- (void)mouseHandler:(id)arg1 dragImage:(id)arg2 forEvent:(id)arg3;
- (void)mouseHandlerWillDrag:(id)arg1;
- (BOOL)mouseHandlerShowingAlternateScreen:(id)arg1;
- (id)mouseHandler:(id)arg1 stringForUp:(BOOL)arg2 flags:(unsigned long long)arg3 latin1:(out char *)arg4;
- (BOOL)mouseHandler:(id)arg1 moveSelectionToGridCoord:(CDStruct_1ef3fb1f)arg2 viewCoord:(struct CGPoint)arg3;
- (BOOL)mouseHandler:(id)arg1 moveSelectionToPointInEvent:(id)arg2;
- (void)mouseHandlerRemoveSelection:(id)arg1;
- (void)mouseHandler:(id)arg1 sendString:(id)arg2 latin1:(BOOL)arg3;
- (double)mouseHandler:(id)arg1 accumulateVerticalScrollFromEvent:(id)arg2;
- (void)mouseHandlerJiggle:(id)arg1;
- (BOOL)mouseHandlerShouldReportScroll:(id)arg1;
- (BOOL)mouseHandlerShouldReportClicksAndDrags:(id)arg1;
- (BOOL)mouseHandlerViewIsFirstResponder:(id)arg1;
- (BOOL)mouseHandler:(id)arg1 reportMouseEvent:(unsigned long long)arg2 modifiers:(unsigned long long)arg3 button:(int)arg4 coordinate:(CDStruct_1ef3fb1f)arg5 event:(id)arg6 deltaY:(double)arg7 allowDragBeforeMouseDown:(BOOL)arg8 testOnly:(BOOL)arg9;
- (void)mouseHandler:(id)arg1 sendFakeOtherMouseUp:(id)arg2;
- (struct CGPoint)mouseHandler:(id)arg1 viewCoordForEvent:(id)arg2 clipped:(BOOL)arg3;
- (void)mouseHandlerCopy:(id)arg1;
- (BOOL)mouseHandlerIsValid:(id)arg1;
- (void)mouseHandlerResetFindOnPageCursor:(id)arg1;
- (BOOL)mouseHandler:(id)arg1 getFindOnPageCursor:(CDStruct_1ef3fb1f *)arg2;
- (void)mouseHandlerOpenPasswordManager:(id)arg1;
- (CDStruct_1ef3fb1f)mouseHandlerCursorCoord:(id)arg1;
- (BOOL)mouseHandlerAtPasswordPrompt:(id)arg1;
- (void)mouseHandlerSetFindOnPageCursorCoord:(CDStruct_1ef3fb1f)arg1;
- (void)mouseHandlerMoveCursorToCoord:(CDStruct_1ef3fb1f)arg1 forEvent:(id)arg2;
- (BOOL)mouseHandler:(id)arg1 viewCoordIsReportable:(struct CGPoint)arg2;
- (CDStruct_1ef3fb1f)mouseHandlerCoordForPointInView:(struct CGPoint)arg1;
- (CDStruct_1ef3fb1f)mouseHandlerCoordForPointInWindow:(struct CGPoint)arg1;
- (void)mouseHandlerUnlockScrolling:(id)arg1;
- (BOOL)mouseHandlerIsScrolledToBottom:(id)arg1;
- (void)mouseHandlerOpenTargetWithEvent:(id)arg1 inBackground:(BOOL)arg2;
- (void)mouseHandlerDidInferScrollingIntent:(id)arg1 trying:(BOOL)arg2;
- (void)mouseHandlerDidMutateState:(id)arg1;
- (void)mouseHandlerLockScrolling:(id)arg1;
- (BOOL)mouseHandlerReportingAllowed:(id)arg1;
- (id)mouseHandler:(id)arg1 imageAt:(CDStruct_1ef3fb1f)arg2;
- (id)mouseHandlerCurrentSelection:(id)arg1;
- (void)mouseHandlerDidSingleClick:(id)arg1;
- (long long)mouseHandlerMouseMode:(id)arg1;
- (BOOL)mouseHandler:(id)arg1 coordIsMutable:(CDStruct_1ef3fb1f)arg2;
- (CDStruct_1ef3fb1f)mouseHandler:(id)arg1 clickPoint:(id)arg2 allowOverflow:(BOOL)arg3;
- (BOOL)mouseHandlerIsInKeyWindow:(id)arg1;
- (void)mouseHandlerWillBeginDragPane:(id)arg1;
- (void)mouseHandlerMakeFirstResponder:(id)arg1;
- (void)mouseHandlerMakeKeyAndOrderFrontAndMakeFirstResponderAndActivateApp:(id)arg1;
- (BOOL)mouseHandlerViewHasFocus:(id)arg1;
- (void)didCopyToPasteboardWithControlSequence;
- (void)mouseReportingFrustrationDetectorDidDetectFrustration:(id)arg1;
- (id)shellIntegrationExpect;
- (void)shellIntegrationWindowControllerSendText:(id)arg1;
- (void)installShellIntegration:(id)arg1;
- (id)urlActionHelperSelection:(id)arg1;
- (void)urlActionHelperCopySelectionIfNeeded:(id)arg1;
- (id)urlActionHelperScope:(id)arg1;
- (void)urlActionHelper:(id)arg1 launchProfileInCurrentTerminal:(id)arg2 withURL:(id)arg3;
- (double)urlActionHelperLineHeight:(id)arg1;
- (id)urlActionHelperScreen:(id)arg1;
- (struct CGPoint)urlActionHelper:(id)arg1 pointForCoord:(CDStruct_1ef3fb1f)arg2;
- (id)urlActionHelperAttributes:(id)arg1;
- (void)urlActionHelper:(id)arg1 startSecureCopyDownload:(id)arg2;
- (id)urlActionHelperSmartSelectionRules:(id)arg1;
- (id)urlActionHelperSmartSelectionActionSelectorDictionary:(id)arg1;
- (id)urlActionHelper:(id)arg1 remoteHostOnLine:(int)arg2;
- (CDStruct_1ef3fb1f)urlActionHelper:(id)arg1 coordForEvent:(id)arg2 allowRightMarginOverflow:(BOOL)arg3;
- (id)urlActionHelper:(id)arg1 secureCopyPathForFile:(id)arg2 onLine:(int)arg3;
- (void)urlActionHelper:(id)arg1 workingDirectoryOnLine:(int)arg2 completion:(CDUnknownBlockType)arg3;
- (id)urlActionHelperNewTextExtractor:(id)arg1;
- (id)urlActionHelper:(id)arg1 imageInfoAt:(CDStruct_1ef3fb1f)arg2;
- (BOOL)urlActionHelperShouldIgnoreHardNewlines:(id)arg1;
- (id)charAttributes:(struct screen_char_t)arg1;
- (BOOL)showWebkitPopoverAtPoint:(struct CGPoint)arg1 url:(id)arg2;
- (void)showDefinitionForWordAt:(struct CGPoint)arg1;
- (void)finishHandlingQuickLookWithEvent:(id)arg1 action:(id)arg2;
- (void)handleQuickLookWithEvent:(id)arg1;
- (BOOL)mouseIsOverImageInEvent:(id)arg1;
- (BOOL)setCursor:(id)arg1;
- (BOOL)updateCursor:(id)arg1 action:(id)arg2;
- (void)contextMenuActionSendText:(id)arg1;
- (void)contextMenuActionRunCoprocess:(id)arg1;
- (void)smartSelectionActionFailedNotificationSelected:(id)arg1;
- (void)contextMenuActionRunCommandInWindow:(id)arg1;
- (void)contextMenuActionRunCommand:(id)arg1;
- (void)contextMenuActionOpenURL:(id)arg1;
- (void)contextMenuActionOpenFile:(id)arg1;
- (id)smartSelectionActionSelectorDictionary;
- (void)finishUpdatingUnderlinesWithAction:(id)arg1 event:(id)arg2;
- (void)updateUnderlinedURLs:(id)arg1;
- (void)finishHandlingSemanticHistoryItemDragWithEvent:(id)arg1 action:(id)arg2;
- (void)handleSemanticHistoryItemDragWithEvent:(id)arg1 coord:(CDStruct_1ef3fb1f)arg2;
- (id)imageInfoAtCoord:(CDStruct_1ef3fb1f)arg1;
- (CDStruct_1ef3fb1f)coordForPointInWindow:(struct CGPoint)arg1;
- (struct CGPoint)pointForCoord:(CDStruct_1ef3fb1f)arg1;
- (CDStruct_1ef3fb1f)coordForMouseLocation:(struct CGPoint)arg1;
- (CDStruct_1ef3fb1f)coordForEvent:(id)arg1;
- (CDStruct_1ef3fb1f)coordForPoint:(struct CGPoint)arg1 allowRightMarginOverflow:(BOOL)arg2;
- (struct CGPoint)windowLocationToRowCol:(struct CGPoint)arg1 allowRightMarginOverflow:(BOOL)arg2;
- (struct CGPoint)clickPoint:(id)arg1 allowRightMarginOverflow:(BOOL)arg2;
- (void)initARC;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

