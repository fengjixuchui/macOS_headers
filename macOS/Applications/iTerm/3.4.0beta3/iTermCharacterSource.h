//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSAttributedString, NSFont, NSImage, NSMutableArray, NSMutableData, NSString, iTermBitmapData, iTermCharacterSourceAttributes, iTermCharacterSourceDescriptor;

@interface iTermCharacterSource : NSObject
{
    NSString *_string;
    iTermCharacterSourceDescriptor *_descriptor;
    iTermCharacterSourceAttributes *_attributes;
    BOOL _antialiased;
    BOOL _fakeBold;
    BOOL _fakeItalic;
    NSFont *_font;
    struct CGSize _size;
    BOOL _boxDrawing;
    BOOL _useNativePowerlineGlyphs;
    BOOL _postprocessed;
    struct __CTLine *_lineRefs[4];
    struct CGContext *_context;
    NSMutableArray *_datas;
    NSAttributedString *_attributedStrings[4];
    NSImage *_image;
    NSMutableData *_glyphsData;
    NSMutableData *_positionsBuffer;
    BOOL _haveDrawn;
    struct CGImage *_imageRef;
    NSArray *_parts;
    int _radius;
    BOOL _haveTestedForEmoji;
    long long _nextIterationToDrawBackgroundFor;
    long long _numberOfIterationsNeeded;
    iTermBitmapData *_postprocessedData;
    BOOL _isAscii;
    long long _bytesPerRow;
    long long _numberOfRows;
    BOOL _isEmoji;
}

+ (struct CGRect)boundingRectForCharactersInRange:(struct _NSRange)arg1 asciiFontInfo:(id)arg2 nonAsciiFontInfo:(id)arg3 scale:(double)arg4 useBoldFont:(BOOL)arg5 useItalicFont:(BOOL)arg6 usesNonAsciiFont:(BOOL)arg7 context:(struct CGContext *)arg8;
- (void).cxx_destruct;
@property(readonly, nonatomic) BOOL isEmoji; // @synthesize isEmoji=_isEmoji;
- (id)attributesForIteration:(long long)arg1;
- (void)initializeCTMWithFont:(struct __CTFont *)arg1 offset:(struct CGPoint)arg2 iteration:(long long)arg3 context:(struct CGContext *)arg4;
- (void)initializeTextMatrixInContext:(struct CGContext *)arg1 withSkew:(double)arg2 offset:(struct CGPoint)arg3;
- (struct CGPoint *)positionsInRun:(struct __CTRun *)arg1 length:(unsigned long long)arg2;
- (const unsigned short *)glyphsInRun:(struct __CTRun *)arg1 length:(unsigned long long)arg2;
- (void)drawEmojiWithFont:(struct __CTFont *)arg1 offset:(struct CGPoint)arg2 buffer:(const unsigned short *)arg3 positions:(struct CGPoint *)arg4 length:(unsigned long long)arg5 iteration:(long long)arg6 context:(struct CGContext *)arg7;
- (id)textColorForIteration:(long long)arg1;
- (void)drawRuns:(struct __CFArray *)arg1 atOffset:(struct CGPoint)arg2 skew:(double)arg3 iteration:(long long)arg4;
- (void)drawBoxAtOffset:(struct CGPoint)arg1 iteration:(int)arg2;
- (void)drawBoxInContext:(struct CGContext *)arg1 offset:(struct CGPoint)arg2 iteration:(int)arg3;
- (void)prepareToDrawRunAtIteration:(long long)arg1 offset:(struct CGPoint)arg2 runFont:(struct __CTFont *)arg3 skew:(double)arg4 initialized:(BOOL)arg5;
- (void)initializeIteration:(long long)arg1 offset:(struct CGPoint)arg2 skew:(double)arg3 context:(struct CGContext *)arg4;
- (void)setTextColorForIteration:(long long)arg1 context:(struct CGContext *)arg2;
- (void)drawBackgroundIfNeededForIteration:(long long)arg1 context:(struct CGContext *)arg2;
- (void)initializeStateIfNeededWithFont:(struct __CTFont *)arg1;
- (void)fillBackgroundForIteration:(long long)arg1 context:(struct CGContext *)arg2;
- (void)drawWithOffset:(struct CGPoint)arg1 iteration:(long long)arg2;
- (struct CGRect)frameFlipped:(BOOL)arg1;
@property(readonly, nonatomic) struct CGRect frame;
- (double)fakeBoldShift;
- (void)drawIfNeeded;
- (id)newParts;
@property(readonly, nonatomic) NSArray *parts;
- (id)bitmapForPart:(int)arg1;
- (void)performPostProcessing;
- (void)logStringRepresentationOfAlphaChannelOfBitmapDataBytes:(char *)arg1;
- (int)maxParts;
- (id)description;
- (void)dealloc;
- (id)initWithCharacter:(id)arg1 descriptor:(id)arg2 attributes:(id)arg3 boxDrawing:(BOOL)arg4 radius:(int)arg5 useNativePowerlineGlyphs:(BOOL)arg6 context:(struct CGContext *)arg7;

@end

