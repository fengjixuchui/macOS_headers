//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSControl.h"

#import "NSAccessibilityGroup.h"
#import "NSDraggingSource.h"
#import "PSMProgressIndicatorDelegate.h"
#import "PSMTabBarControlProtocol.h"
#import "PSMTabViewDelegate.h"

@class NSEvent, NSMutableArray, NSString, NSTabView, NSTimer, PSMOverflowPopUpButton, PSMRolloverButton;

@interface PSMTabBarControl : NSControl <PSMTabBarControlProtocol, NSDraggingSource, NSAccessibilityGroup, PSMProgressIndicatorDelegate, PSMTabViewDelegate>
{
    NSMutableArray *_cells;
    PSMOverflowPopUpButton *_overflowPopUpButton;
    PSMRolloverButton *_addTabButton;
    int _resizeAreaCompensation;
    NSTimer *_animationTimer;
    float _animationDelta;
    BOOL _resizing;
    int _currentStep;
    BOOL _isHidden;
    BOOL _hideIndicators;
    id partnerView;
    BOOL _awakenedFromNib;
    int _tabBarWidth;
    NSEvent *_lastMouseDownEvent;
    NSEvent *_lastMiddleMouseDownEvent;
    BOOL _haveInitialDragLocation;
    struct CGPoint _initialDragLocation;
    BOOL _didDrag;
    BOOL _closeClicked;
    unsigned long long _modifier;
    BOOL _hasCloseButton;
    BOOL _disableTabClose;
    BOOL _hideForSingleTab;
    BOOL _showAddTabButton;
    BOOL _sizeCellsToFit;
    BOOL _stretchCellsToFit;
    BOOL _useOverflowMenu;
    BOOL _allowsBackgroundTabClosing;
    BOOL _allowsResizing;
    BOOL _selectsTabsOnMouseDown;
    BOOL _automaticallyAnimates;
    BOOL _lainOutWithOverflow;
    BOOL _smartTruncation;
    BOOL _ignoreTrailingParentheticalsForSmartTruncation;
    int _orientation;
    int _cellMinWidth;
    int _cellMaxWidth;
    int _cellOptimumWidth;
    int _tabLocation;
    int _minimumTabDragDistance;
    id <PSMTabStyle> _style;
    NSTabView *_tabView;
    id <PSMTabBarControlDelegate> _delegate;
    double _height;
    struct NSEdgeInsets _insets;
}

+ (BOOL)isAnyDragInProgress;
+ (id)bundle;
@property(nonatomic) double height; // @synthesize height=_height;
@property(nonatomic) struct NSEdgeInsets insets; // @synthesize insets=_insets;
@property(nonatomic) BOOL ignoreTrailingParentheticalsForSmartTruncation; // @synthesize ignoreTrailingParentheticalsForSmartTruncation=_ignoreTrailingParentheticalsForSmartTruncation;
@property(readonly, nonatomic) PSMOverflowPopUpButton *overflowPopUpButton; // @synthesize overflowPopUpButton=_overflowPopUpButton;
@property(nonatomic) id <PSMTabBarControlDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSTabView *tabView; // @synthesize tabView=_tabView;
@property(nonatomic) BOOL smartTruncation; // @synthesize smartTruncation=_smartTruncation;
@property(readonly, nonatomic) BOOL lainOutWithOverflow; // @synthesize lainOutWithOverflow=_lainOutWithOverflow;
@property(nonatomic) int minimumTabDragDistance; // @synthesize minimumTabDragDistance=_minimumTabDragDistance;
@property(nonatomic) int tabLocation; // @synthesize tabLocation=_tabLocation;
@property(nonatomic) BOOL automaticallyAnimates; // @synthesize automaticallyAnimates=_automaticallyAnimates;
@property(nonatomic) BOOL selectsTabsOnMouseDown; // @synthesize selectsTabsOnMouseDown=_selectsTabsOnMouseDown;
@property(nonatomic) BOOL allowsResizing; // @synthesize allowsResizing=_allowsResizing;
@property(nonatomic) BOOL allowsBackgroundTabClosing; // @synthesize allowsBackgroundTabClosing=_allowsBackgroundTabClosing;
@property(nonatomic) BOOL useOverflowMenu; // @synthesize useOverflowMenu=_useOverflowMenu;
@property(nonatomic) BOOL stretchCellsToFit; // @synthesize stretchCellsToFit=_stretchCellsToFit;
@property(nonatomic) BOOL sizeCellsToFit; // @synthesize sizeCellsToFit=_sizeCellsToFit;
@property(nonatomic) int cellOptimumWidth; // @synthesize cellOptimumWidth=_cellOptimumWidth;
@property(nonatomic) int cellMaxWidth; // @synthesize cellMaxWidth=_cellMaxWidth;
@property(nonatomic) int cellMinWidth; // @synthesize cellMinWidth=_cellMinWidth;
@property(nonatomic) BOOL showAddTabButton; // @synthesize showAddTabButton=_showAddTabButton;
@property(nonatomic) BOOL hideForSingleTab; // @synthesize hideForSingleTab=_hideForSingleTab;
@property(retain, nonatomic) id <PSMTabStyle> style; // @synthesize style=_style;
@property(nonatomic) int orientation; // @synthesize orientation=_orientation;
@property(nonatomic) BOOL disableTabClose; // @synthesize disableTabClose=_disableTabClose;
- (void)progressIndicatorNeedsUpdate;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)moveTabAtIndex:(long long)arg1 toTabBar:(id)arg2 atIndex:(long long)arg3;
- (void)setTabsHaveCloseButtons:(BOOL)arg1;
- (id)accessoryTextColor;
- (void)fillPath:(id)arg1;
- (void)setModifier:(unsigned long long)arg1;
- (id)_modifierString;
- (void)modifierChanged:(id)arg1;
- (id)tabColorForTabViewItem:(id)arg1;
- (void)setTabColor:(id)arg1 forTabViewItem:(id)arg2;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityTabs;
- (id)accessibilityChildren;
- (id)accessibilityRole;
- (int)numberOfVisibleTabs;
- (id)lastVisibleTab;
- (id)cellForPoint:(struct CGPoint)arg1 cellFrame:(struct CGRect *)arg2;
- (id)representedTabViewItems;
- (void)bindPropertiesForCell:(id)arg1 andTabViewItem:(id)arg2;
- (void)initializeStateForCell:(id)arg1;
- (void)setObjectCount:(long long)arg1 forTabWithIdentifier:(id)arg2;
- (void)setIcon:(id)arg1 forTabWithIdentifier:(id)arg2;
- (void)graphicDidChangeForTabWithIdentifier:(id)arg1;
- (void)setIsProcessing:(BOOL)arg1 forTabWithIdentifier:(id)arg2;
- (id)cellWithIdentifier:(id)arg1;
- (void)changeIdentifier:(id)arg1 atIndex:(int)arg2;
- (void)placeView:(struct CGRect)arg1;
- (struct CGSize)maximumFrameSizeFromKnobPosition:(int)arg1;
- (struct CGSize)minimumFrameSizeFromKnobPosition:(int)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (id)tabView:(id)arg1 unknownObjectWasDropped:(id)arg2;
- (BOOL)tabView:(id)arg1 shouldAcceptDragFromSender:(id)arg2;
- (unsigned long long)tabView:(id)arg1 draggingEnteredTabBarForSender:(id)arg2;
- (void)tabViewDidChangeNumberOfTabViewItems:(id)arg1;
- (void)tabView:(id)arg1 willSelectTabViewItem:(id)arg2;
- (BOOL)tabView:(id)arg1 shouldSelectTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 doubleClickTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 willRemoveTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 willInsertTabViewItem:(id)arg2 atIndex:(int)arg3;
- (void)tabView:(id)arg1 willAddTabViewItem:(id)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (void)windowStatusDidChange:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;
- (void)frameDidChange:(id)arg1;
- (void)tabNothing:(id)arg1;
- (void)addTab:(id)arg1;
- (void)tabBarDoubleClick;
- (void)tabDoubleClick:(id)arg1;
- (void)tabClick:(id)arg1;
- (void)closeTabClick:(id)arg1;
- (void)overflowMenuAction:(id)arg1;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)_delegateAcceptsSender:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggingSession:(id)arg1 movedToPoint:(struct CGPoint)arg2;
- (void)draggingSession:(id)arg1 willBeginAtPoint:(struct CGPoint)arg2;
- (BOOL)ignoreModifierKeysForDraggingSession:(id)arg1;
- (id)beginDraggingSessionWithItems:(id)arg1 event:(id)arg2 source:(id)arg3;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (void)resetCursorRects;
- (id)menuForEvent:(id)arg1;
- (void)handleMouseUp:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)otherMouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (void)_setupAddTabButton:(struct CGRect)arg1;
- (void)_setupOverflowMenu:(id)arg1;
- (id)_setupCells:(id)arg1;
- (void)finishUpdateWithRegularWidths:(id)arg1 widthsWithOverflow:(id)arg2;
- (void)_animateCells:(id)arg1;
- (void)_removeCellTrackingRects;
- (void)removeCell:(id)arg1;
- (id)cellWidthsForHorizontalArrangementWithOverflow:(BOOL)arg1;
- (BOOL)shouldUseOptimalWidthWithOverflow:(BOOL)arg1;
- (id)variableCellWidthsWithOverflow:(BOOL)arg1;
- (void)update:(BOOL)arg1;
- (void)update;
- (void)moveTabAtIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)backgroundColorWillChange;
@property(retain, nonatomic) id partnerView;
- (BOOL)isTabBarHidden;
- (void)animateShowHide:(id)arg1;
- (void)hideTabBar:(BOOL)arg1 animate:(BOOL)arg2;
- (void)removeTabForCell:(id)arg1;
- (void)addTabViewItem:(id)arg1;
- (void)addTabViewItem:(id)arg1 atIndex:(unsigned long long)arg2;
- (unsigned long long)truncationStyle;
- (BOOL)wantsMouseDownAtPoint:(struct CGPoint)arg1;
- (id)addTabButton;
- (id)styleName;
- (void)setLastMiddleMouseDownEvent:(id)arg1;
- (id)lastMiddleMouseDownEvent;
- (void)setLastMouseDownEvent:(id)arg1;
- (id)lastMouseDownEvent;
- (id)cells;
- (void)sanityCheck:(id)arg1 force:(BOOL)arg2;
- (void)sanityCheck:(id)arg1;
- (void)sanityCheckFailedWithCallsite:(id)arg1 reason:(id)arg2;
- (void)awakeFromNib;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (struct CGRect)genericCellRectWithOverflow:(BOOL)arg1;
- (float)availableCellWidthWithOverflow:(BOOL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

