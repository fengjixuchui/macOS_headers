//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSResponder.h"

#import "PTYTaskDelegate.h"
#import "PTYTextViewDelegate.h"
#import "PopupDelegate.h"
#import "TmuxGatewayDelegate.h"
#import "VT100ScreenDelegate.h"
#import "iTermAutomaticProfileSwitcherDelegate.h"
#import "iTermBackgroundDrawingHelperDelegate.h"
#import "iTermComposerManagerDelegate.h"
#import "iTermCoprocessDelegate.h"
#import "iTermCopyModeHandlerDelegate.h"
#import "iTermEchoProbeDelegate.h"
#import "iTermFindDriverDelegate.h"
#import "iTermHotKeyNavigableSession.h"
#import "iTermIntervalTreeObserver.h"
#import "iTermLogging.h"
#import "iTermMetaFrustrationDetector.h"
#import "iTermMetalGlueDelegate.h"
#import "iTermNaggingControllerDelegate.h"
#import "iTermObject.h"
#import "iTermPasteHelperDelegate.h"
#import "iTermSessionNameControllerDelegate.h"
#import "iTermSessionViewDelegate.h"
#import "iTermStandardKeyMapperDelegate.h"
#import "iTermStatusBarViewControllerDelegate.h"
#import "iTermSubscribable.h"
#import "iTermTermkeyKeyMapperDelegate.h"
#import "iTermTmuxControllerSession.h"
#import "iTermUniquelyIdentifiable.h"
#import "iTermUpdateCadenceControllerDelegate.h"
#import "iTermWeaklyReferenceable.h"
#import "iTermWorkingDirectoryPollerDelegate.h"

@class DVR, DVRDecoder, FindContext, Interval, MovingAverage, NSArray, NSColor, NSData, NSDate, NSDictionary, NSFileHandle, NSImage, NSMutableArray, NSMutableData, NSMutableDictionary, NSMutableSet, NSNumber, NSObject<OS_dispatch_semaphore>, NSString, NSTimer, NSURL, PTYTask, PTYTextView, SessionView, TerminalFileDownload, TerminalFileUpload, TextViewWrapper, TmuxController, TmuxGateway, VT100RemoteHost, VT100Screen, VT100Terminal, iTermAutomaticProfileSwitcher, iTermBackgroundDrawingHelper, iTermBuiltInFunctions, iTermCacheableImage, iTermColorMap, iTermComposerManager, iTermCopyModeHandler, iTermEchoProbe, iTermExpect, iTermExpectation, iTermGraphicSource, iTermLoggingHelper, iTermMark, iTermMetaFrustrationDetector, iTermMetalGlue, iTermNaggingController, iTermPasteHelper, iTermPrintGuard, iTermProcessInfo, iTermPromptOnCloseReason, iTermQuickLookController, iTermRestorableSession, iTermSessionNameController, iTermStatusBarViewController, iTermSwiftyString, iTermThroughputEstimator, iTermTmuxOptionMonitor, iTermTmuxStatusBarMonitor, iTermUpdateCadenceController, iTermVariableReference, iTermVariableScope, iTermVariableScope<iTermSessionScope>, iTermVariables, iTermWorkingDirectoryPoller;

@interface PTYSession : NSResponder <iTermAutomaticProfileSwitcherDelegate, iTermBackgroundDrawingHelperDelegate, iTermCoprocessDelegate, iTermCopyModeHandlerDelegate, iTermComposerManagerDelegate, iTermHotKeyNavigableSession, iTermIntervalTreeObserver, iTermLogging, iTermMetaFrustrationDetector, iTermMetalGlueDelegate, iTermNaggingControllerDelegate, iTermObject, iTermPasteHelperDelegate, iTermSessionNameControllerDelegate, iTermSessionViewDelegate, iTermStandardKeyMapperDelegate, iTermStatusBarViewControllerDelegate, iTermTermkeyKeyMapperDelegate, iTermUpdateCadenceControllerDelegate, iTermWorkingDirectoryPollerDelegate, iTermEchoProbeDelegate, iTermFindDriverDelegate, iTermSubscribable, iTermTmuxControllerSession, iTermUniquelyIdentifiable, iTermWeaklyReferenceable, PopupDelegate, PTYTaskDelegate, PTYTextViewDelegate, TmuxGatewayDelegate, VT100ScreenDelegate>
{
    VT100Terminal *_terminal;
    NSString *_termVariable;
    BOOL _exited;
    TextViewWrapper *_wrapper;
    NSTimer *_antiIdleTimer;
    NSDictionary *_originalProfile;
    double _lastInput;
    double _lastUpdate;
    NSMutableSet *_overriddenFields;
    DVR *_dvr;
    DVRDecoder *_dvrDecoder;
    PTYSession *_liveSession;
    BOOL _timerRunning;
    NSDate *_creationDate;
    NSString *_pasteboard;
    NSMutableData *_pbtext;
    long long _triggerLineNumber;
    NSMutableArray *_triggers;
    BOOL _focused;
    FindContext *_tailFindContext;
    NSTimer *_tailFindTimer;
    TmuxGateway *_tmuxGateway;
    BOOL _tmuxSecureLogging;
    BOOL _tmuxTitleOutOfSync;
    int _tmuxMode;
    BOOL _tmuxWindowClosingByClientRequest;
    NSFileHandle *_tmuxClientWritePipe;
    long long _requestAttentionId;
    iTermMark *_lastMark;
    CDStruct_7a47e81c _commandRange;
    CDStruct_7ab14d82 _lastOrCurrentlyRunningCommandAbsRange;
    long long _lastPromptLine;
    long long _fakePromptDetectedAbsLine;
    double _timeOfLastScheduling;
    NSObject<OS_dispatch_semaphore> *_executionSemaphore;
    double _lastTimeout;
    NSImage *_patternedImage;
    CDStruct_ffe6b7c1 _lastReportedCoord;
    BOOL _reportingMouseDown;
    BOOL _shouldExpectPromptMarks;
    BOOL _shouldExpectCurrentDirUpdates;
    BOOL _workingDirectoryPollerDisabled;
    BOOL _cursorGuideSettingHasChanged;
    double _lastPartialLineTriggerCheck;
    NSMutableDictionary *_announcements;
    NSMutableArray *_queuedTokens;
    MovingAverage *_bellRate;
    double _lastBell;
    double _ignoreBellUntil;
    double _annoyingBellOfferDeclinedAt;
    BOOL _suppressAllOutput;
    BOOL _shouldRestart;
    BOOL _synthetic;
    double _idleTime;
    iTermThroughputEstimator *_throughputEstimator;
    long long _unicodeVersion;
    NSMutableDictionary *_keyLabels;
    NSMutableArray *_keyLabelsStack;
    BOOL _inLiveResize;
    VT100RemoteHost *_currentHost;
    NSMutableDictionary *_keystrokeSubscriptions;
    NSMutableDictionary *_keyboardFilterSubscriptions;
    NSMutableDictionary *_updateSubscriptions;
    NSMutableDictionary *_promptSubscriptions;
    NSMutableDictionary *_customEscapeSequenceNotifications;
    BOOL _hideAfterTmuxWindowOpens;
    BOOL _useAdaptiveFrameRate;
    long long _adaptiveFrameRateThroughputThreshold;
    unsigned int _autoLogId;
    iTermCopyModeHandler *_copyModeHandler;
    long long _statusChangedAbsLine;
    iTermUpdateCadenceController *_cadenceController;
    iTermMetalGlue *_metalGlue;
    int _updateCount;
    BOOL _metalFrameChangePending;
    int _nextMetalDisabledToken;
    NSMutableSet *_metalDisabledTokens;
    BOOL _metalDeviceChanging;
    iTermVariables *_userVariables;
    iTermSwiftyString *_badgeSwiftyString;
    iTermSwiftyString *_autoNameSwiftyString;
    iTermBackgroundDrawingHelper *_backgroundDrawingHelper;
    iTermMetaFrustrationDetector *_metaFrustrationDetector;
    iTermTmuxStatusBarMonitor *_tmuxStatusBarMonitor;
    iTermWorkingDirectoryPoller *_pwdPoller;
    iTermTmuxOptionMonitor *_tmuxTitleMonitor;
    iTermGraphicSource *_graphicSource;
    iTermVariableReference *_jobPidRef;
    iTermCacheableImage *_customIcon;
    struct CGContext *_metalContext;
    BOOL _errorCreatingMetalContext;
    id <iTermKeyMapper> _keyMapper;
    BOOL _useLibTickit;
    NSString *_badgeFontName;
    iTermVariableScope *_variablesScope;
    BOOL _showingVisualIndicatorForEsc;
    iTermPrintGuard *_printGuard;
    iTermBuiltInFunctions *_methods;
    BOOL _windowAdjustmentDisabled;
    struct CGSize _badgeLabelSizeFraction;
    NSString *_divorceDecree;
    BOOL _cursorTypeOverrideChanged;
    BOOL _titleDirty;
    iTermProcessInfo *_lastProcessInfo;
    iTermLoggingHelper *_logging;
    iTermNaggingController *_naggingController;
    iTermComposerManager *_composerManager;
    NSNumber *_lastLibTickitProfileSetting;
    BOOL _tmuxTTLHasThresholds;
    double _tmuxTTLLowerThreshold;
    double _tmuxTTLUpperThreshold;
    BOOL _divorced;
    BOOL _active;
    BOOL _alertOnNextMark;
    BOOL _newOutput;
    BOOL _havePostedIdleNotification;
    BOOL _havePostedNewOutputNotification;
    BOOL _antiIdleCode;
    BOOL _treatAmbiguousWidthAsDoubleWidth;
    BOOL _xtermMouseReporting;
    BOOL _xtermMouseReportingAllowMouseWheel;
    BOOL _xtermMouseReportingAllowClicksAndDrags;
    BOOL _bell;
    BOOL _useMetal;
    BOOL _ignoreResizeNotifications;
    BOOL _triggerParametersUseInterpolatedStrings;
    BOOL _sessionIsSeniorToTmuxSplitPane;
    BOOL _passwordInput;
    BOOL _isSingleUseSession;
    BOOL _overrideGlobalDisableMetalWhenIdleSetting;
    BOOL _shortLivedSingleUse;
    BOOL _tmuxPaused;
    BOOL _isUTF8;
    id <PTYSessionDelegate> _delegate;
    iTermSessionNameController *_nameController;
    NSURL *_preferredProxyIcon;
    PTYTask *_shell;
    NSString *_colorFgBgVariable;
    VT100Screen *_screen;
    SessionView *_view;
    PTYTextView *_textview;
    double _antiIdlePeriod;
    unsigned long long _endAction;
    NSDictionary *_profile;
    unsigned long long _backgroundImageMode;
    NSString *_backgroundImagePath;
    NSImage *_backgroundImage;
    iTermColorMap *_colorMap;
    NSNumber *_activityCounter;
    TmuxController *_tmuxController;
    NSMutableArray *_commands;
    NSMutableArray *_directories;
    NSMutableArray *_hosts;
    iTermVariables *_variables;
    NSString *_currentLocalWorkingDirectoryOrInitialDirectory;
    NSString *_guid;
    iTermStatusBarViewController *_statusBarViewController;
    iTermEchoProbe *_echoProbe;
    NSMutableDictionary *_hostnameToShell;
    NSNumber *_cursorTypeOverride;
    NSDictionary *_environment;
    iTermExpect *_expect;
    Interval *_currentMarkOrNotePosition;
    TerminalFileDownload *_download;
    TerminalFileUpload *_upload;
    double _lastOutputIgnoringOutputAfterResizing;
    double _lastResize;
    NSString *_lastDirectory;
    NSString *_lastLocalDirectory;
    VT100RemoteHost *_lastRemoteHost;
    NSColor *_cursorGuideColor;
    NSString *_program;
    NSString *_customShell;
    NSDictionary *_substitutions;
    iTermPasteHelper *_pasteHelper;
    NSString *_lastCommand;
    iTermAutomaticProfileSwitcher *_automaticProfileSwitcher;
    iTermExpectation *_pasteBracketingOopsieExpectation;
    NSString *_cookie;
    struct CGPoint _savedRootRelativeOrigin;
}

+ (BOOL)performKeyBindingAction:(id)arg1 event:(id)arg2;
+ (void)reportFunctionCallError:(id)arg1 forInvocation:(id)arg2 origin:(id)arg3 window:(id)arg4;
+ (id)tmuxQueue;
+ (struct CGContext *)onePixelContext;
+ (struct CGColorSpace *)metalColorSpace;
+ (id)guidInArrangement:(id)arg1;
+ (id)arrangementFromTmuxParsedLayout:(id)arg1 bookmark:(id)arg2 tmuxController:(id)arg3 window:(int)arg4;
+ (id)pasteboardString;
+ (void)selectMenuItem:(id)arg1;
+ (void)selectMenuItemWithSelector:(SEL)arg1;
+ (BOOL)handleShortcutWithoutTerminal:(id)arg1;
+ (BOOL)_recursiveSelectMenuItemWithTitle:(id)arg1 identifier:(id)arg2 inMenu:(id)arg3;
+ (BOOL)_recursiveSelectMenuWithSelector:(SEL)arg1 inMenu:(id)arg2;
+ (id)sessionFromArrangement:(id)arg1 named:(id)arg2 inView:(id)arg3 withDelegate:(id)arg4 forObjectType:(long long)arg5;
+ (void)finishInitializingArrangementOriginatedSession:(id)arg1 arrangement:(id)arg2 arrangementName:(id)arg3 attachedToServer:(BOOL)arg4 delegate:(id)arg5 didRestoreContents:(BOOL)arg6 needDivorce:(BOOL)arg7 objectType:(long long)arg8 sessionView:(id)arg9 shouldEnterTmuxMode:(BOOL)arg10 state:(id)arg11 tmuxDCSIdentifier:(id)arg12 missingProfile:(BOOL)arg13;
+ (id)repairedArrangement:(id)arg1 replacingProfileWithGUID:(id)arg2 withProfile:(id)arg3;
+ (void)drawArrangementPreview:(id)arg1 frame:(struct CGRect)arg2;
+ (void)removeAllRegisteredSessions;
+ (void)registerSessionInArrangement:(id)arg1;
+ (void)registerBuiltInFunctions;
+ (id)sessionMap;
@property(copy, nonatomic) NSString *cookie; // @synthesize cookie=_cookie;
@property(retain, nonatomic) iTermExpectation *pasteBracketingOopsieExpectation; // @synthesize pasteBracketingOopsieExpectation=_pasteBracketingOopsieExpectation;
@property(retain, nonatomic) iTermAutomaticProfileSwitcher *automaticProfileSwitcher; // @synthesize automaticProfileSwitcher=_automaticProfileSwitcher;
@property(copy, nonatomic) NSString *lastCommand; // @synthesize lastCommand=_lastCommand;
@property(retain, nonatomic) iTermPasteHelper *pasteHelper; // @synthesize pasteHelper=_pasteHelper;
@property(copy, nonatomic) NSDictionary *substitutions; // @synthesize substitutions=_substitutions;
@property(nonatomic) BOOL isUTF8; // @synthesize isUTF8=_isUTF8;
@property(copy, nonatomic) NSString *customShell; // @synthesize customShell=_customShell;
@property(copy, nonatomic) NSString *program; // @synthesize program=_program;
@property(retain, nonatomic) NSColor *cursorGuideColor; // @synthesize cursorGuideColor=_cursorGuideColor;
@property(retain, nonatomic) VT100RemoteHost *lastRemoteHost; // @synthesize lastRemoteHost=_lastRemoteHost;
@property(copy, nonatomic) NSString *lastLocalDirectory; // @synthesize lastLocalDirectory=_lastLocalDirectory;
@property(copy, nonatomic) NSString *lastDirectory; // @synthesize lastDirectory=_lastDirectory;
@property(nonatomic) double lastResize; // @synthesize lastResize=_lastResize;
@property(nonatomic) double lastOutputIgnoringOutputAfterResizing; // @synthesize lastOutputIgnoringOutputAfterResizing=_lastOutputIgnoringOutputAfterResizing;
@property(retain, nonatomic) TerminalFileUpload *upload; // @synthesize upload=_upload;
@property(retain, nonatomic) TerminalFileDownload *download; // @synthesize download=_download;
@property(retain, nonatomic) Interval *currentMarkOrNotePosition; // @synthesize currentMarkOrNotePosition=_currentMarkOrNotePosition;
@property(readonly, nonatomic) BOOL tmuxPaused; // @synthesize tmuxPaused=_tmuxPaused;
@property(readonly, nonatomic) iTermExpect *expect; // @synthesize expect=_expect;
@property(copy, nonatomic) NSDictionary *environment; // @synthesize environment=_environment;
@property(retain, nonatomic) NSNumber *cursorTypeOverride; // @synthesize cursorTypeOverride=_cursorTypeOverride;
@property(retain, nonatomic) NSMutableDictionary *hostnameToShell; // @synthesize hostnameToShell=_hostnameToShell;
@property(nonatomic) BOOL shortLivedSingleUse; // @synthesize shortLivedSingleUse=_shortLivedSingleUse;
@property(readonly, nonatomic) iTermEchoProbe *echoProbe; // @synthesize echoProbe=_echoProbe;
@property(readonly, nonatomic) iTermStatusBarViewController *statusBarViewController; // @synthesize statusBarViewController=_statusBarViewController;
@property(nonatomic) BOOL overrideGlobalDisableMetalWhenIdleSetting; // @synthesize overrideGlobalDisableMetalWhenIdleSetting=_overrideGlobalDisableMetalWhenIdleSetting;
@property(nonatomic) BOOL isSingleUseSession; // @synthesize isSingleUseSession=_isSingleUseSession;
@property(readonly, nonatomic) BOOL passwordInput; // @synthesize passwordInput=_passwordInput;
@property(readonly, nonatomic) NSDictionary *keyLabels; // @synthesize keyLabels=_keyLabels;
@property(nonatomic) BOOL sessionIsSeniorToTmuxSplitPane; // @synthesize sessionIsSeniorToTmuxSplitPane=_sessionIsSeniorToTmuxSplitPane;
@property(copy, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(readonly, nonatomic) NSString *currentLocalWorkingDirectoryOrInitialDirectory; // @synthesize currentLocalWorkingDirectoryOrInitialDirectory=_currentLocalWorkingDirectoryOrInitialDirectory;
@property(readonly, nonatomic) BOOL triggerParametersUseInterpolatedStrings; // @synthesize triggerParametersUseInterpolatedStrings=_triggerParametersUseInterpolatedStrings;
@property(readonly, nonatomic) iTermVariables *variables; // @synthesize variables=_variables;
@property(readonly, nonatomic) NSMutableArray *hosts; // @synthesize hosts=_hosts;
@property(readonly, nonatomic) NSMutableArray *directories; // @synthesize directories=_directories;
@property(readonly, nonatomic) NSMutableArray *commands; // @synthesize commands=_commands;
@property(nonatomic) struct CGPoint savedRootRelativeOrigin; // @synthesize savedRootRelativeOrigin=_savedRootRelativeOrigin;
@property(retain, nonatomic) TmuxController *tmuxController; // @synthesize tmuxController=_tmuxController;
@property(retain, nonatomic) NSNumber *activityCounter; // @synthesize activityCounter=_activityCounter;
@property(nonatomic) BOOL ignoreResizeNotifications; // @synthesize ignoreResizeNotifications=_ignoreResizeNotifications;
@property(nonatomic) BOOL useMetal; // @synthesize useMetal=_useMetal;
@property(nonatomic) BOOL bell; // @synthesize bell=_bell;
@property(readonly, nonatomic) BOOL exited; // @synthesize exited=_exited;
@property(retain, nonatomic) iTermColorMap *colorMap; // @synthesize colorMap=_colorMap;
@property(retain, nonatomic) NSImage *backgroundImage; // @synthesize backgroundImage=_backgroundImage;
@property(copy, nonatomic) NSString *backgroundImagePath; // @synthesize backgroundImagePath=_backgroundImagePath;
@property(nonatomic) unsigned long long backgroundImageMode; // @synthesize backgroundImageMode=_backgroundImageMode;
@property(readonly, nonatomic) NSDictionary *originalProfile; // @synthesize originalProfile=_originalProfile;
@property(copy, nonatomic) NSDictionary *profile; // @synthesize profile=_profile;
@property(nonatomic) BOOL xtermMouseReportingAllowClicksAndDrags; // @synthesize xtermMouseReportingAllowClicksAndDrags=_xtermMouseReportingAllowClicksAndDrags;
@property(nonatomic) BOOL xtermMouseReportingAllowMouseWheel; // @synthesize xtermMouseReportingAllowMouseWheel=_xtermMouseReportingAllowMouseWheel;
@property(nonatomic) BOOL xtermMouseReporting; // @synthesize xtermMouseReporting=_xtermMouseReporting;
@property(nonatomic) BOOL treatAmbiguousWidthAsDoubleWidth; // @synthesize treatAmbiguousWidthAsDoubleWidth=_treatAmbiguousWidthAsDoubleWidth;
@property(nonatomic) unsigned long long endAction; // @synthesize endAction=_endAction;
@property(nonatomic) double antiIdlePeriod; // @synthesize antiIdlePeriod=_antiIdlePeriod;
@property(nonatomic) BOOL antiIdleCode; // @synthesize antiIdleCode=_antiIdleCode;
@property(retain, nonatomic) PTYTextView *textview; // @synthesize textview=_textview;
@property(retain, nonatomic) SessionView *view; // @synthesize view=_view;
@property(retain, nonatomic) VT100Screen *screen; // @synthesize screen=_screen;
@property(copy, nonatomic) NSString *colorFgBgVariable; // @synthesize colorFgBgVariable=_colorFgBgVariable;
@property(copy, nonatomic) NSString *termVariable; // @synthesize termVariable=_termVariable;
@property(retain, nonatomic) PTYTask *shell; // @synthesize shell=_shell;
@property(retain, nonatomic) NSURL *preferredProxyIcon; // @synthesize preferredProxyIcon=_preferredProxyIcon;
@property(readonly, nonatomic) iTermSessionNameController *nameController; // @synthesize nameController=_nameController;
@property(nonatomic) BOOL havePostedNewOutputNotification; // @synthesize havePostedNewOutputNotification=_havePostedNewOutputNotification;
@property(nonatomic) BOOL havePostedIdleNotification; // @synthesize havePostedIdleNotification=_havePostedIdleNotification;
@property(nonatomic) BOOL newOutput; // @synthesize newOutput=_newOutput;
@property(retain, nonatomic) PTYSession *liveSession; // @synthesize liveSession=_liveSession;
@property(readonly, nonatomic) DVRDecoder *dvrDecoder; // @synthesize dvrDecoder=_dvrDecoder;
@property(readonly, nonatomic) DVR *dvr; // @synthesize dvr=_dvr;
@property(nonatomic) BOOL alertOnNextMark; // @synthesize alertOnNextMark=_alertOnNextMark;
@property(nonatomic) BOOL active; // @synthesize active=_active;
@property(nonatomic) id <PTYSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (id)stringUniqueIdentifier;
- (void)tmuxControllerSessionSetTTL:(double)arg1 redzone:(BOOL)arg2;
- (void)updateMarksMinimapRangeOfVisibleLines;
- (void)intervalTreeVisibleRangeDidChange;
- (void)intervalTreeDidRemoveObjectOfType:(unsigned long long)arg1 onLine:(long long)arg2;
- (void)intervalTreeDidAddObjectOfType:(unsigned long long)arg1 onLine:(long long)arg2;
- (void)intervalTreeDidReset;
- (void)composerManagerDidDismissMinimalView:(id)arg1;
- (void)composerManager:(id)arg1 sendCommand:(id)arg2;
- (void)composerManagerDidRemoveTemporaryStatusBarComponent:(id)arg1;
- (id)composerManagerContainerView:(id)arg1;
- (id)composerManagerScope:(id)arg1;
- (id)composerManagerStatusBarViewController:(id)arg1;
- (void)naggingControllerCloseSession;
- (void)naggingControllerDisableBracketedPasteMode;
- (void)naggingControllerDisableMouseReportingPermanently:(BOOL)arg1;
- (void)naggingControllerSetBackgroundImageToFileWithName:(id)arg1;
- (void)naggingControllerAbortUpload;
- (void)naggingControllerAbortDownload;
- (void)naggingControllerRestart;
- (void)naggingControllerRemoveMessageWithIdentifier:(id)arg1;
- (void)naggingControllerRepairSavedArrangement:(id)arg1 missingProfileNamed:(id)arg2 guid:(id)arg3;
- (void)naggingControllerShowMessage:(id)arg1 isQuestion:(BOOL)arg2 important:(BOOL)arg3 identifier:(id)arg4 options:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (BOOL)naggingControllerCanShowMessageWithIdentifier:(id)arg1;
- (void)loggingHelperStop:(id)arg1;
- (void)loggingHelperStart:(id)arg1;
- (id)handleAPINotificationRequest:(id)arg1 connectionKey:(id)arg2;
- (id)subscribableIdentifier;
- (id)objectScope;
- (void)setNameWithCompletion:(CDUnknownBlockType)arg1 name:(id)arg2;
- (void)sendTmuxCommandMethodDidComplete:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)sendTmuxCommandWithCompletion:(CDUnknownBlockType)arg1 command:(id)arg2;
- (void)setStatusBarComponentUnreadCountWithCompletion:(CDUnknownBlockType)arg1 identifier:(id)arg2 count:(id)arg3;
- (void)runCoprocessWithCompletion:(CDUnknownBlockType)arg1 commandLine:(id)arg2 mute:(id)arg3;
- (void)getCoprocessWithCompletion:(CDUnknownBlockType)arg1;
- (void)stopCoprocessWithCompletion:(CDUnknownBlockType)arg1;
- (id)objectMethodRegistry;
- (void)copyModeHandlerCopySelection:(id)arg1;
- (void)copyModeHandler:(id)arg1 revealLine:(int)arg2;
- (void)copyModeHandlerShowFindPanel:(id)arg1;
- (void)copyModeHandler:(id)arg1 redrawLine:(int)arg2;
- (id)copyModeHandlerCreateState:(id)arg1;
- (void)copyModeHandlerDidChangeEnabledState:(id)arg1;
- (struct CGSize)badgeLabelSizeFraction;
- (id)badgeLabelFontOfSize:(double)arg1;
- (void)termkeyKeyMapperWillMapKey:(id)arg1;
- (void)standardKeyMapperWillMapKey:(id)arg1;
- (void)workingDirectoryPollerDidFindWorkingDirectory:(id)arg1 invalidated:(BOOL)arg2;
- (int)workingDirectoryPollerProcessID;
- (BOOL)workingDirectoryPollerShouldPoll;
- (BOOL)useLocalDirectoryPollerResult;
- (void)maybeOfferToSetOptionAsEscForLeft:(BOOL)arg1;
- (void)metaFrustrationDetectorDidDetectFrustrationForRightOption;
- (void)metaFrustrationDetectorDidDetectFrustrationForLeftOption;
- (void)statusBarResignFirstResponder;
- (void)statusBarRevealActionsTool;
- (void)statusBarPerformAction:(id)arg1;
- (void)statusBarSetLayout:(id)arg1;
- (void)statusBarDisable;
- (void)statusBarOpenPreferencesToComponent:(id)arg1;
- (void)statusBarDidUpdate;
- (void)statusBarWriteString:(id)arg1;
- (id)statusBarTerminalBackgroundColor;
- (id)statusBarTerminalFont;
- (void)updateStatusBarStyle;
- (id)statusBarBackgroundColor;
- (id)statusBarSeparatorColor;
- (id)statusBarDefaultTextColor;
- (BOOL)statusBarHasDarkBackground;
@property(readonly, nonatomic) NSColor *textColorForStatusBar;
- (double)backgroundDrawingHelperBlending;
- (id)backgroundDrawingHelperDefaultBackgroundColor;
- (unsigned long long)backgroundDrawingHelperBackgroundImageMode;
- (double)backgroundDrawingHelperTransparency;
- (BOOL)backgroundDrawingHelperUseTransparency;
- (id)backgroundDrawingHelperImage;
- (id)backgroundDrawingHelperView;
- (void)echoProbeDelegateWillChange:(id)arg1;
- (BOOL)echoProbeShouldSendPassword:(id)arg1;
- (void)echoProbeDidSucceed:(id)arg1;
- (void)echoProbeDidFail:(id)arg1;
- (void)echoProbe:(id)arg1 writeData:(id)arg2;
- (void)echoProbe:(id)arg1 writeString:(id)arg2;
- (void)jobPidDidChange;
- (id)sessionNameControllerScope;
- (id)sessionNameControllerFormattingDescriptor;
- (void)sessionNameControllerDidChangeWindowTitle;
- (void)sessionNameControllerPresentationNameDidChangeTo:(id)arg1;
- (void)sessionNameControllerNameWillChangeTo:(id)arg1;
- (id)sessionNameControllerUniqueIdentifier;
- (id)handleGetProfilePropertyForKeys:(id)arg1;
- (int)handleSetProfilePropertyForAssignments:(id)arg1 scriptHistoryEntry:(id)arg2;
- (void)handleGetPromptRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)handleListPromptsRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)handleGetBufferRequest:(id)arg1;
- (CDStruct_c5b70272)absoluteWindowedCoordRangeFromLineRange:(id)arg1;
- (id)stringForLine:(struct screen_char_t *)arg1 length:(int)arg2 cppsArray:(id)arg3;
- (void)cadenceControllerActiveStateDidChange:(BOOL)arg1;
- (CDStruct_cc801f57)updateCadenceControllerState;
- (void)updateCadenceControllerUpdateDisplay:(id)arg1;
- (void)coprocess:(id)arg1 didTerminateWithErrorOutput:(id)arg2;
- (BOOL)sessionViewUseSeparateStatusBarsPerPane;
- (id)sessionViewScope;
- (void)sessionViewDidChangeHoverURLVisible:(BOOL)arg1;
- (void)sessionViewUserScrollDidChange:(BOOL)arg1;
- (void)sessionViewRecreateMetalView;
- (void)sessionViewNeedsMetalFrameUpdate;
- (void)drawFrameAndRemoveTemporarilyDisablementOfMetalForToken:(id)arg1;
- (id)temporarilyDisableMetal;
- (void)sessionViewAnnouncementDidChange:(id)arg1;
- (void)sessionViewDidChangeWindow;
- (void)sessionViewBecomeFirstResponder;
- (void)sessionViewDoubleClickOnTitleBar;
- (BOOL)sessionHotkeyIsAlreadyActiveInNonkeyWindow;
- (BOOL)sessionHotkeyIsAlreadyFirstResponder;
- (void)sessionHotkeyDidNavigateToSession:(id)arg1;
- (id)sessionViewStatusBarViewController;
- (void)sessionViewScrollViewDidResize;
- (struct CGSize)sessionViewScrollViewWillResize:(struct CGSize)arg1;
- (BOOL)sessionViewShouldUpdateSubviewsFramesAutomatically;
- (double)sessionViewDesiredHeightOfDocumentView;
- (void)sessionViewBeginDrag;
- (void)sessionViewConfirmAndClose;
- (id)sessionViewContextMenu;
- (id)sessionViewTabColor;
- (BOOL)sessionViewShouldDimOnlyText;
- (BOOL)sessionViewTerminalIsFirstResponder;
- (id)sessionViewBackgroundColor;
- (CDStruct_1ef3fb1f)sessionViewGridSize;
- (struct CGSize)sessionViewCellSize;
- (id)sessionViewTitle;
- (BOOL)sessionViewPerformDragOperation:(id)arg1;
- (BOOL)sessionViewShouldSplitSelectionAfterDragUpdate:(id)arg1;
- (unsigned long long)sessionViewDraggingEntered:(id)arg1;
- (void)sessionViewDraggingExited:(id)arg1;
- (void)sessionViewDrawBackgroundImageInView:(id)arg1 viewRect:(struct CGRect)arg2 blendDefaultBackground:(BOOL)arg3;
- (BOOL)sessionViewIsVisible;
- (void)sessionViewDimmingAmountDidChange:(double)arg1;
- (BOOL)sessionViewShouldForwardMouseDownToSuper:(id)arg1;
- (void)sessionViewRightMouseDown:(id)arg1;
- (void)sessionViewMouseMoved:(id)arg1;
- (void)sessionViewMouseExited:(id)arg1;
- (void)sessionViewMouseEntered:(id)arg1;
- (id)automaticProfileSwitcherAllProfiles;
- (void)automaticProfileSwitcherLoadProfile:(id)arg1;
- (id)automaticProfileSwitcherCurrentProfile;
- (id)automaticProfileSwitcherCurrentSavedProfile;
- (id)automaticProfileSwitcherSessionName;
- (id)pasteHelperScope;
- (void)pasteHelperPasteViewVisibilityDidChange;
- (BOOL)pasteHelperCanWaitForPrompt;
- (BOOL)pasteHelperIsAtShellPrompt;
- (BOOL)pasteHelperShouldWaitForPrompt;
- (id)pasteHelperStatusBarViewController;
- (id)pasteHelperViewForIndicator;
- (unsigned long long)pasteHelperEncoding;
- (BOOL)pasteHelperShouldBracket;
- (void)pasteHelperKeyDown:(id)arg1;
- (void)pasteHelperWriteString:(id)arg1;
- (BOOL)popupHandleSelector:(SEL)arg1 string:(id)arg2 currentValue:(id)arg3;
- (void)popupInsertText:(id)arg1;
- (id)popupVT100TextView;
- (id)popupVT100Screen;
- (void)screenSetUseCSIu:(int)arg1;
- (BOOL)screenShouldClearScrollbackBuffer;
- (BOOL)screenConfirmDownloadAllowed:(id)arg1 size:(long long)arg2 displayInline:(BOOL)arg3 promptIfBig:(char *)arg4;
- (BOOL)screenConfirmDownloadNamed:(id)arg1 canExceedSize:(long long)arg2;
- (BOOL)popupWindowIsInFloatingHotkeyWindow;
- (id)popupWindowController;
- (void)popupWillClose:(id)arg1;
- (void)popupIsSearching:(BOOL)arg1;
- (id)announcementWithIdentifier:(id)arg1;
- (void)removeAnnouncementWithIdentifier:(id)arg1;
- (void)queueAnnouncement:(id)arg1 identifier:(id)arg2;
- (void)dismissAnnouncementWithIdentifier:(id)arg1;
- (BOOL)hasAnnouncementWithIdentifier:(id)arg1;
- (void)screenReportKeyUpDidChange:(BOOL)arg1;
- (void)screenSoftAlternateScreenModeDidChange;
- (void)screenDidReceiveLineFeed;
- (void)screenReportPasteBracketingWillChangeTo:(BOOL)arg1;
- (void)screenReportFocusWillChangeTo:(BOOL)arg1;
- (id)screenValueOfVariableNamed:(id)arg1;
- (void)screenTerminalAttemptedPasteboardAccess;
- (void)screenPopKeyLabels:(id)arg1;
- (id)popKeyLabels;
- (void)screenPushKeyLabels:(id)arg1;
- (void)screenSetLabel:(id)arg1 forKey:(id)arg2;
- (void)restoreKeyLabels:(id)arg1 updateStatusChangedLine:(BOOL)arg2;
- (void)updateStatusChangedLine;
- (void)screenSetUnicodeVersion:(long long)arg1;
- (long long)screenUnicodeVersion;
- (BOOL)screenShouldReduceFlicker;
- (void)screenSuggestShellIntegrationUpgrade;
- (void)screenDidDetectShell:(id)arg1;
- (void)tryToRunShellIntegrationInstallerWithPromptCheck:(BOOL)arg1;
- (id)shellIntegrationUpgradeUserDefaultsKeyForHost:(id)arg1;
- (void)didUpdateCurrentDirectory;
- (void)didUpdatePromptLocation;
- (BOOL)screenAllowTitleSetting;
- (void)screenLogWorkingDirectoryAtLine:(int)arg1 withDirectory:(id)arg2 pushed:(BOOL)arg3 timely:(BOOL)arg4;
@property(readonly, nonatomic) NSString *currentLocalWorkingDirectory;
- (void)asyncCurrentLocalWorkingDirectory:(CDUnknownBlockType)arg1;
- (void)asyncCurrentLocalWorkingDirectoryOrInitialDirectory:(CDUnknownBlockType)arg1;
- (void)setLastDirectory:(id)arg1 remote:(BOOL)arg2 pushed:(BOOL)arg3;
- (void)trimDirectoriesIfNeeded;
- (void)trimCommandsIfNeeded;
- (void)trimHostsIfNeeded;
- (id)screenProfileName;
- (BOOL)screenShouldIgnoreBellWhichIsAudible:(BOOL)arg1 visible:(BOOL)arg2;
- (void)resumeOutputIfNeeded;
- (BOOL)screenShouldPostTerminalGeneratedAlert;
- (BOOL)screenShouldPlacePromptAtFirstColumn;
- (void)screenCommandDidExitWithCode:(int)arg1 mark:(id)arg2;
- (void)screenCommandDidEndWithRange:(CDStruct_7a47e81c)arg1;
- (void)screenCommandDidChangeWithRange:(CDStruct_7a47e81c)arg1;
@property(readonly, nonatomic) NSArray *autocompleteSuggestionsForCurrentCommand;
@property(readonly, nonatomic) NSString *currentCommand;
- (id)commandInRange:(CDStruct_7a47e81c)arg1;
- (CDStruct_1ef3fb1f)screenRangeOfVisibleLines;
- (BOOL)haveCommandInRange:(CDStruct_7a47e81c)arg1;
- (BOOL)screenShouldSendReportForVariable:(id)arg1;
- (id)naggingController;
- (BOOL)screenShouldSendReport;
- (double)screenBackingScaleFactor;
- (void)screenDidReceiveCustomEscapeSequenceWithParameters:(id)arg1 payload:(id)arg2;
- (void)screenCurrentDirectoryDidChangeTo:(id)arg1;
- (void)tryAutoProfileSwitchWithHostname:(id)arg1 username:(id)arg2 path:(id)arg3 job:(id)arg4;
- (void)offerToTurnOffBracketedPasteOnHostChange;
- (void)offerToTurnOffFocusReportingOnHostChange;
- (void)offerToTurnOffMouseReportingOnHostChange;
- (void)showSimpleWarningAnnouncment:(id)arg1 identifier:(id)arg2;
@property(readonly, nonatomic) iTermQuickLookController *quickLookController;
@property(readonly, nonatomic) NSArray *commandUses;
- (void)maybeResetTerminalStateOnHostChange:(id)arg1;
- (BOOL)shellIsFishForHost:(id)arg1;
- (void)screenCurrentHostDidChange:(id)arg1;
- (void)screenSetTabColorBlueComponentTo:(double)arg1;
- (void)screenSetTabColorGreenComponentTo:(double)arg1;
- (void)screenSetTabColorRedComponentTo:(double)arg1;
@property(copy, nonatomic) NSColor *tabColor;
- (void)screenSetCurrentTabColor:(id)arg1;
- (void)screenSelectColorPresetNamed:(id)arg1;
- (void)screenSetColor:(id)arg1 forKey:(int)arg2;
- (id)screenColorMap;
- (void)injectData:(id)arg1;
- (void)setVariableNamed:(id)arg1 toValue:(id)arg2;
- (void)screenSetUserVar:(id)arg1;
- (void)screenSetBadgeFormat:(id)arg1;
- (void)screenSetBackgroundImageFile:(id)arg1;
- (void)screenDisinterSession;
- (void)screenDidTryToUseDECRQCRA;
- (void)screenRequestAttention:(unsigned long long)arg1;
- (void)screenRequestUpload:(id)arg1;
- (void)screenFileReceiptEndedUnexpectedly;
- (void)screenDidReceiveBase64FileData:(id)arg1;
- (void)screenDidFinishReceivingInlineFile;
- (void)screenDidFinishReceivingFile;
- (void)screenWillReceiveFileNamed:(id)arg1 ofSize:(long long)arg2 preconfirmed:(BOOL)arg3;
- (void)screenAppendDataToPasteboard:(id)arg1;
- (BOOL)screenIsAppendingToPasteboard;
- (void)screenCopyBufferToPasteboard;
- (void)screenDidEndEditingNote;
- (void)screenDidAddNote:(id)arg1;
- (void)screenSetPasteboard:(id)arg1;
- (void)setProfile:(id)arg1 preservingName:(BOOL)arg2 adjustWindow:(BOOL)arg3;
- (void)setProfile:(id)arg1 preservingName:(BOOL)arg2;
- (void)screenSetProfileToProfileNamed:(id)arg1;
- (void)screenStealFocus;
- (id)markAddedAtCursorOfClass:(Class)arg1;
- (void)screenSaveScrollPosition;
- (id)screenAddMarkOnLine:(int)arg1;
- (void)screenPromptDidEndAtLine:(int)arg1;
- (void)didInferEndOfCommand;
- (void)triggerDidDetectEndOfPromptAt:(CDStruct_dc106ac8)arg1;
- (void)triggerDidDetectStartOfPromptAt:(CDStruct_dc106ac8)arg1;
- (void)screenPromptDidStartAtLine:(int)arg1;
- (id)markAddedAtLine:(int)arg1 ofClass:(Class)arg2;
- (void)reveal;
- (void)revealIfTabSelected;
- (BOOL)screenHasView;
@property(nonatomic) BOOL highlightCursorLine;
- (void)screenSetHighlightCursorLine:(BOOL)arg1;
- (void)screenCursorDidMoveToLine:(int)arg1;
- (void)screenSetCursorVisible:(BOOL)arg1;
- (void)screenGetWorkingDirectoryWithCompletion:(CDUnknownBlockType)arg1;
- (void)screenIncrementBadge;
- (void)screenFlashImage:(id)arg1;
- (void)screenMouseModeDidChange;
- (void)screenClearHighlights;
- (void)screenDidClearScrollbackBuffer:(id)arg1;
- (struct CGSize)screenCellSize;
- (id)screenSelection;
- (void)screenRemoveSelection;
- (BOOL)screenShouldSendContentsChangedNotification;
- (void)screenPrintVisibleArea;
- (void)screenPrintString:(id)arg1;
- (void)screenShowBellIndicator;
- (void)screenDidChangeNumberOfScrollbackLines;
- (BOOL)screenShouldTreatAmbiguousCharsAsDoubleWidth;
- (void)screenHandleTmuxInput:(id)arg1;
- (void)screenStartTmuxModeWithDCSIdentifier:(id)arg1;
- (int)screenViewIndex;
- (int)screenTabIndex;
- (int)screenWindowIndex;
- (int)screenNumber;
- (id)screenName;
- (void)screenPopCurrentTitleForWindow:(BOOL)arg1;
- (void)screenPushCurrentTitleForWindow:(BOOL)arg1;
- (struct CGSize)screenSize;
- (struct CGRect)screenWindowFrame;
- (void)screenWriteDataToTask:(id)arg1;
- (BOOL)screenWindowIsMiniaturized;
- (void)screenSetPreferredProxyIcon:(id)arg1;
- (void)screenRaise:(BOOL)arg1;
- (void)screenMiniaturizeWindow:(BOOL)arg1;
- (struct CGPoint)screenWindowTopLeftPixelCoordinate;
- (struct CGRect)screenWindowScreenFrame;
- (void)screenMoveWindowTopLeftPointTo:(struct CGPoint)arg1;
- (BOOL)screenWindowIsFullscreen;
- (void)enableSessionNameTitleComponentIfPossible;
- (void)screenSetIconName:(id)arg1;
- (id)screenIconTitle;
- (id)screenWindowTitle;
- (void)screenSetWindowTitle:(id)arg1;
- (BOOL)screenShouldBeginPrinting;
- (void)screenResizeToPixelWidth:(int)arg1 height:(int)arg2;
- (void)screenResizeToWidth:(int)arg1 height:(int)arg2;
- (BOOL)screenShouldInitiateWindowResize;
- (void)screenGetCursorType:(long long *)arg1 blinking:(char *)arg2;
- (void)screenResetCursorTypeAndBlink;
- (void)screenSetCursorBlinking:(BOOL)arg1;
- (void)screenSetCursorType:(long long)arg1;
- (void)screenDidAppendAsciiDataToCurrentLine:(CDStruct_0a2cd81d *)arg1;
- (void)screenDidAppendStringToCurrentLine:(id)arg1 isPlainText:(BOOL)arg2;
- (void)screenDidReset;
- (void)screenTriggerableChangeDidOccur;
- (void)screenSizeDidChangeWithNewTopLineAt:(int)arg1;
- (void)screenRefreshFindOnPageView;
- (void)screenUpdateDisplay:(BOOL)arg1;
- (void)screenNeedsRedraw;
- (void)screenScheduleRedrawSoon;
- (id)screenSessionGuid;
- (BOOL)_localeIsSupported:(id)arg1;
- (void)printTmuxCommandOutputToScreen:(id)arg1;
- (void)printTmuxMessage:(id)arg1;
- (void)stopTailFind;
- (void)sessionContentsChanged:(id)arg1;
- (void)beginTailFind;
- (void)continueTailFind;
- (void)setDvrFrame;
- (id)valueForLanguageEnvironmentVariable;
- (id)languageCodesUpToAndIncludingFirstTwoLetterCode:(id)arg1;
- (id)preferredLanguageCodesByRemovingCountry;
- (id)localeForLanguage:(id)arg1 country:(id)arg2;
- (void)startDownloadOverSCP:(id)arg1;
- (void)uploadFiles:(id)arg1 toPath:(id)arg2;
- (void)launchCoprocessWithCommand:(id)arg1;
- (void)sendTextSlowly:(id)arg1;
- (void)sendText:(id)arg1;
- (void)sendHexCode:(id)arg1;
- (id)dataForHexCodes:(id)arg1;
- (void)sendEscapeSequence:(id)arg1;
- (void)bury;
- (void)toggleTmuxPaused;
- (void)textViewAddContextMenuItems:(id)arg1;
- (id)textViewSwipeHandler;
- (double)textViewBlend;
- (void)textViewFindOnPageSelectedResultDidChange;
- (void)textViewFindOnPageLocationsDidChange;
- (BOOL)textViewCanBury;
- (void)textViewDidDetectMouseReportingFrustration;
- (id)textViewExpect;
- (void)textViewDidUpdateDropTargetVisibility;
- (BOOL)textViewTerminalBackgroundColorDeterminesWindowDecorationColor;
- (id)textViewVariablesScope;
- (double)textViewBadgeRightMargin;
- (double)textViewBadgeTopMargin;
- (void)textViewResetTerminal;
- (void)textViewToggleTerminalStateForMenuItem:(id)arg1;
- (BOOL)textViewTerminalStateForMenuItem:(id)arg1;
- (BOOL)textViewInInteractiveApplication;
@property(readonly, nonatomic) struct NSEdgeInsets textViewEdgeInsets;
- (void)textViewDidHighlightMark;
- (BOOL)textViewShouldDrawRect;
- (void)textViewNeedsDisplayInRect:(struct CGRect)arg1;
- (void)textViewDidSelectRangeForFindOnPage:(CDStruct_7a47e81c)arg1;
- (void)textViewDidSelectPasswordPrompt;
- (BOOL)textViewPasswordInput;
- (CDStruct_1ef3fb1f)textViewCopyModeCursorCoord;
- (BOOL)textViewCopyModeSelecting;
- (BOOL)textViewCopyMode;
- (BOOL)textViewShowHoverURL:(id)arg1;
- (void)textViewBurySession;
- (void)textViewProcessedBackgroundColorDidChange;
- (void)textViewBackgroundColorDidChange;
- (void)textViewDidRefresh;
- (long long)textViewUnicodeVersion;
- (BOOL)textViewResizeFrameIfNeeded;
- (void)textViewThinksUserIsTryingToSendArrowKeysWithScrollWheel:(BOOL)arg1;
- (BOOL)textViewShouldShowMarkIndicators;
- (BOOL)textViewIsZoomedIn;
- (BOOL)textViewSuppressingAllOutput;
@property(readonly, nonatomic) iTermVariableScope<iTermSessionScope> *variablesScope;
- (id)textViewVariables;
- (id)textViewBadgeColor;
- (id)textViewCursorGuideColor;
- (unsigned long long)textViewUnicodeNormalizationForm;
- (BOOL)textViewCanSelectCurrentCommand;
- (BOOL)textViewCanSelectOutputOfLastCommand;
- (CDStruct_7ab14d82)textViewRangeOfCurrentCommand;
- (CDStruct_7ab14d82)textViewRangeOfLastCommandOutput;
- (BOOL)textViewReportMouseEvent:(unsigned long long)arg1 modifiers:(unsigned long long)arg2 button:(int)arg3 coordinate:(CDStruct_1ef3fb1f)arg4 deltaY:(double)arg5 allowDragBeforeMouseDown:(BOOL)arg6 testOnly:(BOOL)arg7;
- (void)textViewDidResignFirstResponder;
- (void)textViewDidBecomeFirstResponder;
- (BOOL)textViewTabHasMaximizedPanel;
- (BOOL)textViewIsMaximized;
- (BOOL)textViewSessionIsBroadcastingInput;
- (BOOL)textViewIsActiveSession;
- (BOOL)textViewDelegateHandlesAllKeystrokes;
- (void)textViewCreateTabWithProfileGuid:(id)arg1;
- (void)textViewCreateWindowWithProfileGuid:(id)arg1;
- (BOOL)textViewAmbiguousWidthCharsAreDoubleWidth;
- (BOOL)textViewWindowUsesTransparency;
- (void)textViewPasteFromSessionWithMostRecentSelection:(unsigned int)arg1;
- (void)textViewRestartWithConfirmation;
- (void)textViewCloseWithConfirmation;
- (void)textViewToggleBroadcastingInput;
- (void)textViewEditSession;
- (void)textViewPasteSpecialWithStringConfiguration:(id)arg1 fromSelection:(BOOL)arg2;
- (void)textViewSelectPreviousPane;
- (void)textViewSelectNextPane;
- (void)textViewSelectPreviousWindow;
- (void)textViewSelectNextWindow;
- (void)textViewSelectPreviousTab;
- (void)textViewSelectNextTab;
- (void)textViewSplitVertically:(BOOL)arg1 withProfileGuid:(id)arg2;
- (void)textViewWillNeedUpdateForBlink;
- (BOOL)textViewShouldDrawFilledInCursor;
- (BOOL)textViewShouldPlaceCursorAt:(CDStruct_1ef3fb1f)arg1 verticalOk:(char *)arg2;
- (id)urlForHost:(id)arg1 path:(id)arg2;
- (void)updateLocalDirectoryWithCompletion:(CDUnknownBlockType)arg1;
- (void)asyncGetCurrentLocationWithCompletion:(CDUnknownBlockType)arg1;
- (id)textViewCurrentLocation;
- (void)textViewGetCurrentWorkingDirectoryWithCompletion:(CDUnknownBlockType)arg1;
- (unsigned long long)textViewEncoding;
- (void)textViewSwapPane;
- (void)textViewMovePane;
- (void)textViewBeginDrag;
- (void)textViewDidFindDirtyRects;
- (void)textViewInvalidateRestorableState;
- (void)textViewPostTabContentsChangedNotification;
@property(readonly, nonatomic) NSColor *processedBackgroundColor;
- (id)textViewBackgroundImage;
- (struct NSEdgeInsets)textViewExtraMargins;
- (struct CGRect)textViewContainerRect;
- (struct CGRect)textViewRelativeFrame;
- (void)textViewDrawBackgroundImageInView:(id)arg1 viewRect:(struct CGRect)arg2 blendDefaultBackground:(BOOL)arg3;
- (BOOL)textViewHasBackgroundImage;
- (void)textViewFontDidChange;
- (void)pasteOptions:(id)arg1;
- (void)paste:(id)arg1;
- (void)pasteString:(id)arg1 flags:(unsigned int)arg2;
- (void)menuForEvent:(id)arg1 menu:(id)arg2;
- (BOOL)applicationKeypadAllowed;
- (int)rightOptionKey;
- (int)optionKey;
- (BOOL)hasActionableKeyMappingForEvent:(id)arg1;
@property(readonly, nonatomic) NSData *backspaceData;
- (void)handleKeypressInInstantReplay:(id)arg1;
- (BOOL)maybeHandleKeyBindingActionForKeyEvent:(id)arg1;
- (BOOL)maybeHandleInstantReplayKeyEvent:(id)arg1;
- (BOOL)unzoomIfPossible;
- (BOOL)maybeHandleZoomedKeyEvent:(id)arg1;
- (BOOL)maybeHandleTmuxGatewayKeyEvent:(id)arg1;
- (BOOL)trySpecialKeyHandlersForEvent:(id)arg1;
- (void)logKeystroke:(id)arg1;
- (void)keyUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)textViewSelectionDidChangeToTruncatedString:(id)arg1;
- (void)mitigateTouchBarStupidityForEvent:(id)arg1;
- (void)showVisualIndicatorForEvent:(id)arg1;
- (void)playSoundForEvent:(id)arg1;
- (void)actuateHapticFeedbackForEvent:(id)arg1;
- (BOOL)eventNeedsMitigation:(id)arg1;
- (void)performKeyBindingAction:(id)arg1 event:(id)arg2;
- (void)applyAction:(id)arg1;
- (void)invokeFunctionCall:(id)arg1 scope:(id)arg2 origin:(id)arg3;
- (BOOL)eventAbortsPasteWaitingForPrompt:(id)arg1;
- (BOOL)shouldAcceptKeyDownEvent:(id)arg1;
- (BOOL)textViewShouldAcceptKeyDownEvent:(id)arg1;
- (BOOL)keystrokeIsFilteredByMonitor:(id)arg1;
- (BOOL)event:(id)arg1 matchesPattern:(id)arg2;
- (void)queueKeyDown:(id)arg1;
- (BOOL)isPasting;
- (id)encodingName;
- (void)tmuxWillKillWindow:(id)arg1;
- (void)tmuxDoubleAttachForSessionGUID:(id)arg1;
- (long long)tmuxNumberOfLinesOfScrollbackHistory;
- (CDStruct_1ef3fb1f)tmuxClientSize;
- (void)tmuxSession:(int)arg1 renamed:(id)arg2;
- (void)tmuxWindowsDidChange;
- (void)tmuxSessionsChanged;
- (void)tmuxSessionChanged:(id)arg1 sessionId:(int)arg2;
- (void)pauseTmux;
- (void)unpauseTmux;
- (void)setTmuxState:(id)arg1;
- (void)toggleTmuxPausePane;
- (void)setTmuxHistory:(id)arg1 altHistory:(id)arg2 state:(id)arg3;
- (void)showTmuxPausedAnnouncement:(BOOL)arg1;
- (void)setTmuxPaused:(BOOL)arg1 allowAutomaticUnpause:(BOOL)arg2;
- (void)tmuxWindowPaneDidPause:(int)arg1 notification:(BOOL)arg2;
- (void)handleTmuxData:(id)arg1;
- (void)tmuxReadTask:(id)arg1 windowPane:(int)arg2 latency:(id)arg3;
- (void)tmuxWriteString:(id)arg1;
- (void)tmuxSetSecureLogging:(BOOL)arg1;
- (void)tmuxCannotSendCharactersInSupplementaryPlanes:(id)arg1 windowPane:(int)arg2;
- (void)tmuxHostDisconnected:(id)arg1;
- (id)tmuxGatewayWindow;
- (BOOL)tmuxGatewayShouldForceDetach;
- (void)tmuxActiveWindowPaneDidChangeInWindow:(int)arg1 toWindowPane:(int)arg2;
- (void)tmuxGatewayDidTimeOut;
- (void)tmuxPrintLine:(id)arg1;
- (void)tmuxInitialCommandDidFailWithError:(id)arg1;
- (void)tmuxInitialCommandDidCompleteSuccessfully;
- (void)tmuxWindowRenamedWithId:(int)arg1 to:(id)arg2;
- (void)tmuxWindowClosedWithId:(int)arg1;
- (void)tmuxWindowAddedWithId:(int)arg1;
- (BOOL)tmuxUpdateLayoutForWindow:(int)arg1 layout:(id)arg2 zoomed:(id)arg3 only:(BOOL)arg4;
- (void)tmuxDidOpenInitialWindows;
- (id)tmuxOwningSessionGUID;
@property(retain, nonatomic) VT100RemoteHost *currentHost;
- (void)scrollToMark:(id)arg1;
- (void)nextMarkOrNote:(BOOL)arg1;
- (void)previousMarkOrNote:(BOOL)arg1;
- (void)previousAnnotation;
- (void)previousMark;
- (void)nextAnnotation;
- (void)nextMark;
- (void)highlightMarkOrNote:(id)arg1;
- (void)textViewToggleAnnotations;
- (void)addNoteWithText:(id)arg1 inAbsoluteRange:(CDStruct_7ab14d82)arg2;
- (void)addNoteAtCursor;
- (CDStruct_7a47e81c)smartSelectionRangeAt:(CDStruct_1ef3fb1f)arg1;
- (BOOL)isCompatibleWith:(id)arg1;
- (void)resizeFromArrangement:(id)arg1;
- (void)toggleTmuxZoom;
@property(readonly, nonatomic) PTYSession *tmuxGatewaySession;
@property(readonly, nonatomic) int tmuxPane;
- (void)setTmuxPane:(int)arg1;
- (void)tmuxDetach;
@property(readonly, nonatomic) BOOL isTmuxGateway;
@property(readonly, nonatomic) BOOL isTmuxClient;
- (void)startTmuxMode:(id)arg1;
@property int tmuxMode;
- (void)uninstallTmuxTitleMonitor;
- (void)setTitleFromTmuxTitleMonitor:(id)arg1;
- (void)installTmuxTitleMonitor;
- (void)installTmuxStatusBarMonitor;
- (void)replaceWorkingDirectoryPollerWithTmuxWorkingDirectoryPoller;
- (void)didFetchTmuxPid:(id)arg1;
- (void)loadTmuxProcessID;
- (void)setUpTmuxPipe;
- (id)preferredTmuxClientName;
- (void)hideSession;
- (BOOL)wantsContentChangedNotification;
- (void)setFocused:(BOOL)arg1;
- (void)launchSilentCoprocessWithCommand:(id)arg1;
- (void)launchCoprocessWithCommand:(id)arg1 mute:(BOOL)arg2;
@property(readonly, nonatomic) BOOL hasCoprocess;
- (void)stopCoprocess;
- (void)setPasteboard:(id)arg1;
@property(readonly, nonatomic) NSImage *dragImage;
- (void)enterPassword:(id)arg1;
@property(readonly, nonatomic) BOOL canOpenPasswordManager;
- (void)addCapturedOutput:(id)arg1;
- (void)retryMetalAfterContextAllocationFailure;
- (void)updateMetalDriver;
- (void)setUseMetal:(BOOL)arg1 dataSource:(id)arg2;
- (void)setMetalViewAlphaValue:(double)arg1;
- (void)showMetalAndStopDrawingTextView;
- (void)reallyShowMetalViewImmediately;
- (void)showMetalViewImmediately;
- (void)renderMetalFramesAndShowMetalView:(long long)arg1;
- (void)renderTwoMetalFramesAndShowMetalView;
- (BOOL)willEnableMetal;
- (BOOL)ligaturesEnabledInEitherFont;
@property(readonly, nonatomic) BOOL idleForMetal;
- (BOOL)metalViewSizeIsLegal;
@property(readonly, nonatomic) BOOL canProduceMetalFramecap;
- (BOOL)metalAllowed:(out unsigned long long *)arg1;
@property(readonly, nonatomic) BOOL metalAllowed;
- (void)setMetalContextSize:(struct CGSize)arg1;
- (struct CGContext *)metalGlueContext;
- (void)metalGlueDidDrawFrameAndNeedsRedraw:(BOOL)arg1;
- (double)metalGlueBackgroundImageBlend;
- (unsigned long long)metalGlueBackgroundImageMode;
- (id)metalGlueBackgroundImage;
- (long long)findDriverCurrentIndex;
- (long long)findDriverNumberOfSearchResults;
- (id)snapshot;
- (void)findViewControllerDidCeaseToBeMandatory:(id)arg1;
- (void)findViewControllerVisibilityDidChange:(id)arg1;
- (void)findViewControllerClearSearch;
- (void)findViewControllerMakeDocumentFirstResponder;
- (void)takeFocus;
- (void)copySelection;
- (id)unpaddedSelectedText;
- (void)findString:(id)arg1 forwardDirection:(BOOL)arg2 mode:(unsigned long long)arg3 withOffset:(int)arg4 scrollToFirstResult:(BOOL)arg5;
- (BOOL)canSearch;
- (id)selectedText;
- (void)growSelectionRight;
- (BOOL)growSelectionLeft;
- (BOOL)continueFind:(double *)arg1;
- (BOOL)findInProgress;
- (void)resetFindCursor;
- (void)searchPrevious;
- (void)searchNext;
- (void)compose;
- (void)showFindPanel;
- (void)findWithSelection;
- (void)useStringForFind:(id)arg1;
@property(readonly, nonatomic) BOOL hasSavedScrollPosition;
- (void)jumpToSavedScrollPosition;
- (id)divorceAddressBookEntryFromPreferences;
- (void)setDivorceDecree:(id)arg1;
- (void)setIsDivorced:(BOOL)arg1 withDecree:(id)arg2;
- (void)inheritDivorceFrom:(id)arg1 decree:(id)arg2;
@property(readonly, nonatomic) BOOL isDivorced; // @synthesize isDivorced=_divorced;
- (id)guidOfUnderlyingProfile;
- (void)remarry;
- (void)setSessionSpecificProfileValues:(id)arg1;
- (BOOL)profile:(id)arg1 isEffectivelyEqualToProfile:(id)arg2;
- (BOOL)profileValuesDifferFromCurrentProfile:(id)arg1;
- (void)changeFontSizeDirection:(int)arg1;
- (void)notifyTmuxFontChange;
- (void)synchronizeTmuxFonts:(id)arg1;
- (void)annotationVisibilityDidChange:(id)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowWillStartLiveResize:(id)arg1;
- (void)savedArrangementWasRepaired:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)apiServerUnsubscribe:(id)arg1;
- (void)apiDidStop:(id)arg1;
- (void)sessionHotkeyDidChange:(id)arg1;
- (void)profileSessionNameDidEndEditing:(id)arg1;
- (void)terminalFileShouldStop:(id)arg1;
- (void)setFont:(id)arg1 nonAsciiFont:(id)arg2 horizontalSpacing:(float)arg3 verticalSpacing:(float)arg4;
- (id)fontWithRelativeSize:(int)arg1 from:(id)arg2;
@property(readonly, nonatomic) int columns;
@property(readonly, nonatomic) int rows;
@property(readonly, nonatomic) BOOL canInstantReplayNext;
@property(readonly, nonatomic) BOOL canInstantReplayPrev;
- (void)doAntiIdle;
- (void)refresh;
- (void)setCurrentForegroundJobProcessInfo:(id)arg1;
- (id)jobName;
- (void)updateTitleWithProcessInfo:(id)arg1;
- (void)updateTitles;
- (void)updateDisplayBecause:(id)arg1;
- (void)maybeUpdateTitles;
- (BOOL)shouldUpdateTitles:(double)arg1;
- (BOOL)encodeArrangementWithContents:(BOOL)arg1 encoder:(id)arg2;
- (id)programType;
- (void)setScrollViewDocumentView;
- (BOOL)shouldSendEscPrefixForModifier:(unsigned int)arg1;
- (void)clearScrollbackBuffer;
- (void)clearBuffer;
- (void)logStop;
- (void)logStart;
@property(readonly, nonatomic) BOOL logging;
- (void)setUnicodeVersion:(long long)arg1;
@property(nonatomic) BOOL useItalicFont;
@property(nonatomic) BOOL nonAsciiLigatures;
@property(nonatomic) BOOL asciiLigatures;
@property(nonatomic) long long thinStrokes;
@property(nonatomic) BOOL useBoldFont;
@property(nonatomic) BOOL antiIdle;
- (void)setTransparencyAffectsOnlyDefaultBackgroundColor:(BOOL)arg1;
- (void)invalidateBlend;
@property(nonatomic) float transparency;
- (void)useTransparencyDidChange;
- (BOOL)viewShouldWantLayer;
- (void)setMinimumContrast:(float)arg1;
- (void)setSmartCursorColor:(BOOL)arg1;
- (void)updateViewBackgroundImage;
- (BOOL)shouldDrawBackgroundImageManually;
- (unsigned long long)effectiveBackgroundImageMode;
- (id)effectiveBackgroundImage;
@property(readonly, nonatomic) double desiredBlend;
- (double)effectiveBlend;
@property(readonly, nonatomic) NSString *tty;
@property(nonatomic) unsigned long long encoding;
@property(readonly, nonatomic) VT100Terminal *terminal;
- (void)popIconTitle;
- (void)pushIconTitle;
- (void)popWindowTitle;
- (void)pushWindowTitle;
@property(copy, nonatomic) NSString *windowTitle;
- (id)customIconImageForProfile:(id)arg1;
- (id)customIconImage;
- (id)tabGraphicForProfile:(id)arg1;
@property(readonly, nonatomic) NSImage *tabGraphic;
- (BOOL)shouldShowTabGraphicForProfile:(id)arg1;
@property(readonly, nonatomic) BOOL shouldShowTabGraphic;
- (void)setIconName:(id)arg1;
@property(readonly, nonatomic) NSString *name;
@property(readonly, nonatomic) BOOL isIdle;
@property(readonly, nonatomic) BOOL isProcessing;
@property(readonly, nonatomic) BOOL isAtShellPrompt;
@property(readonly, nonatomic) NSString *badgeLabel;
- (void)updateBadgeLabel:(id)arg1;
- (void)updateBadgeLabel;
- (BOOL)checkForCyclesInSwiftyStrings;
- (BOOL)doesSwiftyString:(id)arg1 referencePaths:(id)arg2;
@property(copy, nonatomic) NSString *badgeFormat;
- (void)updateKeyMapper;
- (void)setUseLibTickit:(BOOL)arg1;
- (BOOL)shouldUseLibTickitWithProfileSetting:(BOOL)arg1 terminalSetting:(int)arg2;
- (void)invalidateStatusBar;
- (long long)cursorType;
- (void)setPreferencesFromAddressBookEntry:(id)arg1;
- (BOOL)reloadProfile;
- (void)sessionProfileDidChange;
- (void)sharedProfileDidChange;
- (void)setColorsFromPresetNamed:(id)arg1;
- (id)tabColorInProfile:(id)arg1;
- (void)loadInitialColorTable;
- (id)ansiColorsMatchingForeground:(id)arg1 andBackground:(id)arg2 inBookmark:(id)arg3;
- (void)tryOpenStringAsURL:(id)arg1;
- (void)openSelection;
@property(readonly, nonatomic) BOOL hasSelection;
@property(readonly, nonatomic) BOOL shouldPostUserNotification;
- (void)textViewStopCoprocess;
- (BOOL)textViewHasCoprocess;
- (id)textViewVerticalScroller;
- (void)deleteForward:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)pasteString:(id)arg1;
- (id)dataByRemovingControlCodes:(id)arg1;
- (void)insertText:(id)arg1;
- (void)pageDown:(id)arg1;
- (void)pageUp:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)handleEvent:(id)arg1;
- (BOOL)willHandleEvent:(id)arg1;
- (BOOL)hasTextSendingKeyMappingForEvent:(id)arg1;
- (id)_keyBindingActionForEvent:(id)arg1;
- (BOOL)setScrollBarVisible:(BOOL)arg1 style:(long long)arg2;
- (struct CGSize)idealScrollViewSizeWithStyle:(long long)arg1;
- (void)replaceTerminatedShellWithNewInstance;
- (void)maybeReplaceTerminatedShellWithNewInstance;
- (BOOL)isRestartable;
- (void)queueRestartSessionAnnouncement;
- (void)brokenPipe;
- (void)cleanUpAfterBrokenPipe;
- (void)tmuxDidDisconnect;
- (void)taskDidChangeTTY:(id)arg1;
- (void)taskDiedImmediately;
- (void)threadedTaskBrokenPipe;
- (void)tmuxClientWrite:(id)arg1;
- (void)appendBrokenPipeMessage:(id)arg1;
- (void)clearTriggerLine;
- (void)appendStringToTriggerLine:(id)arg1;
- (void)checkTriggersOnPartialLine:(BOOL)arg1 stringLine:(id)arg2 lineNumber:(long long)arg3;
- (void)checkPartialLineTriggers;
- (void)checkTriggers;
- (void)finishedHandlingNewOutputOfLength:(int)arg1;
- (BOOL)haveResizedRecently;
- (void)executeTokens:(const CDStruct_88c1e25a *)arg1 bytesHandled:(int)arg2;
- (void)recycleQueuedTokens;
- (BOOL)shouldExecuteToken;
- (void)synchronousReadTask:(id)arg1;
- (void)threadedReadTask:(char *)arg1 length:(int)arg2;
- (void)writeTask:(id)arg1 encoding:(unsigned long long)arg2 forceEncoding:(BOOL)arg3;
- (void)writeTask:(id)arg1;
- (void)writeStringWithLatin1Encoding:(id)arg1;
- (void)writeLatin1EncodedData:(id)arg1 broadcastAllowed:(BOOL)arg2;
- (void)forceTmuxDetach;
- (void)handleCharacterPressedInTmuxGateway:(unsigned short)arg1;
- (void)handleKeypressInTmuxGateway:(id)arg1;
- (void)writeTaskNoBroadcast:(id)arg1 encoding:(unsigned long long)arg2 forceEncoding:(BOOL)arg3;
- (void)writeTaskNoBroadcast:(id)arg1;
- (id)dataForInputString:(id)arg1 usingEncoding:(unsigned long long)arg2;
- (void)writeTaskImpl:(id)arg1 encoding:(unsigned long long)arg2 forceEncoding:(BOOL)arg3 canBroadcast:(BOOL)arg4;
- (BOOL)revive;
- (void)disinter;
- (void)jumpToLocationWhereCurrentStatusChanged;
- (void)hardStop;
- (void)makeTerminationUndoable;
- (void)terminate;
- (void)softTerminate;
- (void)restartSession;
@property(readonly, nonatomic) iTermRestorableSession *restorableSession;
- (void)_maybeWarnAboutShortLivedSessions;
- (void)selectPaneBelowInCurrentTerminal;
- (void)selectPaneAboveInCurrentTerminal;
- (void)selectPaneRightInCurrentTerminal;
- (void)selectPaneLeftInCurrentTerminal;
- (void)launchProfileInCurrentTerminal:(id)arg1 withURL:(id)arg2;
- (void)sendInitialText;
- (void)setParentScope:(id)arg1;
- (void)startProgram:(id)arg1 environment:(id)arg2 customShell:(id)arg3 isUTF8:(BOOL)arg4 substitutions:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)computeEnvironmentForNewJobFromEnvironment:(id)arg1 substitutions:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)computeArgvForCommand:(id)arg1 substitutions:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)profileDidChangeToProfileWithName:(id)arg1;
- (void)profileNameDidChangeTo:(id)arg1;
- (void)didInitializeSessionWithName:(id)arg1;
- (void)triggerDidChangeNameTo:(id)arg1;
- (void)didMoveSession;
@property(readonly, nonatomic) NSString *sessionId;
- (BOOL)shouldSetCtype;
@property(readonly, nonatomic) BOOL hasNontrivialJob;
- (BOOL)processIsTrivial:(id)arg1;
- (id)jobsToIgnore;
@property(readonly, nonatomic) iTermPromptOnCloseReason *promptOnCloseReason;
@property(readonly, nonatomic) NSArray *childJobNames;
- (int)overUnder:(int)arg1 inVerticalDimension:(BOOL)arg2;
- (void)setSplitSelectionMode:(long long)arg1 move:(BOOL)arg2;
- (id)profileForSplit;
- (void)setSize:(CDStruct_1ef3fb1f)arg1;
- (void)attachToServer:(CDStruct_b0cac789)arg1 completion:(CDUnknownBlockType)arg2;
- (BOOL)tryToAttachToMultiserverWithRestorationIdentifier:(id)arg1;
- (BOOL)tryToAttachToServerWithProcessId:(int)arg1 tty:(id)arg2;
- (BOOL)setScreenSize:(struct CGRect)arg1 parent:(id)arg2;
- (void)showOrphanAnnouncement;
- (void)setContentsFromLineBufferDictionary:(id)arg1 includeRestorationBanner:(BOOL)arg2 reattached:(BOOL)arg3;
- (id)loggingHelper;
- (void)setSizeFromArrangement:(id)arg1;
- (void)coprocessChanged;
- (BOOL)copyModeConsumesEvent:(id)arg1;
@property(nonatomic) BOOL copyMode;
- (void)appendLinesInRange:(struct _NSRange)arg1 fromSession:(id)arg2;
- (void)appendLinesMatchingQuery:(id)arg1 fromSession:(id)arg2;
- (long long)irSeekToAtLeast:(long long)arg1;
- (void)irAdvance:(int)arg1;
- (void)setNeedsDisplay:(BOOL)arg1;
- (void)setDvr:(id)arg1 liveSession:(id)arg2;
- (void)didGuessLocalHostName:(id)arg1;
- (void)didFinishInitialization;
@property(readonly, copy) NSString *description;
- (void)iterm_dealloc;
- (void)dealloc;
- (id)weakSelf;
- (id)initSynthetic:(BOOL)arg1;
- (id)initWithCoder:(id)arg1;
@property(copy, nonatomic) NSString *colorPresetName;
@property(readonly, nonatomic) NSString *profileName;
- (void)setRows:(int)arg1;
- (void)setColumns:(int)arg1;
@property(retain, nonatomic) NSColor *ansiBrightWhiteColor;
@property(retain, nonatomic) NSColor *ansiBrightCyanColor;
@property(retain, nonatomic) NSColor *ansiBrightMagentaColor;
@property(retain, nonatomic) NSColor *ansiBrightBlueColor;
@property(retain, nonatomic) NSColor *ansiBrightYellowColor;
@property(retain, nonatomic) NSColor *ansiBrightGreenColor;
@property(retain, nonatomic) NSColor *ansiBrightRedColor;
@property(retain, nonatomic) NSColor *ansiBrightBlackColor;
@property(retain, nonatomic) NSColor *ansiWhiteColor;
@property(retain, nonatomic) NSColor *ansiCyanColor;
@property(retain, nonatomic) NSColor *ansiMagentaColor;
@property(retain, nonatomic) NSColor *ansiBlueColor;
@property(retain, nonatomic) NSColor *ansiYellowColor;
@property(retain, nonatomic) NSColor *ansiGreenColor;
@property(retain, nonatomic) NSColor *ansiRedColor;
@property(retain, nonatomic) NSColor *ansiBlackColor;
- (void)setName:(id)arg1;
- (void)setAnswerBackString:(id)arg1;
- (id)answerBackString;
- (id)text;
@property(retain, nonatomic) NSColor *selectionColor;
@property(retain, nonatomic) NSColor *selectedTextColor;
- (void)setUnderlineColor:(id)arg1;
- (id)underlineColor;
@property(retain, nonatomic) NSColor *foregroundColor;
@property(retain, nonatomic) NSColor *cursorTextColor;
@property(retain, nonatomic) NSColor *cursorColor;
@property(retain, nonatomic) NSColor *boldColor;
@property(retain, nonatomic) NSColor *backgroundColor;
- (void)handleCloseCommand:(id)arg1;
- (void)handleTerminateScriptCommand:(id)arg1;
- (id)handleSplitHorizontallyWithSameProfile:(id)arg1;
- (id)handleSplitHorizontallyWithDefaultProfile:(id)arg1;
- (id)handleSplitHorizontally:(id)arg1;
- (id)handleSplitVerticallyWithSameProfile:(id)arg1;
- (id)handleSplitVerticallyWithDefaultProfile:(id)arg1;
- (id)handleSplitVertically:(id)arg1;
- (void)splitVertically:(BOOL)arg1 withProfile:(id)arg2 command:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)activateSessionAndTab;
- (id)handleSetVariableNamedCommand:(id)arg1;
- (id)handleVariableNamedCommand:(id)arg1;
- (void)handleWriteScriptCommand:(id)arg1;
- (void)handleClearScriptCommand:(id)arg1;
- (void)handleSelectCommand:(id)arg1;
- (void)handleExecScriptCommand:(id)arg1;
- (id)objectSpecifier;
- (void)didFindPasteBracketingOopsie;
- (void)watchForPasteBracketingOopsieWithPrefix:(id)arg1;
- (void)setTermIDIfPossible;
- (void)fetchAutoLogFilenameWithCompletion:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

