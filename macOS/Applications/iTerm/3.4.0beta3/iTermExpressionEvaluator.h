//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSError, NSMutableArray, NSSet, NSString, iTermParsedExpression, iTermVariableScope;

@interface iTermExpressionEvaluator : NSObject
{
    BOOL _hasBeenEvaluated;
    BOOL _isBeingEvaluated;
    id _value;
    iTermParsedExpression *_parsedExpression;
    iTermVariableScope *_scope;
    NSMutableArray *_innerEvaluators;
    NSString *_invocation;
    BOOL _debug;
    NSError *_error;
    NSSet *_missingValues;
    CDUnknownBlockType _escapingFunction;
}

- (void).cxx_destruct;
@property(copy, nonatomic) CDUnknownBlockType escapingFunction; // @synthesize escapingFunction=_escapingFunction;
@property(nonatomic) BOOL debug; // @synthesize debug=_debug;
@property(readonly, nonatomic) NSSet *missingValues; // @synthesize missingValues=_missingValues;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
- (void)logError:(id)arg1 invocation:(id)arg2;
- (id)stringFromJSONObject:(id)arg1;
- (void)evaluateArray:(id)arg1 invocation:(id)arg2 withTimeout:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (void)didFinishEvaluatingInterpolatedStringWithParts:(id)arg1 error:(id)arg2 missing:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)evaluateInterpolatedStringParts:(id)arg1 invocation:(id)arg2 withTimeout:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (void)evaluateParsedExpression:(id)arg1 invocation:(id)arg2 withTimeout:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (void)evaluateSwiftyString:(id)arg1 withTimeout:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)didCompleteWithResult:(id)arg1 error:(id)arg2 missing:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)evaluateWithTimeout:(double)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) id value;
- (id)initWithInterpolatedString:(id)arg1 scope:(id)arg2;
- (id)initWithStrictInterpolatedString:(id)arg1 scope:(id)arg2;
- (id)initWithExpressionString:(id)arg1 scope:(id)arg2;
- (id)initWithParsedExpression:(id)arg1 invocation:(id)arg2 scope:(id)arg3;

@end

