//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "iTermMetalDebugInfoFormatter.h"

@class NSMutableDictionary, NSString, iTermMetalBlending, iTermMetalBufferPool;

@interface iTermMetalRenderer : NSObject <iTermMetalDebugInfoFormatter>
{
    NSString *_vertexFunctionName;
    NSMutableDictionary *_pipelineStates;
    iTermMetalBlending *_blending;
    // Error parsing type: , name: _cachedViewportSize
    id <MTLBuffer> _cachedViewportSizeBuffer;
    id <MTLDevice> _device;
    Class _transientStateClass;
    NSString *_fragmentFunctionName;
    id <iTermMetalDebugInfoFormatter> _formatterDelegate;
    iTermMetalBufferPool *_verticesPool;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) iTermMetalBufferPool *verticesPool; // @synthesize verticesPool=_verticesPool;
@property(nonatomic) __weak id <iTermMetalDebugInfoFormatter> formatterDelegate; // @synthesize formatterDelegate=_formatterDelegate;
@property(copy, nonatomic) NSString *fragmentFunctionName; // @synthesize fragmentFunctionName=_fragmentFunctionName;
@property(copy, nonatomic) NSString *vertexFunctionName; // @synthesize vertexFunctionName=_vertexFunctionName;
@property(readonly, nonatomic) Class transientStateClass; // @synthesize transientStateClass=_transientStateClass;
@property(readonly, nonatomic) id <MTLDevice> device; // @synthesize device=_device;
- (void)drawWithTransientState:(id)arg1 renderEncoder:(id)arg2 numberOfVertices:(long long)arg3 numberOfPIUs:(long long)arg4 vertexBuffers:(id)arg5 fragmentBuffers:(id)arg6 textures:(id)arg7;
- (id)vertexBufferForViewportSize: /* Error: Ran out of types for this method. */;
- (id)textureFromImage:(id)arg1 context:(id)arg2 pool:(id)arg3;
- (void)convertWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 toWidth:(unsigned long long *)arg3 height:(unsigned long long *)arg4 notExceeding:(long long)arg5;
- (id)textureFromImage:(id)arg1 context:(id)arg2;
- (id)newPipelineWithBlending:(id)arg1 vertexFunction:(id)arg2 fragmentFunction:(id)arg3;
- (id)newFlippedQuadOfSize:(struct CGSize)arg1 poolContext:(id)arg2;
- (id)newQuadOfSize:(struct CGSize)arg1 poolContext:(id)arg2;
- (id)newQuadWithFrame:(struct CGRect)arg1 textureFrame:(struct CGRect)arg2 poolContext:(id)arg3;
- (void)drawWithFrameData:(id)arg1 transientState:(id)arg2;
- (id)createTransientStateForConfiguration:(id)arg1 commandBuffer:(id)arg2;
- (void)writeFragmentTexture:(id)arg1 index:(unsigned long long)arg2 toFolder:(id)arg3;
- (void)writeFragmentBuffer:(id)arg1 index:(unsigned long long)arg2 toFolder:(id)arg3;
- (void)writeVertexBuffer:(id)arg1 index:(unsigned long long)arg2 toFolder:(id)arg3;
- (id)pipelineState;
- (id)keyForPipelineState;
- (id)initWithDevice:(id)arg1 vertexFunctionName:(id)arg2 fragmentFunctionName:(id)arg3 blending:(id)arg4 transientStateClass:(Class)arg5;
- (id)initWithDevice:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

