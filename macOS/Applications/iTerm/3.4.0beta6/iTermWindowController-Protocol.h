//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "PTYTabDelegate.h"
#import "WindowControllerInterface.h"

@class NSArray, NSDate, NSDictionary, NSEvent, NSMenu, NSMutableDictionary, NSScriptObjectSpecifier, NSString, NSWindow, NSWindow<iTermWeaklyReferenceable><PTYWindow>, NSWindowController<iTermWindowController>, PSMTabBarControl, PTYSession, PTYTab, TmuxController, VT100RemoteHost, iTermPopupWindowController, iTermRestorableSession, iTermSwiftyStringGraph;

@protocol iTermWindowController <WindowControllerInterface, PTYTabDelegate>
@property(readonly, nonatomic) BOOL closing;
@property(readonly, nonatomic) BOOL windowIsResizing;
@property(readonly, nonatomic) NSArray *tabs;
@property(readonly, nonatomic) BOOL shouldShowToolbelt;
- (BOOL)autoCommandHistoryIsOpenForSession:(PTYSession *)arg1;
- (void)showAutoCommandHistoryForSession:(PTYSession *)arg1;
- (void)updateAutoCommandHistoryForPrefix:(NSString *)arg1 inSession:(PTYSession *)arg2 popIfNeeded:(BOOL)arg3;
- (BOOL)wantsCommandHistoryUpdatesFromSession:(PTYSession *)arg1;
- (void)hideAutoCommandHistoryForSession:(PTYSession *)arg1;
- (void)sessionHostDidChange:(PTYSession *)arg1 to:(VT100RemoteHost *)arg2;
- (BOOL)isFloatingHotKeyWindow;
- (BOOL)isHotKeyWindow;
- (BOOL)canSplitPaneVertically:(BOOL)arg1 withBookmark:(NSDictionary *)arg2;
- (void)splitVertically:(BOOL)arg1 before:(BOOL)arg2 addingSession:(PTYSession *)arg3 targetSession:(PTYSession *)arg4 performSetup:(BOOL)arg5;
- (void)asyncSplitVertically:(BOOL)arg1 before:(BOOL)arg2 profile:(NSDictionary *)arg3 targetSession:(PTYSession *)arg4 completion:(void (^)(PTYSession *, BOOL))arg5 ready:(void (^)(PTYSession *, BOOL))arg6;
- (void)loadTmuxLayout:(NSMutableDictionary *)arg1 window:(int)arg2 tmuxController:(TmuxController *)arg3 name:(NSString *)arg4;
- (NSArray *)uniqueTmuxControllers;
- (void)tmuxTabLayoutDidChange:(BOOL)arg1 tab:(PTYTab *)arg2 variableWindowSize:(BOOL)arg3;
- (void)endTmuxOriginatedResize;
- (void)beginTmuxOriginatedResize;
- (struct CGSize)tmuxCompatibleSize;
- (iTermRestorableSession *)restorableSessionForSession:(PTYSession *)arg1;
- (void)sendInputToAllSessions:(NSString *)arg1 encoding:(unsigned long long)arg2 forceEncoding:(BOOL)arg3;
- (void)toggleBroadcastingInputToSession:(PTYSession *)arg1;
- (BOOL)broadcastInputToSession:(PTYSession *)arg1;
- (void)replaceSyntheticActiveSessionWithLiveSessionIfNeeded;
- (void)showHideInstantReplay;
- (void)irNext:(id)arg1;
- (void)irPrev:(id)arg1;
- (BOOL)closeInstantReplay:(id)arg1 orTerminateSession:(BOOL)arg2;
- (BOOL)inInstantReplay;
- (void)showLiveSession:(PTYSession *)arg1 inPlaceOf:(PTYSession *)arg2;
- (void)replaySession:(PTYSession *)arg1;
- (void)tabDidClearScrollbackBufferInSession:(PTYSession *)arg1;
- (void)openPasswordManagerToAccountName:(NSString *)arg1 inSession:(PTYSession *)arg2;
- (void)toggleUseTransparency:(id)arg1;
- (void)selectPaneDown:(id)arg1;
- (void)selectPaneUp:(id)arg1;
- (void)selectPaneRight:(id)arg1;
- (void)selectPaneLeft:(id)arg1;
- (void)makeSessionActive:(PTYSession *)arg1;
- (void)sessionWasRemoved;
- (NSArray *)allSessions;
- (void)setDimmingForSessions;
- (void)softCloseSession:(PTYSession *)arg1;
- (void)restartSessionWithConfirmation:(PTYSession *)arg1;
- (void)closeSessionWithConfirmation:(PTYSession *)arg1;
- (void)editSession:(PTYSession *)arg1 makeKey:(BOOL)arg2;
- (NSString *)undecoratedWindowTitle;
- (void)setName:(NSString *)arg1 forSession:(PTYSession *)arg2;
- (void)tabSessionDidChangeTransparency:(PTYTab *)arg1;
- (void)tabAddSwiftyStringsToGraph:(iTermSwiftyStringGraph *)arg1;
- (void)tabTitleDidChange:(PTYTab *)arg1;
- (PTYTab *)tabForSession:(PTYSession *)arg1;
- (void)tabActiveSessionDidChange;
- (void)fitWindowToTabs;
- (PTYTab *)insertSession:(PTYSession *)arg1 atIndex:(int)arg2;
- (void)insertTab:(PTYTab *)arg1 atIndex:(int)arg2;
- (long long)indexOfTab:(PTYTab *)arg1;
- (BOOL)fitWindowToTabSize:(struct CGSize)arg1;
- (void)addTabAtAutomaticallyDeterminedLocation:(PTYTab *)arg1;
- (void)appendTab:(PTYTab *)arg1;
- (int)numberOfTabs;
- (PSMTabBarControl *)tabBarControl;
- (void)closeTab:(PTYTab *)arg1 soft:(BOOL)arg2;
- (void)decreaseWidth:(id)arg1;
- (void)increaseWidth:(id)arg1;
- (void)decreaseHeight:(id)arg1;
- (void)increaseHeight:(id)arg1;
- (void)moveTabRight:(id)arg1;
- (void)moveTabLeft:(id)arg1;
- (void)removeTab:(PTYTab *)arg1;
- (void)storeWindowStateInRestorableSession:(iTermRestorableSession *)arg1;
- (void)currentSessionWordAtCursorDidBecome:(NSString *)arg1;
- (BOOL)isShowingTransientTitle;
- (void)clearTransientTitle;
- (void)toggleFullScreenMode:(id)arg1 completion:(void (^)(BOOL))arg2;
- (void)toggleFullScreenMode:(id)arg1;
- (void)popupWillClose:(iTermPopupWindowController *)arg1;
- (void)toggleToolbeltVisibility:(id)arg1;
- (void)moveSessionToWindow:(id)arg1;
- (void)sessionDidTerminate:(PTYSession *)arg1;
- (NSWindowController<iTermWindowController> *)terminalDraggedFromAnotherWindowAtPoint:(struct CGPoint)arg1;
- (int)windowType;
- (BOOL)lionFullScreen;
- (void)setBroadcastMode:(long long)arg1;
- (long long)broadcastMode;
- (NSDate *)lastResizeTime;
- (NSScriptObjectSpecifier *)objectSpecifier;
- (void)incrementBadge;
- (BOOL)useTransparency;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)menuForEvent:(NSEvent *)arg1 menu:(NSMenu *)arg2;
- (void)newTabWithBookmarkGuid:(NSString *)arg1;
- (void)newWindowWithBookmarkGuid:(NSString *)arg1;
- (void)invalidateRestorableState;
- (NSString *)terminalGuid;
- (NSWindow<iTermWeaklyReferenceable><PTYWindow> *)ptyWindow;
- (NSWindow *)window;
- (int)number;
@end

