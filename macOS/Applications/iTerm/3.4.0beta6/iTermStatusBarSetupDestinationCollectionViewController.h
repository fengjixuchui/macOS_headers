//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSViewController.h"

#import "NSCollectionViewDataSource.h"
#import "NSCollectionViewDelegateFlowLayout.h"
#import "iTermStatusBarSetupElementDelegate.h"

@class NSArray, NSButton, NSCollectionView, NSColor, NSIndexPath, NSMutableArray, NSString, iTermStatusBarAdvancedConfiguration;

@interface iTermStatusBarSetupDestinationCollectionViewController : NSViewController <iTermStatusBarSetupElementDelegate, NSCollectionViewDataSource, NSCollectionViewDelegateFlowLayout>
{
    NSMutableArray *_elements;
    NSIndexPath *_draggingIndexPath;
    NSButton *_configureButton;
    BOOL _updatingAutoRainbowColors;
    BOOL _darkBackground;
    iTermStatusBarAdvancedConfiguration *_advancedConfiguration;
    NSColor *_defaultBackgroundColor;
    NSColor *_defaultTextColor;
    CDUnknownBlockType _onChange;
    NSCollectionView *_sourceCollectionView;
}

- (void).cxx_destruct;
@property(nonatomic) BOOL darkBackground; // @synthesize darkBackground=_darkBackground;
@property(nonatomic) __weak NSCollectionView *sourceCollectionView; // @synthesize sourceCollectionView=_sourceCollectionView;
@property(copy, nonatomic) CDUnknownBlockType onChange; // @synthesize onChange=_onChange;
@property(retain, nonatomic) NSColor *defaultTextColor; // @synthesize defaultTextColor=_defaultTextColor;
@property(retain, nonatomic) NSColor *defaultBackgroundColor; // @synthesize defaultBackgroundColor=_defaultBackgroundColor;
@property(retain, nonatomic) iTermStatusBarAdvancedConfiguration *advancedConfiguration; // @synthesize advancedConfiguration=_advancedConfiguration;
@property(copy, nonatomic) NSArray *elements; // @synthesize elements=_elements;
- (void)configureComponent:(id)arg1;
- (void)itermStatusBarSetupElementDidChange:(id)arg1 updatedKeys:(id)arg2;
- (void)disableAutoRainbow;
- (BOOL)keysContainsTextColor:(id)arg1;
- (void)collectionView:(id)arg1 didDeselectItemsAtIndexPaths:(id)arg2;
- (id)viewControllerToConfigureComponent:(id)arg1;
- (void)collectionView:(id)arg1 didSelectItemsAtIndexPaths:(id)arg2;
- (id)collectionView:(id)arg1 shouldDeselectItemsAtIndexPaths:(id)arg2;
- (id)collectionView:(id)arg1 shouldSelectItemsAtIndexPaths:(id)arg2;
- (void)collectionView:(id)arg1 didChangeItemsAtIndexPaths:(id)arg2 toHighlightState:(long long)arg3;
- (id)collectionView:(id)arg1 shouldChangeItemsAtIndexPaths:(id)arg2 toHighlightState:(long long)arg3;
- (BOOL)collectionView:(id)arg1 acceptDrop:(id)arg2 indexPath:(id)arg3 dropOperation:(long long)arg4;
- (unsigned long long)collectionView:(id)arg1 validateDrop:(id)arg2 proposedIndexPath:(id *)arg3 dropOperation:(long long *)arg4;
- (id)collectionView:(id)arg1 draggingImageForItemsAtIndexPaths:(id)arg2 withEvent:(id)arg3 offset:(struct CGPoint *)arg4;
- (BOOL)collectionView:(id)arg1 writeItemsAtIndexPaths:(id)arg2 toPasteboard:(id)arg3;
- (void)collectionView:(id)arg1 draggingSession:(id)arg2 endedAtPoint:(struct CGPoint)arg3 dragOperation:(unsigned long long)arg4;
- (void)collectionView:(id)arg1 draggingSession:(id)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItemsAtIndexes:(id)arg4;
- (BOOL)collectionView:(id)arg1 canDragItemsAtIndexPaths:(id)arg2 withEvent:(id)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 itemForRepresentedObjectAtIndexPath:(id)arg2;
- (void)initializeItem:(id)arg1 atIndexPath:(id)arg2;
- (id)newItemWithIndexPath:(id)arg1;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)didChange:(BOOL)arg1;
- (void)configureStatusBarComponentWithIdentifier:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (id)layoutDictionary;
- (void)setLayout:(id)arg1;
- (void)loadElementsFromLayout:(id)arg1;
- (void)updateAutoRainbowColors;
- (id)collectionView;
- (void)deleteItemAtIndex:(long long)arg1;
- (void)deleteSelected;
- (void)viewDidLoad;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

