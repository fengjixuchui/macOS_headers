//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "iTermCursorDelegate.h"

@class NSAttributedString, NSColor, NSFont, NSImage, NSMutableDictionary, NSMutableSet, NSSet, NSString, NSView<iTermTextDrawingHelperDelegate>, iTermColorMap, iTermSelection, iTermTimestampDrawHelper;

@interface iTermTextDrawingHelper : NSObject <iTermCursorDelegate>
{
    NSFont *_cachedFont;
    struct CGFont *_cgFont;
    CDStruct_ffe6b7c1 _oldCursorPosition;
    double _lastTimeCursorMoved;
    BOOL _blinkingFound;
    struct CGRect _frame;
    struct CGRect _visibleRect;
    struct CGSize _scrollViewContentSize;
    struct CGRect _scrollViewDocumentVisibleRect;
    NSImage *_backgroundStripesImage;
    NSMutableSet *_missingImages;
    CDStruct_ce758b68 _stats[12];
    double _baselineOffset;
    NSMutableDictionary *_lineRefCache;
    NSMutableDictionary *_replacementLineRefCache;
    BOOL _preferSpeedToFullLigatureSupport;
    BOOL _showStripes;
    BOOL _asciiAntiAlias;
    BOOL _nonAsciiAntiAlias;
    BOOL _blinkingItemsVisible;
    BOOL _cursorBlinking;
    BOOL _copyMode;
    BOOL _copyModeSelecting;
    BOOL _ambiguousIsDoubleWidth;
    BOOL _hasBackgroundImage;
    BOOL _reverseVideo;
    BOOL _textViewIsActiveSession;
    BOOL _useSmartCursorColor;
    BOOL _isInKeyWindow;
    BOOL _shouldDrawFilledInCursor;
    BOOL _useCustomBoldColor;
    BOOL _isFrontTextView;
    BOOL _cursorVisible;
    BOOL _transparencyAffectsOnlyDefaultBackgroundColor;
    BOOL _highlightCursorLine;
    BOOL _useNonAsciiFont;
    BOOL _blinkAllowed;
    BOOL _showTimestamps;
    BOOL _useTestingTimezone;
    BOOL _debug;
    BOOL _animated;
    BOOL _isRetina;
    BOOL _forceAntialiasingOnRetina;
    BOOL _drawMarkIndicators;
    BOOL _showSearchingCursor;
    BOOL _showDropTargets;
    BOOL _boldAllowed;
    BOOL _asciiLigatures;
    BOOL _nonAsciiLigatures;
    BOOL _passwordInput;
    BOOL _asciiLigaturesAvailable;
    BOOL _useNativePowerlineGlyphs;
    int _numberOfLines;
    int _numberOfScrollbackLines;
    float _blend;
    int _numberOfIMELines;
    int _dropLine;
    iTermSelection *_selection;
    NSColor *_cursorGuideColor;
    NSImage *_badgeImage;
    NSColor *_unfocusedSelectionColor;
    iTermColorMap *_colorMap;
    NSView<iTermTextDrawingHelperDelegate> *_delegate;
    CDStruct_79c71658 _gridSize;
    CDStruct_ffe6b7c1 _cursorCoord;
    CDStruct_ffe6b7c1 _copyModeCursorCoord;
    double _excess;
    long long _totalScrollbackOverflow;
    unsigned long long _normalization;
    double _transparencyAlpha;
    long long _cursorType;
    double _minimumContrast;
    double _antiAliasedShift;
    NSAttributedString *_markedText;
    double _now;
    long long _thinStrokes;
    double _underlineOffset;
    long long _unicodeVersion;
    iTermTimestampDrawHelper *_timestampDrawHelper;
    double _badgeTopMargin;
    double _badgeRightMargin;
    struct CGSize _cellSize;
    struct CGSize _cellSizeWithoutSpacing;
    struct _NSRange _inputMethodSelectedRange;
    struct _NSRange _inputMethodMarkedRange;
    struct CGPoint _imeCursorLastPos;
    struct CGRect _indicatorFrame;
    CDStruct_c5b70272 _underlinedRange;
}

+ (BOOL)cursorUsesBackgroundColorForScreenChar:(struct screen_char_t)arg1 wantBackground:(BOOL)arg2 reverseVideo:(BOOL)arg3;
+ (struct CGRect)rectForBadgeImageOfSize:(struct CGSize)arg1 destinationRect:(struct CGRect)arg2 destinationFrameSize:(struct CGSize)arg3 visibleSize:(struct CGSize)arg4 sourceRectPtr:(struct CGRect *)arg5 margins:(struct NSEdgeInsets)arg6;
+ (id)otherMarkColor;
+ (id)errorMarkColor;
+ (id)successMarkColor;
+ (struct CGRect)frameForMarkContainedInRect:(struct CGRect)arg1 cellSize:(struct CGSize)arg2 cellSizeWithoutSpacing:(struct CGSize)arg3 scale:(double)arg4;
@property(nonatomic) double badgeRightMargin; // @synthesize badgeRightMargin=_badgeRightMargin;
@property(nonatomic) double badgeTopMargin; // @synthesize badgeTopMargin=_badgeTopMargin;
@property(nonatomic) BOOL useNativePowerlineGlyphs; // @synthesize useNativePowerlineGlyphs=_useNativePowerlineGlyphs;
@property(readonly, nonatomic) BOOL asciiLigaturesAvailable; // @synthesize asciiLigaturesAvailable=_asciiLigaturesAvailable;
@property(readonly, nonatomic) iTermTimestampDrawHelper *timestampDrawHelper; // @synthesize timestampDrawHelper=_timestampDrawHelper;
@property(nonatomic) struct CGRect indicatorFrame; // @synthesize indicatorFrame=_indicatorFrame;
@property(nonatomic) BOOL passwordInput; // @synthesize passwordInput=_passwordInput;
@property(nonatomic) BOOL nonAsciiLigatures; // @synthesize nonAsciiLigatures=_nonAsciiLigatures;
@property(nonatomic) BOOL asciiLigatures; // @synthesize asciiLigatures=_asciiLigatures;
@property(nonatomic) long long unicodeVersion; // @synthesize unicodeVersion=_unicodeVersion;
@property(nonatomic) BOOL boldAllowed; // @synthesize boldAllowed=_boldAllowed;
@property(nonatomic) double underlineOffset; // @synthesize underlineOffset=_underlineOffset;
@property(nonatomic) double baselineOffset; // @synthesize baselineOffset=_baselineOffset;
@property(readonly, nonatomic) NSSet *missingImages; // @synthesize missingImages=_missingImages;
@property(nonatomic) int dropLine; // @synthesize dropLine=_dropLine;
@property(nonatomic) BOOL showDropTargets; // @synthesize showDropTargets=_showDropTargets;
@property(nonatomic) BOOL showSearchingCursor; // @synthesize showSearchingCursor=_showSearchingCursor;
@property(nonatomic) long long thinStrokes; // @synthesize thinStrokes=_thinStrokes;
@property(nonatomic) BOOL drawMarkIndicators; // @synthesize drawMarkIndicators=_drawMarkIndicators;
@property(nonatomic) BOOL forceAntialiasingOnRetina; // @synthesize forceAntialiasingOnRetina=_forceAntialiasingOnRetina;
@property(nonatomic) BOOL isRetina; // @synthesize isRetina=_isRetina;
@property(nonatomic) BOOL animated; // @synthesize animated=_animated;
@property(nonatomic) BOOL debug; // @synthesize debug=_debug;
@property(readonly, nonatomic) struct CGPoint imeCursorLastPos; // @synthesize imeCursorLastPos=_imeCursorLastPos;
@property(readonly, nonatomic) BOOL blinkingFound; // @synthesize blinkingFound=_blinkingFound;
@property(nonatomic) BOOL useTestingTimezone; // @synthesize useTestingTimezone=_useTestingTimezone;
@property(nonatomic) double now; // @synthesize now=_now;
@property(nonatomic) int numberOfIMELines; // @synthesize numberOfIMELines=_numberOfIMELines;
@property(nonatomic) struct _NSRange inputMethodMarkedRange; // @synthesize inputMethodMarkedRange=_inputMethodMarkedRange;
@property(nonatomic) struct _NSRange inputMethodSelectedRange; // @synthesize inputMethodSelectedRange=_inputMethodSelectedRange;
@property(retain, nonatomic) NSAttributedString *markedText; // @synthesize markedText=_markedText;
@property(nonatomic) double antiAliasedShift; // @synthesize antiAliasedShift=_antiAliasedShift;
@property(nonatomic) BOOL showTimestamps; // @synthesize showTimestamps=_showTimestamps;
@property(nonatomic) CDStruct_c5b70272 underlinedRange; // @synthesize underlinedRange=_underlinedRange;
@property(nonatomic) BOOL blinkAllowed; // @synthesize blinkAllowed=_blinkAllowed;
@property(nonatomic) BOOL useNonAsciiFont; // @synthesize useNonAsciiFont=_useNonAsciiFont;
@property(nonatomic) double minimumContrast; // @synthesize minimumContrast=_minimumContrast;
@property(nonatomic) BOOL highlightCursorLine; // @synthesize highlightCursorLine=_highlightCursorLine;
@property(nonatomic) BOOL transparencyAffectsOnlyDefaultBackgroundColor; // @synthesize transparencyAffectsOnlyDefaultBackgroundColor=_transparencyAffectsOnlyDefaultBackgroundColor;
@property(nonatomic) float blend; // @synthesize blend=_blend;
@property(nonatomic) long long cursorType; // @synthesize cursorType=_cursorType;
@property(nonatomic) BOOL cursorVisible; // @synthesize cursorVisible=_cursorVisible;
@property(nonatomic) double transparencyAlpha; // @synthesize transparencyAlpha=_transparencyAlpha;
@property(nonatomic) BOOL isFrontTextView; // @synthesize isFrontTextView=_isFrontTextView;
@property(nonatomic) BOOL useCustomBoldColor; // @synthesize useCustomBoldColor=_useCustomBoldColor;
@property(nonatomic) BOOL shouldDrawFilledInCursor; // @synthesize shouldDrawFilledInCursor=_shouldDrawFilledInCursor;
@property(nonatomic) BOOL isInKeyWindow; // @synthesize isInKeyWindow=_isInKeyWindow;
@property(nonatomic) BOOL useSmartCursorColor; // @synthesize useSmartCursorColor=_useSmartCursorColor;
@property(nonatomic) BOOL textViewIsActiveSession; // @synthesize textViewIsActiveSession=_textViewIsActiveSession;
@property(nonatomic) BOOL reverseVideo; // @synthesize reverseVideo=_reverseVideo;
@property(nonatomic) int numberOfScrollbackLines; // @synthesize numberOfScrollbackLines=_numberOfScrollbackLines;
@property(nonatomic) BOOL hasBackgroundImage; // @synthesize hasBackgroundImage=_hasBackgroundImage;
@property(nonatomic) unsigned long long normalization; // @synthesize normalization=_normalization;
@property(nonatomic) BOOL ambiguousIsDoubleWidth; // @synthesize ambiguousIsDoubleWidth=_ambiguousIsDoubleWidth;
@property(nonatomic) long long totalScrollbackOverflow; // @synthesize totalScrollbackOverflow=_totalScrollbackOverflow;
@property(nonatomic) double excess; // @synthesize excess=_excess;
@property(nonatomic) CDStruct_1ef3fb1f copyModeCursorCoord; // @synthesize copyModeCursorCoord=_copyModeCursorCoord;
@property(nonatomic) BOOL copyModeSelecting; // @synthesize copyModeSelecting=_copyModeSelecting;
@property(nonatomic) BOOL copyMode; // @synthesize copyMode=_copyMode;
@property(nonatomic) BOOL cursorBlinking; // @synthesize cursorBlinking=_cursorBlinking;
@property(nonatomic) CDStruct_1ef3fb1f cursorCoord; // @synthesize cursorCoord=_cursorCoord;
@property(nonatomic) int numberOfLines; // @synthesize numberOfLines=_numberOfLines;
@property(nonatomic) CDStruct_1ef3fb1f gridSize; // @synthesize gridSize=_gridSize;
@property(nonatomic) BOOL blinkingItemsVisible; // @synthesize blinkingItemsVisible=_blinkingItemsVisible;
@property(nonatomic) BOOL nonAsciiAntiAlias; // @synthesize nonAsciiAntiAlias=_nonAsciiAntiAlias;
@property(nonatomic) BOOL asciiAntiAlias; // @synthesize asciiAntiAlias=_asciiAntiAlias;
@property(nonatomic) BOOL showStripes; // @synthesize showStripes=_showStripes;
@property(nonatomic) struct CGSize cellSizeWithoutSpacing; // @synthesize cellSizeWithoutSpacing=_cellSizeWithoutSpacing;
@property(nonatomic) struct CGSize cellSize; // @synthesize cellSize=_cellSize;
@property(nonatomic) NSView<iTermTextDrawingHelperDelegate> *delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) iTermColorMap *colorMap; // @synthesize colorMap=_colorMap;
@property(retain, nonatomic) NSColor *unfocusedSelectionColor; // @synthesize unfocusedSelectionColor=_unfocusedSelectionColor;
@property(retain, nonatomic) NSImage *badgeImage; // @synthesize badgeImage=_badgeImage;
@property(retain, nonatomic) NSColor *cursorGuideColor; // @synthesize cursorGuideColor=_cursorGuideColor;
@property(retain, nonatomic) iTermSelection *selection; // @synthesize selection=_selection;
- (id)cursorColorByDimmingSmartColor:(id)arg1;
- (id)cursorBlackColor;
- (id)cursorWhiteColor;
- (id)cursorColorForCharacter:(struct screen_char_t)arg1 wantBackground:(BOOL)arg2 muted:(BOOL)arg3;
- (void)cursorDrawCharacterAt:(CDStruct_1ef3fb1f)arg1 doubleWidth:(BOOL)arg2 overrideColor:(id)arg3 context:(struct CGContext *)arg4 backgroundColor:(id)arg5;
- (CDStruct_210bb996)cursorNeighbors;
- (void)stopTiming;
- (void)startTiming;
- (void)updateCachedMetrics;
- (id)selectionColorForCurrentFocus;
- (id)defaultTextColor;
@property(readonly, nonatomic) NSColor *defaultBackgroundColor;
- (BOOL)hasMarkedText;
- (struct CGColor *)cgColorForColor:(id)arg1;
- (CDStruct_7a47e81c)drawableCoordRangeForRect:(struct CGRect)arg1;
- (struct _NSRange)rangeOfColumnsFrom:(double)arg1 ofWidth:(double)arg2;
- (struct CGRect)rectByGrowingRect:(struct CGRect)arg1;
- (struct CGRect)rectForCoordRange:(CDStruct_7a47e81c)arg1;
- (CDStruct_7a47e81c)coordRangeForRect:(struct CGRect)arg1;
- (struct _NSRange)rangeOfVisibleRows;
- (BOOL)shouldDrawCursor;
- (struct screen_char_t)charForCursorAtColumn:(int)arg1 inLine:(struct screen_char_t *)arg2 doubleWidth:(char *)arg3;
- (BOOL)shouldShowCursor;
- (id)backgroundColorForCursor;
- (struct _NSRange)underlinedRangeOnLine:(long long)arg1;
- (struct CGRect)reallyDrawCursor:(id)arg1 at:(CDStruct_1ef3fb1f)arg2 outline:(BOOL)arg3;
@property(readonly, nonatomic) NSColor *blockCursorFillColorRespectingSmartSelection;
- (void)drawCursor:(BOOL)arg1;
- (void)drawCopyModeCursor;
@property(readonly, nonatomic) struct CGRect cursorFrame;
- (struct CGRect)frameForCursorAt:(CDStruct_1ef3fb1f)arg1;
- (BOOL)drawInputMethodEditorTextAt:(int)arg1 y:(int)arg2 width:(int)arg3 height:(int)arg4 cursorHeight:(double)arg5 ctx:(struct CGContext *)arg6;
- (void)drawImageWithCode:(unsigned short)arg1 origin:(CDStruct_1ef3fb1f)arg2 length:(long long)arg3 atPoint:(struct CGPoint)arg4 originInImage:(CDStruct_1ef3fb1f)arg5;
- (double)retinaFloor:(double)arg1;
- (double)retinaRound:(double)arg1;
- (void)drawUnderlineOrStrikethroughOfColor:(id)arg1 wantUnderline:(BOOL)arg2 style:(long long)arg3 font:(id)arg4 rect:(struct CGRect)arg5;
- (double)strikethroughThicknessForFont:(id)arg1;
- (double)underlineThicknessForFont:(id)arg1;
- (double)yOriginForStrikethroughForFont:(id)arg1 yOffset:(double)arg2 cellHeight:(double)arg3;
- (double)yOriginForUnderlineForFont:(id)arg1 yOffset:(double)arg2 cellHeight:(double)arg3;
- (BOOL)useThinStrokesAgainstBackgroundColor:(id)arg1 foregroundColor:(struct CGColor *)arg2;
- (void)updateBuilder:(id)arg1 withString:(id)arg2 orCharacter:(unsigned short)arg3 positions:(CDStruct_39016ee6 *)arg4 offset:(double)arg5;
- (id)attributedStringsForLine:(struct screen_char_t *)arg1 range:(struct _NSRange)arg2 hasSelectedText:(BOOL)arg3 backgroundColor:(id)arg4 forceTextColor:(id)arg5 colorRun:(CDStruct_56368ce9 *)arg6 findMatches:(id)arg7 underlinedRange:(struct _NSRange)arg8 positions:(CDStruct_39016ee6 *)arg9;
- (BOOL)zippy;
- (BOOL)character:(struct screen_char_t *)arg1 isEquivalentToCharacter:(struct screen_char_t *)arg2;
- (id)imageAttributesForCharacter:(struct screen_char_t *)arg1 displayColumn:(int)arg2;
- (id)dictionaryForCharacterAttributes:(CDStruct_28116007 *)arg1;
- (void)getAttributesForCharacter:(struct screen_char_t *)arg1 atIndex:(long long)arg2 forceTextColor:(id)arg3 forceUnderline:(BOOL)arg4 colorRun:(CDStruct_56368ce9 *)arg5 drawable:(BOOL)arg6 textColorContext:(struct iTermTextColorContext *)arg7 attributes:(CDStruct_28116007 *)arg8;
- (BOOL)imageAttributes:(id)arg1 followImageAttributes:(id)arg2;
- (BOOL)shouldSegmentWithAttributes:(CDStruct_28116007 *)arg1 imageAttributes:(id)arg2 previousAttributes:(CDStruct_28116007 *)arg3 previousImageAttributes:(id)arg4 combinedAttributesChanged:(char *)arg5;
- (struct CGContext *)newGrayscaleContextOfSize:(struct CGSize)arg1;
- (void)drawInContext:(struct CGContext *)arg1 inRect:(struct CGRect)arg2 alphaMask:(struct CGImage *)arg3 block:(CDUnknownBlockType)arg4;
- (void)initializeUnderlineContext:(CDStruct_078aa1c5 *)arg1 ofSize:(struct CGSize)arg2 block:(CDUnknownBlockType)arg3;
- (void)drawAttributedStringForMask:(id)arg1 origin:(struct CGPoint)arg2 stringPositions:(double *)arg3;
- (id)attributedString:(id)arg1 bySettingForegroundColorTo:(struct CGColor *)arg2;
- (void)drawUnderlinedOrStruckthroughTextWithContext:(CDStruct_078aa1c5 *)arg1 wantUnderline:(BOOL)arg2 inRect:(struct CGRect)arg3 underlineColor:(id)arg4 style:(long long)arg5 font:(id)arg6 block:(CDUnknownBlockType)arg7;
- (void)drawUnderlineAndStrikethroughForAttributedString:(id)arg1 atPoint:(struct CGPoint)arg2 positions:(double *)arg3 wantUnderline:(BOOL)arg4;
- (void)drawTextOnlyAttributedString:(id)arg1 atPoint:(struct CGPoint)arg2 positions:(double *)arg3 backgroundColor:(id)arg4;
- (void)drawTextOnlyAttributedStringWithoutUnderlineOrStrikethrough:(id)arg1 atPoint:(struct CGPoint)arg2 positions:(double *)arg3 backgroundColor:(id)arg4 graphicsContext:(id)arg5 smear:(BOOL)arg6;
- (int)drawSinglePartAttributedString:(id)arg1 atPoint:(struct CGPoint)arg2 origin:(CDStruct_1ef3fb1f)arg3 positions:(double *)arg4 inContext:(struct CGContext *)arg5 backgroundColor:(id)arg6;
- (void)drawUnderlineOrStrikethroughForFastPathString:(id)arg1 wantUnderline:(BOOL)arg2 atPoint:(struct CGPoint)arg3 positions:(double *)arg4 backgroundColor:(id)arg5;
- (int)drawFastPathStringWithoutUnderlineOrStrikethrough:(id)arg1 atPoint:(struct CGPoint)arg2 origin:(CDStruct_1ef3fb1f)arg3 positions:(double *)arg4 inContext:(struct CGContext *)arg5 backgroundColor:(id)arg6 smear:(BOOL)arg7;
- (int)drawFastPathString:(id)arg1 atPoint:(struct CGPoint)arg2 unadjustedPoint:(struct CGPoint)arg3 origin:(CDStruct_1ef3fb1f)arg4 positions:(double *)arg5 inContext:(struct CGContext *)arg6 backgroundColor:(id)arg7;
- (int)setSmoothingWithContext:(struct CGContext *)arg1 savedFontSmoothingStyle:(int *)arg2 useThinStrokes:(BOOL)arg3 antialised:(BOOL)arg4;
- (void)selectFont:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)drawBoxDrawingCharacter:(unsigned short)arg1 withAttributes:(id)arg2 at:(struct CGPoint)arg3;
- (void)drawMultipartAttributedString:(id)arg1 atPoint:(struct CGPoint)arg2 origin:(CDStruct_1ef3fb1f)arg3 positions:(CDStruct_39016ee6 *)arg4 inContext:(struct CGContext *)arg5 backgroundColor:(id)arg6;
- (void)constructAndDrawRunsForLine:(struct screen_char_t *)arg1 row:(int)arg2 inRange:(struct _NSRange)arg3 startingAtPoint:(struct CGPoint)arg4 bgselected:(BOOL)arg5 bgColor:(id)arg6 processedBackgroundColor:(id)arg7 colorRun:(CDStruct_56368ce9 *)arg8 matches:(id)arg9 forceTextColor:(id)arg10 context:(struct CGContext *)arg11;
- (void)drawCharactersForLine:(int)arg1 atY:(double)arg2 backgroundRuns:(id)arg3 context:(struct CGContext *)arg4;
- (void)drawForegroundForLineNumber:(int)arg1 y:(double)arg2 backgroundRuns:(id)arg3 context:(struct CGContext *)arg4;
- (void)drawForegroundForBackgroundRunArrays:(id)arg1 ctx:(struct CGContext *)arg2;
- (void)drawUnprocessedForegroundForBackgroundRunArrays:(id)arg1 ctx:(struct CGContext *)arg2;
- (void)enumerateDropTargets:(CDUnknownBlockType)arg1;
- (void)drawDropTargets;
- (struct CGSize)drawBadgeInRect:(struct CGRect)arg1 margins:(struct NSEdgeInsets)arg2;
- (void)drawTimestamps;
- (void)createTimestampDrawingHelper;
- (void)drawNoteRangesOnLine:(int)arg1;
- (void)drawMarkIfNeededOnLine:(int)arg1 leftMarginRect:(struct CGRect)arg2;
- (void)drawCursorGuideForColumns:(struct _NSRange)arg1 y:(double)arg2;
- (void)drawAccessoriesInRect:(struct CGRect)arg1;
- (struct NSEdgeInsets)badgeMargins;
- (void)drawStripesInRect:(struct CGRect)arg1;
- (void)drawMarginsAndMarkForLine:(int)arg1 y:(double)arg2;
- (void)drawTopMargin;
- (void)drawExcessAtLine:(int)arg1;
- (id)unprocessedColorForBackgroundRun:(CDStruct_56368ce9 *)arg1 enableBlending:(BOOL)arg2;
- (void)drawBackgroundForLine:(int)arg1 atY:(double)arg2 runs:(id)arg3 equivalentRows:(long long)arg4;
- (BOOL)textAppearanceDependsOnBackgroundColor;
- (void)drawRanges:(struct _NSRange *)arg1 count:(long long)arg2 origin:(CDStruct_1ef3fb1f)arg3 boundingRect:(struct CGRect)arg4 visibleLines:(struct _NSRange)arg5;
- (long long)numberOfEquivalentBackgroundColorLinesInRunArrays:(id)arg1 fromIndex:(long long)arg2;
- (void)drawTextViewContentInRect:(struct CGRect)arg1 rectsPtr:(const struct CGRect *)arg2 rectCount:(long long)arg3;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

