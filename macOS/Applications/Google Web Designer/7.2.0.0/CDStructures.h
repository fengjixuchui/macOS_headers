//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct AutomationManager {
    CDUnknownFunctionPointerType *_field1;
    struct scoped_refptr<gwd_shell::cef_objects::NinjaCefClient> _field2;
    struct Mutex _field3;
    struct vector<gwd_shell::automation::AutomationScript *, std::__1::allocator<gwd_shell::automation::AutomationScript *>> _field4;
    struct Mutex _field5;
    struct AutomationUpdateInterface *_field6;
    struct Mutex _field7;
    int _field8;
    struct ScriptPlaybackOptions _field9;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    struct tm _field14;
    _Bool _field15;
    int _field16;
    struct ScriptRecorder *_field17;
};

struct AutomationScript;

struct AutomationUpdateInterface;

struct AutomationUpdater {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct CefBrowser;

struct CefRefCount {
    int _field1;
};

struct DiskMonitor;

struct FileIOManagerBase;

struct FrameRequestState;

struct FrameRequestStateList {
    struct vector<gwd_shell::cef_objects::NinjaCefClient::FrameRequestState, std::__1::allocator<gwd_shell::cef_objects::NinjaCefClient::FrameRequestState>> _field1;
    struct Mutex _field2;
    struct scoped_refptr<gwd_shell::file_io::FileIOManagerBase> _field3;
};

struct GWDAppData;

struct Lock {
    struct PlatformThreadRef _field1;
    struct LockImpl _field2;
};

struct LockImpl {
    struct _opaque_pthread_mutex_t _field1;
};

struct Mutex {
    struct _opaque_pthread_mutex_t _field1;
};

struct NinjaCefClient {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    CDUnknownFunctionPointerType *_field4;
    CDUnknownFunctionPointerType *_field5;
    CDUnknownFunctionPointerType *_field6;
    CDUnknownFunctionPointerType *_field7;
    CDUnknownFunctionPointerType *_field8;
    struct Lock _field9;
    struct scoped_refptr<CefBrowser> _field10;
    struct Mutex _field11;
    _Bool _field12;
    _Bool _field13;
    struct scoped_refptr<gwd_shell::file_io::FileIOManagerBase> _field14;
    struct PreviewManagerBase *_field15;
    struct PlatformUtilsBase *_field16;
    struct PreferenceManagerBase *_field17;
    int _field18;
    int _field19;
    _Bool _field20;
    struct Mutex _field21;
    _Bool _field22;
    struct Mutex _field23;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field24;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field25;
    _Bool _field26;
    struct Mutex _field27;
    struct vector<gwd_shell::cef_objects::SynchronousIPCMessage *, std::__1::allocator<gwd_shell::cef_objects::SynchronousIPCMessage *>> _field28;
    struct Mutex _field29;
    struct vector<gwd_shell::cef_objects::WebAppStatusListener *, std::__1::allocator<gwd_shell::cef_objects::WebAppStatusListener *>> _field30;
    struct GWDAppData _field31;
    struct StoppableThread *_field32;
    struct FrameRequestStateList _field33;
    double _field34;
    struct set<int, std::__1::less<int>, std::__1::allocator<int>> _field35;
    _Bool _field36;
    struct ServerManager _field37;
    _Bool _field38;
    struct DiskMonitor *_field39;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field40;
    struct CefRefCount _field41;
};

struct OSAccess;

struct PlatformThreadRef {
    struct _opaque_pthread_t *_field1;
};

struct PlatformUtilsBase;

struct PreferenceManager {
    CDUnknownFunctionPointerType *_field1;
};

struct PreferenceManagerBase;

struct PreviewManager {
    CDUnknownFunctionPointerType *_field1;
    struct map<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> _field2;
    struct OSAccess *_field3;
};

struct PreviewManagerBase;

struct ScriptPlaybackOptions {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
    int _field6;
    _Bool _field7;
};

struct ScriptRecorder;

struct ServerManager {
    CDUnknownFunctionPointerType *_field1;
    struct Mutex _field2;
    struct map<std::__1::basic_string<char>, gwd_shell::http_server::PreviewServer *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, gwd_shell::http_server::PreviewServer *>>> _field3;
};

struct SettingsDialog {
    CDUnknownFunctionPointerType *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field6;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field7;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field8;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field9;
    int _field10;
    _Bool _field11;
    _Bool _field12;
    struct scoped_refptr<gwd_shell::file_io::FileIOManagerBase> _field13;
    struct PreferenceManagerBase *_field14;
    id _field15;
    id _field16;
};

struct StoppableThread;

struct SynchronousIPCMessage;

struct WebAppStatusListener;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct _opaque_pthread_mutex_t {
    long long _field1;
    char _field2[56];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct map<std::__1::basic_string<char>, gwd_shell::http_server::PreviewServer *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, gwd_shell::http_server::PreviewServer *>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, gwd_shell::http_server::PreviewServer *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, gwd_shell::http_server::PreviewServer *>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, gwd_shell::http_server::PreviewServer *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, gwd_shell::http_server::PreviewServer *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, gwd_shell::http_server::PreviewServer *>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct scoped_refptr<CefBrowser> {
    struct CefBrowser *_field1;
};

struct scoped_refptr<gwd_shell::cef_objects::NinjaCefClient> {
    struct NinjaCefClient *ptr_;
};

struct scoped_refptr<gwd_shell::file_io::FileIOManagerBase> {
    struct FileIOManagerBase *_field1;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct tm {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    long long _field10;
    char *_field11;
};

struct vector<gwd_shell::automation::AutomationScript *, std::__1::allocator<gwd_shell::automation::AutomationScript *>> {
    struct AutomationScript **_field1;
    struct AutomationScript **_field2;
    struct __compressed_pair<gwd_shell::automation::AutomationScript **, std::__1::allocator<gwd_shell::automation::AutomationScript *>> {
        struct AutomationScript **_field1;
    } _field3;
};

struct vector<gwd_shell::cef_objects::NinjaCefClient::FrameRequestState, std::__1::allocator<gwd_shell::cef_objects::NinjaCefClient::FrameRequestState>> {
    struct FrameRequestState *_field1;
    struct FrameRequestState *_field2;
    struct __compressed_pair<gwd_shell::cef_objects::NinjaCefClient::FrameRequestState *, std::__1::allocator<gwd_shell::cef_objects::NinjaCefClient::FrameRequestState>> {
        struct FrameRequestState *_field1;
    } _field3;
};

struct vector<gwd_shell::cef_objects::SynchronousIPCMessage *, std::__1::allocator<gwd_shell::cef_objects::SynchronousIPCMessage *>> {
    struct SynchronousIPCMessage **_field1;
    struct SynchronousIPCMessage **_field2;
    struct __compressed_pair<gwd_shell::cef_objects::SynchronousIPCMessage **, std::__1::allocator<gwd_shell::cef_objects::SynchronousIPCMessage *>> {
        struct SynchronousIPCMessage **_field1;
    } _field3;
};

struct vector<gwd_shell::cef_objects::WebAppStatusListener *, std::__1::allocator<gwd_shell::cef_objects::WebAppStatusListener *>> {
    struct WebAppStatusListener **_field1;
    struct WebAppStatusListener **_field2;
    struct __compressed_pair<gwd_shell::cef_objects::WebAppStatusListener **, std::__1::allocator<gwd_shell::cef_objects::WebAppStatusListener *>> {
        struct WebAppStatusListener **_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    } _field3;
};

