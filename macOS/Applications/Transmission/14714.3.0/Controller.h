//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSPopoverDelegate.h"
#import "NSSharingServiceDelegate.h"
#import "NSSharingServicePickerDelegate.h"
#import "NSSoundDelegate.h"
#import "NSToolbarDelegate.h"
#import "NSURLDownloadDelegate.h"
#import "NSUserNotificationCenterDelegate.h"
#import "NSWindowDelegate.h"
#import "QLPreviewPanelDataSource.h"
#import "QLPreviewPanelDelegate.h"
#import "VDKQueueDelegate.h"

@class Badger, DragOverlayWindow, FilterBarController, InfoWindowController, MessageWindowController, NSButton, NSMenu, NSMenuItem, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSTextField, NSTimer, NSUserDefaults, NSWindow, PrefsController, QLPreviewPanel, StatusBarController, TorrentTableView, URLSheetWindowController, VDKQueue;

@interface Controller : NSObject <NSURLDownloadDelegate, NSUserNotificationCenterDelegate, NSPopoverDelegate, NSSharingServiceDelegate, NSSharingServicePickerDelegate, NSSoundDelegate, NSToolbarDelegate, NSWindowDelegate, QLPreviewPanelDataSource, QLPreviewPanelDelegate, VDKQueueDelegate>
{
    struct tr_session *fLib;
    NSMutableArray *fTorrents;
    NSMutableArray *fDisplayedTorrents;
    PrefsController *fPrefsController;
    InfoWindowController *fInfoController;
    MessageWindowController *fMessageController;
    NSUserDefaults *fDefaults;
    NSString *fConfigDirectory;
    NSWindow *fWindow;
    DragOverlayWindow *fOverlayWindow;
    TorrentTableView *fTableView;
    unsigned int fRootPort;
    NSTimer *fTimer;
    VDKQueue *fFileWatcherQueue;
    NSMenuItem *fOpenIgnoreDownloadFolder;
    NSButton *fActionButton;
    NSButton *fSpeedLimitButton;
    NSButton *fClearCompletedButton;
    NSTextField *fTotalTorrentsField;
    StatusBarController *fStatusBar;
    FilterBarController *fFilterBar;
    NSMenuItem *fNextFilterItem;
    NSMenuItem *fNextInfoTabItem;
    NSMenuItem *fPrevInfoTabItem;
    NSMenu *fSortMenu;
    NSMenu *fGroupsSetMenu;
    NSMenu *fGroupsSetContextMenu;
    NSMenu *fShareMenu;
    NSMenu *fShareContextMenu;
    NSMenuItem *fShareMenuItem;
    NSMenuItem *fShareContextMenuItem;
    QLPreviewPanel *fPreviewPanel;
    BOOL fQuitting;
    BOOL fQuitRequested;
    BOOL fPauseOnLaunch;
    Badger *fBadger;
    NSMutableArray *fAutoImportedNames;
    NSTimer *fAutoImportTimer;
    NSMutableDictionary *fPendingTorrentDownloads;
    NSMutableSet *fAddingTransfers;
    NSMutableSet *fAddWindows;
    URLSheetWindowController *fUrlSheetController;
    BOOL fGlobalPopoverShown;
    BOOL fSoundPlaying;
}

+ (void)initialize;
- (void).cxx_destruct;
@property(readonly, nonatomic) VDKQueue *fileWatcherQueue; // @synthesize fileWatcherQueue=fFileWatcherQueue;
@property(readonly, nonatomic) PrefsController *prefsController; // @synthesize prefsController=fPrefsController;
- (void)rpcUpdateQueue;
- (void)rpcMovedTorrent:(id)arg1;
- (void)rpcChangedTorrent:(id)arg1;
- (void)rpcStartedStoppedTorrent:(id)arg1;
- (void)rpcRemoveTorrent:(id)arg1 deleteData:(BOOL)arg2;
- (void)rpcAddTorrentStruct:(struct tr_torrent *)arg1;
- (void)rpcCallback:(int)arg1 forTorrentStruct:(struct tr_torrent *)arg2;
- (void)updaterWillRelaunchApplication:(id)arg1;
- (void)linkDonate:(id)arg1;
- (void)linkGitHub:(id)arg1;
- (void)linkForums:(id)arg1;
- (void)linkHomepage:(id)arg1;
- (void)toggleQuickLook:(id)arg1;
- (void)applicationWillUnhide:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)showMainWindow:(id)arg1;
- (void)updateForExpandCollape;
- (double)minWindowContentSizeAllowed;
- (void)setWindowMinMaxToCurrent;
- (void)updateForAutoSize;
- (struct CGRect)sizedWindowFrame;
- (void)setWindowSizeToFit;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (id)applicationDockMenu:(id)arg1;
- (void)sleepCallback:(unsigned int)arg1 argument:(void *)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateToolbarItem:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
- (void)selectedToolbarClicked:(id)arg1;
- (void)allToolbarClicked:(id)arg1;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (id)toolbarButtonWithIdentifier:(id)arg1 forToolbarButtonClass:(Class)arg2;
- (id)standardToolbarButtonWithIdentifier:(id)arg1;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;
- (id)sharingServicePicker:(id)arg1 delegateForSharingService:(id)arg2;
- (void)showToolbarShare:(id)arg1;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (BOOL)previewPanel:(id)arg1 handleEvent:(id)arg2;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (id)quickLookableTorrents;
- (void)endPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (void)focusFilterField;
- (void)showFilterBar:(BOOL)arg1 animate:(BOOL)arg2;
- (void)toggleFilterBar:(id)arg1;
- (void)showStatusBar:(BOOL)arg1 animate:(BOOL)arg2;
- (void)toggleStatusBar:(id)arg1;
- (struct CGRect)windowFrameByAddingHeight:(double)arg1 checkLimits:(BOOL)arg2;
- (void)toggleAvailabilityBar:(id)arg1;
- (void)togglePiecesBar:(id)arg1;
- (void)toggleSmallView:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)torrentTableViewSelectionDidChange:(id)arg1;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)beginCreateFile:(id)arg1;
- (void)checkAutoImportDirectory;
- (void)changeAutoImport;
- (void)VDKQueue:(id)arg1 receivedNotification:(id)arg2 forPath:(id)arg3;
- (void)sound:(id)arg1 didFinishPlaying:(BOOL)arg2;
- (void)altSpeedToggledCallbackIsLimited:(id)arg1;
- (void)speedLimitChanged:(id)arg1;
- (void)toggleSpeedLimit:(id)arg1;
- (void)setGroup:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)popoverWillClose:(id)arg1;
- (void)popoverWillShow:(id)arg1;
- (void)showGlobalPopover:(id)arg1;
- (void)switchFilter:(id)arg1;
- (void)applyFilter;
- (void)rearrangeTorrentTableArray:(id)arg1 forParent:(id)arg2 withSortDescriptors:(id)arg3 beganTableUpdate:(char *)arg4;
- (void)sortTorrentsCallUpdates:(BOOL)arg1 includeQueueOrder:(BOOL)arg2;
- (void)sortTorrents:(BOOL)arg1;
- (void)setSortReverse:(id)arg1;
- (void)setSortByGroup:(id)arg1;
- (void)setSort:(id)arg1;
- (void)updateTorrentHistory;
- (void)torrentFinishedSeeding:(id)arg1;
- (void)torrentRestartedDownloading:(id)arg1;
- (void)torrentFinishedDownloading:(id)arg1;
- (id)torrentForHash:(id)arg1;
- (void)userNotificationCenter:(id)arg1 didActivateNotification:(id)arg2;
- (BOOL)userNotificationCenter:(id)arg1 shouldPresentNotification:(id)arg2;
- (void)setBottomCountText:(BOOL)arg1;
- (void)fullUpdateUI;
- (void)updateUI;
- (void)showStatsWindow:(id)arg1;
- (void)showMessageWindow:(id)arg1;
@property(readonly, nonatomic) MessageWindowController *messageWindowController; // @synthesize messageWindowController=fMessageController;
- (void)setInfoTab:(id)arg1;
- (void)resetInfo;
- (void)showInfo:(id)arg1;
- (void)showAboutWindow:(id)arg1;
- (void)showPreferenceWindow:(id)arg1;
- (id)selectedTorrents;
- (void)verifyTorrents:(id)arg1;
- (void)verifySelectedTorrents:(id)arg1;
- (void)announceSelectedTorrents:(id)arg1;
- (void)renameSelected:(id)arg1;
- (void)revealFile:(id)arg1;
- (void)copyMagnetLinks:(id)arg1;
- (void)copyTorrentFileForTorrents:(id)arg1;
- (void)copyTorrentFiles:(id)arg1;
- (void)moveDataFiles:(id)arg1;
- (void)moveDataFilesSelected:(id)arg1;
- (void)clearCompleted:(id)arg1;
- (void)removeDeleteData:(id)arg1;
- (void)removeNoDelete:(id)arg1;
- (void)confirmRemoveTorrents:(id)arg1 deleteData:(BOOL)arg2;
- (void)removeTorrents:(id)arg1 deleteData:(BOOL)arg2;
- (void)stopTorrents:(id)arg1;
- (void)stopAllTorrents:(id)arg1;
- (void)stopSelectedTorrents:(id)arg1;
- (void)resumeTorrentsNoWait:(id)arg1;
- (void)resumeWaitingTorrents:(id)arg1;
- (void)resumeSelectedTorrentsNoWait:(id)arg1;
- (void)resumeTorrents:(id)arg1;
- (void)resumeAllTorrents:(id)arg1;
- (void)resumeSelectedTorrents:(id)arg1;
- (void)createFile:(id)arg1;
- (void)urlSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)openURLShowSheet:(id)arg1;
- (void)openURL:(id)arg1;
- (void)duplicateOpenMagnetAlert:(id)arg1 transferName:(id)arg2;
- (void)duplicateOpenAlert:(id)arg1;
- (void)invalidOpenMagnetAlert:(id)arg1;
- (void)invalidOpenAlert:(id)arg1;
- (void)openShowSheet:(id)arg1;
- (void)open:(id)arg1;
- (void)openFilesWithDict:(id)arg1;
- (void)openCreatedFile:(id)arg1;
- (void)askOpenMagnetConfirmed:(id)arg1 add:(BOOL)arg2;
- (void)openMagnet:(id)arg1;
- (void)askOpenConfirmed:(id)arg1 add:(BOOL)arg2;
- (void)openFiles:(id)arg1 addType:(int)arg2 forcePath:(id)arg3;
- (void)application:(id)arg1 openFiles:(id)arg2;
- (void)downloadDidFinish:(id)arg1;
- (void)download:(id)arg1 didFailWithError:(id)arg2;
- (void)download:(id)arg1 didCreateDestination:(id)arg2;
- (void)download:(id)arg1 decideDestinationWithSuggestedFilename:(id)arg2;
- (void)handleOpenContentsEvent:(id)arg1 replyEvent:(id)arg2;
- (struct tr_session *)sessionHandle;
- (void)applicationWillTerminate:(id)arg1;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)awakeFromNib;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

