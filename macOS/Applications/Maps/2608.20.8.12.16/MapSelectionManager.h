//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GEOLogContextDelegate-Protocol.h"

@class CustomPOIsController, MKAnnotationView, MKMapView, MapCameraController, NSString, PersonalizedItemSource, SelectedLabelMarkerItemSource, VKLabelMarker;
@protocol CustomPOIAnnotation, MapSelectionManagerDelegate, OS_dispatch_group;

__attribute__((visibility("hidden")))
@interface MapSelectionManager : NSObject <GEOLogContextDelegate>
{
    BOOL needsUpdate;
    BOOL _mapSelectionChangePending;
    BOOL _isCluster;
    BOOL _selectionFromTap;
    VKLabelMarker *_pendingSelectedLabelMarker;
    double _clusterDeselectZoomThreshold;
    SelectedLabelMarkerItemSource *_selectedLabelMarkerItemSource;
    NSObject<OS_dispatch_group> *_updateGroup;
    int _updateCount;
    BOOL _ignoreSelectionChanges;
    id <MapSelectionManagerDelegate> _delegate;
    MapCameraController *_mapCameraController;
    CustomPOIsController *_customPOIsController;
    VKLabelMarker *_labelMarker;
    MKAnnotationView *_annotationView;
}

- (void).cxx_destruct;
@property(nonatomic) BOOL ignoreSelectionChanges; // @synthesize ignoreSelectionChanges=_ignoreSelectionChanges;
@property(retain, nonatomic) MKAnnotationView *annotationView; // @synthesize annotationView=_annotationView;
@property(retain, nonatomic) VKLabelMarker *labelMarker; // @synthesize labelMarker=_labelMarker;
@property(nonatomic) __weak CustomPOIsController *customPOIsController; // @synthesize customPOIsController=_customPOIsController;
@property(retain, nonatomic) MapCameraController *mapCameraController; // @synthesize mapCameraController=_mapCameraController;
@property(nonatomic) __weak id <MapSelectionManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (int)currentMapViewTargetForAnalytics;
- (int)currentUITargetForAnalytics;
- (void)resumeUpdates;
- (void)suspendUpdates;
- (void)_handleSelectingTapGesture:(id)arg1;
- (void)_clearClusterSelectionOnGesture:(id)arg1;
- (void)_handleMapZoomingGesture:(id)arg1;
- (void)_handleMapPinch:(id)arg1;
- (void)_applyMapSelectionDidChange;
- (void)_performAnalyticsForTappingOnAnnotationView:(id)arg1;
- (void)_performAnalyticsForTappingOnLabelMarker:(id)arg1;
- (BOOL)shouldInjectSelectionItemForLabelMarker:(id)arg1;
- (void)mapDidSelectAnnotationView:(id)arg1;
- (void)mapDidSelectLabelMarker:(id)arg1;
- (BOOL)shouldSelectLabelMarker:(id)arg1;
- (void)restoreSelectionState:(id)arg1 animated:(BOOL)arg2 restoreRegion:(BOOL)arg3 notifyDelegate:(BOOL)arg4;
- (void)restoreSelectionState:(id)arg1 animated:(BOOL)arg2;
- (id)selectionStateIncludingCamera:(BOOL)arg1;
- (void)_selectLabelMarkerWithKeys:(id)arg1 camera:(id)arg2 animated:(BOOL)arg3 restoreRegion:(BOOL)arg4 updateIfNeeded:(BOOL)arg5 completion:(CDUnknownBlockType)arg6;
- (void)selectLabelMarkerWithKeys:(id)arg1 animated:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (void)selectMapItem:(id)arg1 animated:(BOOL)arg2;
- (void)selectSearchResult:(id)arg1 animated:(BOOL)arg2;
- (void)selectLabelMarker:(id)arg1 animated:(BOOL)arg2 updateIfNeeded:(BOOL)arg3;
- (void)selectLabelMarker:(id)arg1 animated:(BOOL)arg2;
- (void)clearSelectionAnimated:(BOOL)arg1 updateIfNeeded:(BOOL)arg2;
- (void)clearSelectionAnimated:(BOOL)arg1;
- (void)clearSelection;
@property(readonly, nonatomic) BOOL hasSelection;
@property(readonly, nonatomic) id <CustomPOIAnnotation> customLabelMarker;
- (void)setLabelMarker:(id)arg1 updateIfNeeded:(BOOL)arg2;
- (void)_removeGestureRecognizersForMapView:(id)arg1;
- (void)_addGestureRecognizersForMapView:(id)arg1;
- (void)_setNeedsUpdate;
- (void)_notifyDelegate;
@property(readonly, nonatomic) PersonalizedItemSource *selectedLabelMarkerSource;
@property(readonly, nonatomic) __weak MKMapView *mapView;
- (void)dealloc;
- (id)initWithCameraController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

