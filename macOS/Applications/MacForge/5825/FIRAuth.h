//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "FIRAuthInterop.h"
#import "FIRComponentLifecycleMaintainer.h"
#import "FIRLibrary.h"

@class FIRApp, FIRAuthKeychainServices, FIRAuthRequestConfiguration, FIRAuthSettings, FIRAuthStoredUserManager, FIRAuthURLPresenter, FIRUser, NSMutableArray, NSString;

@interface FIRAuth : NSObject <FIRLibrary, FIRComponentLifecycleMaintainer, FIRAuthInterop>
{
    FIRUser *_currentUser;
    NSString *_firebaseAppName;
    NSMutableArray *_listenerHandles;
    FIRAuthKeychainServices *_keychainServices;
    NSString *_lastNotifiedUserToken;
    BOOL _autoRefreshTokens;
    BOOL _autoRefreshScheduled;
    BOOL _isAppInBackground;
    id <NSObject> _applicationDidBecomeActiveObserver;
    id <NSObject> _applicationDidEnterBackgroundObserver;
    FIRApp *_app;
    FIRAuthSettings *_settings;
    NSString *_userAccessGroup;
    NSString *_firebaseAppId;
    FIRAuthStoredUserManager *_storedUserManager;
    FIRAuthRequestConfiguration *_requestConfiguration;
    FIRAuthURLPresenter *_authURLPresenter;
}

+ (id)componentsToRegister;
+ (void)deleteKeychainServiceNameForAppName:(id)arg1;
+ (id)keychainServiceNameForAppName:(id)arg1;
+ (void)setKeychainServiceNameForApp:(id)arg1;
+ (id)authWithApp:(id)arg1;
+ (id)auth;
+ (void)initialize;
+ (void)load;
- (void).cxx_destruct;
@property(readonly, nonatomic) FIRAuthURLPresenter *authURLPresenter; // @synthesize authURLPresenter=_authURLPresenter;
@property(readonly, copy, nonatomic) FIRAuthRequestConfiguration *requestConfiguration; // @synthesize requestConfiguration=_requestConfiguration;
@property(retain, nonatomic) FIRAuthStoredUserManager *storedUserManager; // @synthesize storedUserManager=_storedUserManager;
@property(readonly, copy, nonatomic) NSString *firebaseAppId; // @synthesize firebaseAppId=_firebaseAppId;
@property(readonly, copy, nonatomic) NSString *userAccessGroup; // @synthesize userAccessGroup=_userAccessGroup;
@property(copy, nonatomic) FIRAuthSettings *settings; // @synthesize settings=_settings;
@property(readonly, nonatomic) __weak FIRApp *app; // @synthesize app=_app;
- (id)getStoredUserForAccessGroup:(id)arg1 error:(id *)arg2;
- (BOOL)useUserAccessGroup:(id)arg1 error:(id *)arg2;
- (BOOL)internalUseUserAccessGroup:(id)arg1 error:(id *)arg2;
- (id)getUserID;
- (void)getTokenForcingRefresh:(BOOL)arg1 withCallback:(CDUnknownBlockType)arg2;
- (void)appWillBeDeleted:(id)arg1;
- (BOOL)getUser:(id *)arg1 error:(id *)arg2;
- (BOOL)saveUser:(id)arg1 error:(id *)arg2;
- (BOOL)updateCurrentUser:(id)arg1 byForce:(BOOL)arg2 savingToDisk:(BOOL)arg3 error:(id *)arg4;
- (CDUnknownBlockType)signInFlowAuthDataResultCallbackByDecoratingCallback:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)signInFlowAuthResultCallbackByDecoratingCallback:(CDUnknownBlockType)arg1;
- (void)completeSignInWithAccessToken:(id)arg1 accessTokenExpirationDate:(id)arg2 refreshToken:(id)arg3 anonymous:(BOOL)arg4 callback:(CDUnknownBlockType)arg5;
- (void)scheduleAutoTokenRefreshWithDelay:(double)arg1 retry:(BOOL)arg2;
- (void)scheduleAutoTokenRefresh;
- (BOOL)updateKeychainWithUser:(id)arg1 error:(id *)arg2;
- (void)possiblyPostAuthStateChangeNotification;
- (void)internalSignInAnonymouslyWithCompletion:(CDUnknownBlockType)arg1;
- (void)internalCreateUserWithEmail:(id)arg1 password:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)internalSignInAndRetrieveDataWithCustomToken:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(copy, nonatomic) NSString *additionalFrameworkMarker;
@property(copy, nonatomic) NSString *languageCode;
- (void)useAppLanguage;
- (void)removeIDTokenDidChangeListener:(id)arg1;
- (id)addIDTokenDidChangeListener:(CDUnknownBlockType)arg1;
- (void)removeAuthStateDidChangeListener:(id)arg1;
- (id)addAuthStateDidChangeListener:(CDUnknownBlockType)arg1;
- (BOOL)isSignInWithEmailLink:(id)arg1;
- (BOOL)signOutByForceWithUserID:(id)arg1 error:(id *)arg2;
- (BOOL)signOut:(id *)arg1;
- (void)updateCurrentUser:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)sendSignInLinkToEmail:(id)arg1 actionCodeSettings:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)sendPasswordResetWithNullableActionCodeSettings:(id)arg1 email:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)sendPasswordResetWithEmail:(id)arg1 actionCodeSettings:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)sendPasswordResetWithEmail:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)applyActionCode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)verifyPasswordResetCode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)checkActionCode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)confirmPasswordResetWithCode:(id)arg1 newPassword:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)createUserWithEmail:(id)arg1 password:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)signInWithCustomToken:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)signInAnonymouslyWithCompletion:(CDUnknownBlockType)arg1;
- (void)internalSignInAndRetrieveDataWithCredential:(id)arg1 isReauthentication:(BOOL)arg2 callback:(CDUnknownBlockType)arg3;
- (void)internalSignInWithCredential:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)signInAndRetrieveDataWithCredential:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)signInWithCredential:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)internalSignInAndRetrieveDataWithEmail:(id)arg1 link:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)signInAndRetrieveDataWithGameCenterCredential:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)internalSignInAndRetrieveDataWithEmail:(id)arg1 password:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)signInWithEmail:(id)arg1 password:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)signInWithEmail:(id)arg1 link:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)signInWithEmail:(id)arg1 password:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchSignInMethodsForEmail:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)signInWithProvider:(id)arg1 UIDelegate:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchProvidersForEmail:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) FIRUser *currentUser;
- (void)dealloc;
- (id)initWithAPIKey:(id)arg1 appName:(id)arg2;
- (id)initWithApp:(id)arg1;

@end

