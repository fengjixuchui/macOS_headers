//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSError, NSFileHandle, NSMutableArray, NSString, NSTask, RWWebServerRequest;

__attribute__((visibility("hidden")))
@interface RWWebServer : NSObject
{
    unsigned long long _overridePort;
    NSError *_error;
    NSString *_contentPath;
    CDUnknownBlockType _launchCompletionHandler;
    CDUnknownBlockType _launchErrorHandler;
    CDUnknownBlockType _urlRequestedHandler;
    unsigned long long _webServerPort;
    NSTask *_phpTask;
    NSFileHandle *_inputPipeFileHandle;
    RWWebServerRequest *_cachedRequest;
    NSMutableArray *_logItems;
}

@property(retain, nonatomic) NSMutableArray *logItems; // @synthesize logItems=_logItems;
@property(retain, nonatomic) RWWebServerRequest *cachedRequest; // @synthesize cachedRequest=_cachedRequest;
@property(retain, nonatomic) NSFileHandle *inputPipeFileHandle; // @synthesize inputPipeFileHandle=_inputPipeFileHandle;
@property(retain, nonatomic) NSTask *phpTask; // @synthesize phpTask=_phpTask;
@property(nonatomic) unsigned long long webServerPort; // @synthesize webServerPort=_webServerPort;
@property(copy, nonatomic) CDUnknownBlockType urlRequestedHandler; // @synthesize urlRequestedHandler=_urlRequestedHandler;
@property(copy, nonatomic) CDUnknownBlockType launchErrorHandler; // @synthesize launchErrorHandler=_launchErrorHandler;
@property(copy, nonatomic) CDUnknownBlockType launchCompletionHandler; // @synthesize launchCompletionHandler=_launchCompletionHandler;
@property(retain, nonatomic) NSString *contentPath; // @synthesize contentPath=_contentPath;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) unsigned long long overridePort; // @synthesize overridePort=_overridePort;
- (void).cxx_destruct;
- (void)terminate;
- (void)applicationWillTerminate:(id)arg1;
@property(readonly, nonatomic) __weak NSString *baseURL;
- (void)_startWebServerOnPort:(unsigned long long)arg1;
- (long long)availablePort;
- (void)_startWebServerOnNextPort;
- (void)clearCache;
@property(readonly, nonatomic) BOOL hasStarted;
- (id)init;
- (void)dealloc;

@end

