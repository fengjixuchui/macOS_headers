//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AVPlayer, NSArray, NSDictionary, NSError, RCSavedRecordingsModel, TUCallCenter, VMRecordingEngine;
@protocol RCKeyPathObservance, VMAudioEngine, VMAudioRecorder, VMRecordingController;

@interface VMAudioService : NSObject
{
    RCSavedRecordingsModel *_recordings;
    TUCallCenter *_callCenter;
    AVPlayer *_player;
    id <RCKeyPathObservance> _playerObservance;
    VMRecordingEngine *_recordingEngine;
    id <VMAudioEngine> _currentEngine;
    NSDictionary *_audioSettings;
    NSArray *_allowedSampleRates;
    id <RCKeyPathObservance> _monitoringObservance;
    BOOL _isAudioSessionActive;
    BOOL _lastInterruptionStoppedPlayer;
    id <RCKeyPathObservance> _recordingEnhancedObservance;
    BOOL _isHandlingInterruption;
    int _mode;
    int _editingStatus;
    NSError *_recordingError;
}

+ (void)playStopRecordingSoundEffect:(CDUnknownBlockType)arg1;
+ (void)playStartRecordingSoundEffect:(CDUnknownBlockType)arg1;
+ (id)compressedAudioSettings;
+ (id)losslessAudioSettings;
+ (id)sharedInstance;
- (void).cxx_destruct;
@property(nonatomic) int editingStatus; // @synthesize editingStatus=_editingStatus;
@property(retain, nonatomic) NSError *recordingError; // @synthesize recordingError=_recordingError;
@property(nonatomic) BOOL isHandlingInterruption; // @synthesize isHandlingInterruption=_isHandlingInterruption;
@property(nonatomic) int mode; // @synthesize mode=_mode;
- (void)stopMonitoringFinalizingRecordings;
- (void)startMonitoringFinalizingRecordings:(CDUnknownBlockType)arg1;
- (BOOL)finalizeRecording:(id)arg1 controller:(id)arg2;
- (BOOL)cutRecording:(id)arg1 timeRange:(CDStruct_73a5d3ca)arg2 controller:(id)arg3 error:(id *)arg4;
- (BOOL)trimRecording:(id)arg1 timeRange:(CDStruct_73a5d3ca)arg2 controller:(id)arg3 error:(id *)arg4;
- (BOOL)_editRecording:(id)arg1 editBlock:(CDUnknownBlockType)arg2 controller:(id)arg3 error:(id *)arg4;
- (BOOL)replaceRecording:(id)arg1 atTime:(double)arg2 controller:(id)arg3 error:(id *)arg4;
- (BOOL)insertRecording:(id)arg1 atTime:(double)arg2 controller:(id)arg3 error:(id *)arg4;
- (BOOL)_mergeRecording:(id)arg1 overdub:(BOOL)arg2 atTime:(double)arg3 controller:(id)arg4 error:(id *)arg5;
- (BOOL)_refreshRecording:(id)arg1 controller:(id)arg2;
- (BOOL)__refreshRecording:(id)arg1 composition:(id)arg2 controller:(id)arg3;
- (BOOL)_refreshComposition:(id)arg1;
- (BOOL)_popFileVersion:(id)arg1 error:(id *)arg2;
- (id)_pushFileVersion:(id)arg1 error:(id *)arg2;
- (BOOL)sampleRecordingTime:(out double *)arg1;
@property(readonly, nonatomic) double recordingDuration;
- (BOOL)isRecordingEnabled:(id *)arg1;
- (void)_callStatusChanged:(id)arg1;
- (id)fetchRecording:(id)arg1;
- (id)_fetchRecording:(id)arg1 recordingController:(id)arg2;
@property(readonly, nonatomic) id <VMRecordingController> recordingController;
- (BOOL)configureInputSampleRate:(double)arg1 outputSampleRate:(double)arg2 error:(id *)arg3;
- (id)deviceSampleRates:(id *)arg1;
- (void)simulateRecordingError;
- (BOOL)stopRecordingWithController:(id)arg1 error:(id *)arg2;
- (BOOL)stopRecording:(id)arg1 error:(id *)arg2;
- (BOOL)pauseRecording:(id)arg1 error:(id *)arg2;
- (id)startRecordingWithController:(id)arg1 error:(id *)arg2;
- (void)_playStartRecordingSoundEffectThenStartRecording:(id)arg1 controller:(id)arg2;
- (void)_shutdownRecordingEngine;
- (void)_prepareRecordingEngineWithController:(id)arg1 assetWriter:(id)arg2;
- (id)_recordingSettings:(id *)arg1;
- (id)_closestAllowedSampleRate:(double)arg1;
- (BOOL)setTime:(double)arg1 controller:(id)arg2;
- (void)_setRate:(float)arg1 immediately:(BOOL)arg2;
- (BOOL)setRate:(float)arg1 controller:(id)arg2;
- (BOOL)stopPlaying:(id)arg1;
- (BOOL)pausePlaying:(id)arg1;
- (BOOL)startPlaying:(id)arg1 error:(id *)arg2;
- (id)_assetForRecording:(id)arg1;
@property(readonly, nonatomic) id <VMAudioRecorder> activeAudioRecorder;
- (id)recorderForRecordingID:(id)arg1 error:(id *)arg2;
- (id)playerForRecordingID:(id)arg1 error:(id *)arg2;
- (void)_shutdownPlaybackEngine;
- (void)_schedulePlayback:(id)arg1;
- (void)_shutdownEngine;
- (BOOL)_switchEngine:(id)arg1 audioSettings:(id)arg2 error:(id *)arg3;
- (void)_handleAudioSessionNotification:(id)arg1;
- (void)overrideAnyExistingInterruption;
- (BOOL)_deactivateAudioSession;
- (void)deactivateAudioSession;
- (BOOL)_activateAudioSessionForRecording:(BOOL)arg1 error:(id *)arg2;
- (BOOL)__activateAudioSession:(id)arg1 recording:(BOOL)arg2 error:(id *)arg3;
- (void)_updateIsAudioSessionActiveForInterruption:(unsigned long long)arg1;
- (BOOL)configureWithAudioSettings:(id)arg1 error:(id *)arg2;
- (id)_createAndConfigurePlayer;
- (id)init;

@end

