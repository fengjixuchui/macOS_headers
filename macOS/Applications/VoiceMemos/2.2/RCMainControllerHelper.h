//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "RCDisplayLinkObserver-Protocol.h"
#import "RCTimeController-Protocol.h"
#import "RCWaveformDataSourceObserver-Protocol.h"
#import "VMAudioPlayerController-Protocol.h"
#import "VMAudioRecorderController-Protocol.h"

@class NSArray, NSError, NSHashTable, NSMutableSet, NSSet, NSString, RCAVWaveformViewController, RCComposition, RCDisplayLinkManager, RCRecordingDisplayModel, RCSavedRecordingsModel, RCUndoTarget, RCUserActivity, UIAlertController;
@protocol RCKeyPathObservance, RCMainControllerHelperDelegate, RCTimeController, VMAudioPlayer, VMAudioRecorder;

@interface RCMainControllerHelper : NSObject <VMAudioPlayerController, VMAudioRecorderController, RCTimeController, RCDisplayLinkObserver, RCWaveformDataSourceObserver>
{
    long long _scrubState;
    RCDisplayLinkManager *_displayLinkManager;
    RCSavedRecordingsModel *_recordingsModel;
    NSSet *_audioProperties;
    NSMutableSet *_recordingObservances;
    BOOL _isResumingOrReplacing;
    BOOL _hasDeferredContentChanges;
    UIAlertController *_recordingUnavailableAlertController;
    BOOL _didTrimPlayback;
    float _targetRate;
    float _currentRate;
    double _targetTime;
    double _currentTime;
    NSError *_playbackError;
    NSError *_recordingError;
    id <RCMainControllerHelperDelegate> _delegate;
    NSString *_uuidOfPlayingRecording;
    RCRecordingDisplayModel *_currentRecordingDisplayModel;
    NSHashTable *_timeObservers;
    id <VMAudioPlayer> _audioPlayer;
    id <VMAudioRecorder> _audioRecorder;
    CDUnknownBlockType _recordingErrorHandler;
    NSArray *_audioVersions;
    id <RCKeyPathObservance> _playerObservance;
    id <RCKeyPathObservance> _recorderObservance;
    RCUserActivity *_currentUserActivity;
    RCComposition *_currentComposition;
    RCAVWaveformViewController *_waveformViewController;
    RCAVWaveformViewController *_overviewWaveformViewController;
    CDUnknownBlockType _endTrimReloadDataSourceBlock;
    RCUndoTarget *_trimModeUndoTarget;
    RCUndoTarget *_editModeUndoTarget;
    CDStruct_73a5d3ca _allowedTimeRange;
}

- (void).cxx_destruct;
@property(nonatomic) BOOL didTrimPlayback; // @synthesize didTrimPlayback=_didTrimPlayback;
@property(retain, nonatomic) RCUndoTarget *editModeUndoTarget; // @synthesize editModeUndoTarget=_editModeUndoTarget;
@property(retain, nonatomic) RCUndoTarget *trimModeUndoTarget; // @synthesize trimModeUndoTarget=_trimModeUndoTarget;
@property(copy, nonatomic) CDUnknownBlockType endTrimReloadDataSourceBlock; // @synthesize endTrimReloadDataSourceBlock=_endTrimReloadDataSourceBlock;
@property(retain, nonatomic) RCAVWaveformViewController *overviewWaveformViewController; // @synthesize overviewWaveformViewController=_overviewWaveformViewController;
@property(retain, nonatomic) RCAVWaveformViewController *waveformViewController; // @synthesize waveformViewController=_waveformViewController;
@property(retain, nonatomic) RCComposition *currentComposition; // @synthesize currentComposition=_currentComposition;
@property(retain, nonatomic) RCUserActivity *currentUserActivity; // @synthesize currentUserActivity=_currentUserActivity;
@property(retain, nonatomic) id <RCKeyPathObservance> recorderObservance; // @synthesize recorderObservance=_recorderObservance;
@property(retain, nonatomic) id <RCKeyPathObservance> playerObservance; // @synthesize playerObservance=_playerObservance;
@property(retain, nonatomic) NSArray *audioVersions; // @synthesize audioVersions=_audioVersions;
@property(copy, nonatomic) CDUnknownBlockType recordingErrorHandler; // @synthesize recordingErrorHandler=_recordingErrorHandler;
@property(retain, nonatomic) id <VMAudioRecorder> audioRecorder; // @synthesize audioRecorder=_audioRecorder;
@property(retain, nonatomic) id <VMAudioPlayer> audioPlayer; // @synthesize audioPlayer=_audioPlayer;
@property(retain, nonatomic) NSHashTable *timeObservers; // @synthesize timeObservers=_timeObservers;
@property(retain, nonatomic) RCRecordingDisplayModel *currentRecordingDisplayModel; // @synthesize currentRecordingDisplayModel=_currentRecordingDisplayModel;
@property(copy, nonatomic) NSString *uuidOfPlayingRecording; // @synthesize uuidOfPlayingRecording=_uuidOfPlayingRecording;
@property(nonatomic) __weak id <RCMainControllerHelperDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSError *recordingError; // @synthesize recordingError=_recordingError;
@property(retain, nonatomic) NSError *playbackError; // @synthesize playbackError=_playbackError;
@property(nonatomic) double currentTime; // @synthesize currentTime=_currentTime;
@property(readonly, nonatomic) float currentRate; // @synthesize currentRate=_currentRate;
@property(nonatomic) double targetTime; // @synthesize targetTime=_targetTime;
@property(nonatomic) float targetRate; // @synthesize targetRate=_targetRate;
@property(nonatomic) CDStruct_73a5d3ca allowedTimeRange; // @synthesize allowedTimeRange=_allowedTimeRange;
- (BOOL)canJumpBackward;
- (BOOL)canJumpForward;
- (void)_reconcileAudioStateWithApplicationState;
@property(readonly) id <RCTimeController> timeController;
- (void)_recordingFailed:(id)arg1 error:(id)arg2;
- (void)_recordingStopped:(id)arg1;
- (void)_recordingStarted:(id)arg1;
- (void)_checkAudioPlayer:(id)arg1;
@property(readonly, nonatomic) double currentDuration;
- (void)setCurrentRate:(float)arg1;
- (void)removeTimeObserver:(id)arg1;
- (void)addTimeObserver:(id)arg1;
- (void)pauseTime;
@property(readonly, nonatomic) long long timeControllerState;
- (void)waveformDataSourceRequiresUpdate:(id)arg1;
- (void)waveformDataSource:(id)arg1 didLoadWaveformSegment:(id)arg2;
- (void)waveformDataSourceDidFinishLoading:(id)arg1;
- (id)_recordingsForUUIDs:(id)arg1;
- (id)_recordingForUUID:(id)arg1;
- (id)_titleForUUID:(id)arg1;
- (void)duplicateRecordingWithUUID:(id)arg1;
- (void)shareForUUID:(id)arg1 inViewController:(id)arg2 source:(id)arg3 isShareButton:(BOOL)arg4;
- (void)_jumpToTargetTime:(double)arg1;
- (void)_jumpByIncrement:(double)arg1 forUUID:(id)arg2;
- (void)jumpBackwardForUUID:(id)arg1;
- (void)jumpForwardForUUID:(id)arg1;
- (void)endScrubbingForUUID:(id)arg1 atPosition:(double)arg2;
- (void)updateScrubbingForUUID:(id)arg1 atPosition:(double)arg2;
- (void)startScrubbingForUUID:(id)arg1 atPosition:(double)arg2;
- (void)_stopPlaybackInAudioPlayer:(id)arg1 andTransitionToIdleForUUID:(id)arg2;
- (void)_clearPlaybackInAudioPlayer:(id)arg1 forUUID:(id)arg2;
- (void)pauseForUUID:(id)arg1;
- (void)stopForUUID:(id)arg1;
- (void)stopPlayback;
- (void)toggleForUUID:(id)arg1;
- (void)togglePlayback;
- (id)_currentPlayerForUUID:(id)arg1;
- (void)_startPlaybackOfUUID:(id)arg1 atPosition:(double)arg2;
- (id)compositionForUUID:(id)arg1;
- (BOOL)recordingTitleHasBeenEditedForUUID:(id)arg1;
- (void)setEnhanced:(BOOL)arg1 forUUID:(id)arg2;
- (void)toggleEnhancedForUUID:(id)arg1;
- (void)setFavorite:(BOOL)arg1 forUUID:(id)arg2;
- (void)toggleFavoriteForUUID:(id)arg1;
- (BOOL)isRecentlyDeletedForUUID:(id)arg1;
- (BOOL)isEnhancedForUUID:(id)arg1;
- (BOOL)isFavoriteForUUID:(id)arg1;
- (BOOL)isPlayingForUUID:(id)arg1;
- (BOOL)readyForPlayback;
- (BOOL)isRecording;
- (void)playbackForUUID:(id)arg1 atPosition:(double)arg2;
- (void)prepareForPlaybackForUUID:(id)arg1 force:(BOOL)arg2;
- (void)prepareForPlaybackForUUID:(id)arg1;
- (void)_removeRecordingObservations:(id)arg1;
- (void)_addRecordingObservations:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_audioContentOrDurationDidChange:(id)arg1;
- (void)performRenameWithNewTitle:(id)arg1 forUUID:(id)arg2;
- (void)performClearAllRecentlyDeleted;
- (void)_restoreRecordingsWithUUIDs:(id)arg1 isRecover:(BOOL)arg2;
- (id)_restoreRecordingsWithUUIDs:(id)arg1 isRecover:(BOOL)arg2 source:(id)arg3 tableViewController:(id)arg4;
- (id)restoreRecordingsWithUUIDs:(id)arg1 isRecover:(BOOL)arg2 source:(id)arg3 force:(BOOL)arg4 tableViewController:(id)arg5;
- (void)deleteRecordingsWithUUIDs:(id)arg1 isRecover:(BOOL)arg2;
- (void)deleteRecordingCanceled;
- (id)deleteWithUUIDs:(id)arg1 source:(id)arg2 showInfo:(BOOL)arg3;
- (id)eraseAllRecordingsAndConfirmWithSource:(id)arg1;
- (void)eraseRecordingsWithUUIDs:(id)arg1;
- (id)eraseAndConfirmWithUUIDs:(id)arg1 source:(id)arg2 tableViewController:(id)arg3;
- (id)_alertControllerWithTitle:(id)arg1 message:(id)arg2 isDestructive:(BOOL)arg3 preferredStyle:(long long)arg4 source:(id)arg5 handler:(CDUnknownBlockType)arg6 actionTitle:(id)arg7 cancelHandler:(CDUnknownBlockType)arg8;
- (id)uuidOfUserFolderForRecordingWithUUID:(id)arg1;
- (id)_presentFolderDeletionConfirmationForFolder:(id)arg1 source:(id)arg2;
- (id)deleteFolder:(id)arg1 source:(id)arg2;
- (void)renameFolder:(id)arg1 toName:(id)arg2;
- (void)moveFolder:(id)arg1 toDestinationIndexPath:(id)arg2;
- (BOOL)createUserFolderWithName:(id)arg1;
- (BOOL)folderExistsWithName:(id)arg1;
- (void)addRecordingsWithUUIDs:(id)arg1 toBuiltInFolderOfType:(long long)arg2;
- (void)addRecordingWithUUID:(id)arg1 toBuiltInFolderOfType:(long long)arg2;
- (void)removeRecordingWithUUID:(id)arg1 fromUserFolderWithUUID:(id)arg2;
- (void)removeRecordingWithUUID:(id)arg1 fromUserFolderName:(id)arg2;
- (void)addRecordingsWithUUIDs:(id)arg1 toUserFolderNamed:(id)arg2;
- (void)addRecordingsWithUUIDs:(id)arg1 toFolderWithUUID:(id)arg2;
- (void)addRecordingWithUUID:(id)arg1 toUserFolderNamed:(id)arg2;
- (void)_duplicateRecordingWithUUID:(id)arg1;
- (void)_showShareSheetWithUUID:(id)arg1 inViewController:(id)arg2 source:(id)arg3;
- (void)openForModifyRecordingWithUUID:(id)arg1 withSubActivityType:(long long)arg2;
- (BOOL)shouldEnableTrimSave;
- (void)cancelTrimModeWithDismissal:(BOOL)arg1;
- (void)exitTrimMode;
- (void)enterTrimMode;
- (void)_enterTrimMode;
- (void)_adjustCurrentTrimOperationUndoCount:(long long)arg1;
- (void)_updateTrimSaveEnabledState;
- (void)stopCapturing;
- (void)replaceCapturing;
- (void)resumeCapturing;
- (void)pauseCapturing;
- (void)_beginSelectionEditingModeAction;
- (id)_undoActionNameForTrimMode:(long long)arg1 isUndo:(BOOL)arg2;
- (void)_reloadWaveformDataSourceAndPreviewAssetWithInitialTime:(double)arg1;
- (void)_redoCaptureFragmentWithCompositionControllerRedoInfo:(id)arg1;
- (id)_previewWaveformDataSource;
- (void)_reloadRecordingAttributesAnimated:(BOOL)arg1;
- (BOOL)_isSelectionTrimmableByDeletingRange:(CDStruct_73a5d3ca)arg1;
- (BOOL)_isSelectionTrimmableByKeepingRange:(CDStruct_73a5d3ca)arg1;
- (void)performTrimByDeletingSelectedRangeForRecordingWithUUID:(id)arg1 source:(id)arg2;
- (void)performTrimByKeepingSelectedRangeForRecordingWithUUID:(id)arg1 source:(id)arg2;
- (void)_markCurrentFileVersionIfNecessary;
- (void)_redoTrim:(long long)arg1;
- (void)_undoTrim:(long long)arg1;
- (void)_refreshAfterEditingOperation:(id)arg1;
- (CDStruct_73a5d3ca)_selectedTimeRange;
- (void)_clearTrimModeUndoStack;
- (void)exitEditMode;
- (void)_cancelTrim;
- (void)_beginSelectionEditingModeForInsertMode:(BOOL)arg1;
- (void)_endSelectionEditingMode;
- (void)_setIsInSelectionEditingMode:(BOOL)arg1 forInsertMode:(BOOL)arg2;
- (void)_resetSelectedTimeRangeToFullDuration;
- (void)_undoCaptureFragment;
- (void)_handleRecordingUnavailableError:(id)arg1;
- (BOOL)_errorIsRecordingUnavailable:(id)arg1;
- (void)_beginOrResumeCaptureSessionWithReplace:(BOOL)arg1;
- (BOOL)startCapturing;
- (void)dealloc;
- (BOOL)_requiresUUIDForActivityType:(long long)arg1;
- (BOOL)_transitionToActivityType:(long long)arg1 toSubType:(long long)arg2 withDisplayModel:(id)arg3 waveformDataSource:(id)arg4 composition:(id)arg5;
- (BOOL)_transitionToPlayingBackForItemWithUUID:(id)arg1;
- (BOOL)_transitionToIdleForItemWithUUID:(id)arg1;
- (BOOL)_performRecordingEndTransitionWithUUID:(id)arg1;
- (void)displayLinkDidUpdate:(id)arg1 withTimeController:(id)arg2;
- (void)_stopDisplayLink;
- (void)_startDisplayLink;
- (id)init;
- (id)_uuidOfPlayingOrSelectedRecording;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

