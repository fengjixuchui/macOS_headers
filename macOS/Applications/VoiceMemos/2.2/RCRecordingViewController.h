//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "RCAVWaveformViewControllerDelegate-Protocol.h"
#import "RCRecordingViewDelegate-Protocol.h"
#import "RCRestylableProtocol-Protocol.h"

@class NSMutableDictionary, NSString, RCAVWaveformViewController, RCComposition, RCEmptyLibrarySplashView, RCRecordingView, RCToolBarController, RCWaveformDataSource;
@protocol RCRecordingViewControllerDelegate, RCTimeController;

@interface RCRecordingViewController : UIViewController <RCRecordingViewDelegate, RCAVWaveformViewControllerDelegate, RCRestylableProtocol>
{
    id <RCRecordingViewControllerDelegate> _recordingViewControllerDelegate;
    id <RCTimeController> _activeTimeController;
    RCWaveformDataSource *_waveformDataSource;
    RCAVWaveformViewController *_waveformViewController;
    RCAVWaveformViewController *_overviewWaveformViewController;
    RCToolBarController *_toolBarController;
    NSString *_UUID;
    RCComposition *_composition;
    RCEmptyLibrarySplashView *_emptyLibrarySplashView;
    NSMutableDictionary *_editingStatusDict;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableDictionary *editingStatusDict; // @synthesize editingStatusDict=_editingStatusDict;
@property(retain, nonatomic) RCEmptyLibrarySplashView *emptyLibrarySplashView; // @synthesize emptyLibrarySplashView=_emptyLibrarySplashView;
@property(copy, nonatomic) RCComposition *composition; // @synthesize composition=_composition;
@property(copy, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
@property(nonatomic) __weak RCToolBarController *toolBarController; // @synthesize toolBarController=_toolBarController;
@property(retain, nonatomic) RCAVWaveformViewController *overviewWaveformViewController; // @synthesize overviewWaveformViewController=_overviewWaveformViewController;
@property(retain, nonatomic) RCAVWaveformViewController *waveformViewController; // @synthesize waveformViewController=_waveformViewController;
@property(nonatomic) __weak RCWaveformDataSource *waveformDataSource; // @synthesize waveformDataSource=_waveformDataSource;
@property(nonatomic) __weak id <RCTimeController> activeTimeController; // @synthesize activeTimeController=_activeTimeController;
@property(nonatomic) __weak id <RCRecordingViewControllerDelegate> recordingViewControllerDelegate; // @synthesize recordingViewControllerDelegate=_recordingViewControllerDelegate;
- (BOOL)hasShareableComposition;
- (void)handleRemovalOfUUID:(id)arg1;
- (id)uuidBeingDisplayed;
- (void)audioWaveformControllerDidChangeAVTimes:(id)arg1;
- (void)audioWaveformControllerDidChangeAVState:(id)arg1;
- (void)audioWaveformControllerDidChangeWaveformDataSource:(id)arg1;
- (void)stopScrolling;
- (BOOL)accessibilityPerformEscape;
- (BOOL)recordingTitleHasBeenEdited;
- (void)reset;
- (void)cleanupAfterDismiss;
- (void)handleDone;
- (void)cleanupAfterExitTrim;
- (void)handleCancel;
- (void)_syncWaveformCompactness;
- (void)_configureWaveformViewWithDataSource:(id)arg1;
- (id)createNewWaveformViewControllerWithDataSource:(id)arg1 isOverview:(BOOL)arg2;
- (void)visualStateChanged;
- (void)startEditWithComposition:(id)arg1 displayModel:(id)arg2;
- (void)setCurrentTime:(double)arg1;
- (void)updateWithRecordingModel:(id)arg1 requireMatchingUUID:(BOOL)arg2;
- (void)updateWithRecordingModel:(id)arg1;
- (void)updateAfterRecordingWithRecordingModel:(id)arg1;
- (void)performRenameWithNewTitle:(id)arg1;
- (void)performAction:(long long)arg1 atPosition:(double)arg2 source:(id)arg3;
- (void)_syncEditingInFlight;
- (void)updateToEditingInFlight:(BOOL)arg1 progress:(float)arg2 forUUID:(id)arg3;
- (void)updateCurrentTimeForUUID:(id)arg1 toTime:(double)arg2;
- (void)handleDeleteForUUID:(id)arg1;
- (void)renameForUUID:(id)arg1 toNewTitle:(id)arg2;
- (void)showIdleForUUID:(id)arg1;
- (void)showPlayingForUUID:(id)arg1;
- (void)setOutPointToCurrentTime;
- (void)setInPointToCurrentTime;
- (void)setSelectedTimeRange:(CDStruct_73a5d3ca)arg1 animationDuration:(double)arg2;
- (void)updateForSizeChange;
- (void)prepareForPresent;
- (void)updateTrimSaveState:(BOOL)arg1;
- (void)updateUndoState:(BOOL)arg1;
- (void)updateForRecordingEnd:(BOOL)arg1;
- (void)updateForTrimMode;
- (void)updateForRecordingReplace;
- (void)updateForRecordingAppend;
- (void)updateForRecordingPauseAtEnd;
- (void)updateForRecordingPause;
- (void)_updateRecordButtonViewState:(id)arg1;
- (void)updateForRecordingStart;
- (void)actionActivated:(long long)arg1;
@property(readonly, nonatomic) long long recordingControlState;
- (void)_reset;
- (Class)_viewClass;
- (void)_classSpecificLoadView;
- (void)_styleView;
- (void)restyle;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)loadView;

// Remaining properties
@property(retain, nonatomic) RCRecordingView *view; // @dynamic view;

@end

