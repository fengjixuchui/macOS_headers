//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AppKit/NSView.h>

@class NSArray, NSLayoutConstraint, NSResponder, NSTimer, NSTrackingArea, TSKMacSplitViewDividerView;
@protocol KNMacContentContainerSplitViewDelegate;

@interface KNMacContentContainerSplitView : NSView
{
    unsigned long long _accessoryViewHiddenAnimationCount;
    TSKMacSplitViewDividerView *_dividerView;
    NSArray *_constraints;
    NSLayoutConstraint *_accessoryViewSizeConstraint;
    NSLayoutConstraint *_accessoryViewMinFixedEdgeConstraint;
    BOOL _isInLayout;
    struct CGPoint _dividerDragStartLocation;
    double _dividerDragInitialAccessoryViewSize;
    double _dividerDragVisibleAccessoryViewSize;
    double _dividerDragVelocity;
    double _dividerDragPreviousOffset;
    double _dividerDragPreviousEventTimestamp;
    BOOL _isDraggingDivider;
    BOOL _isHidingAccessoryViewByDraggingDivider;
    NSTimer *_dividerSnapBackTimer;
    double _dividerSnapBackInitialDelta;
    double _dividerSnapBackStartTime;
    NSTrackingArea *_cursorTrackingArea;
    BOOL _accessoryViewHidden;
    BOOL _canUseImplicitAnimations;
    BOOL _canHideAccessoryViewByDraggingDivider;
    float _accessoryViewSizePriority;
    NSView *_mainView;
    NSView *_accessoryView;
    double _minMainViewSize;
    double _minAccessoryViewSize;
    double _maxAccessoryViewSize;
    double _undersizedWindowFactor;
    double _savedAccessoryViewSize;
    id <KNMacContentContainerSplitViewDelegate> _delegate;
    double _topContentInset;
}

+ (BOOL)automaticallyNotifiesObserversOfAccessoryViewHidden;
+ (double)minimumDividerDragThickness;
+ (void)initialize;
- (void).cxx_destruct;
@property(nonatomic) double topContentInset; // @synthesize topContentInset=_topContentInset;
@property(nonatomic) __weak id <KNMacContentContainerSplitViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) double savedAccessoryViewSize; // @synthesize savedAccessoryViewSize=_savedAccessoryViewSize;
@property(nonatomic) BOOL canHideAccessoryViewByDraggingDivider; // @synthesize canHideAccessoryViewByDraggingDivider=_canHideAccessoryViewByDraggingDivider;
@property(nonatomic) BOOL canUseImplicitAnimations; // @synthesize canUseImplicitAnimations=_canUseImplicitAnimations;
@property(nonatomic, getter=isAccessoryViewHidden) BOOL accessoryViewHidden; // @synthesize accessoryViewHidden=_accessoryViewHidden;
@property(nonatomic) double undersizedWindowFactor; // @synthesize undersizedWindowFactor=_undersizedWindowFactor;
@property(nonatomic) float accessoryViewSizePriority; // @synthesize accessoryViewSizePriority=_accessoryViewSizePriority;
@property(nonatomic) double maxAccessoryViewSize; // @synthesize maxAccessoryViewSize=_maxAccessoryViewSize;
@property(nonatomic) double minAccessoryViewSize; // @synthesize minAccessoryViewSize=_minAccessoryViewSize;
@property(nonatomic) double minMainViewSize; // @synthesize minMainViewSize=_minMainViewSize;
@property(retain, nonatomic) NSView *accessoryView; // @synthesize accessoryView=_accessoryView;
@property(retain, nonatomic) NSView *mainView; // @synthesize mainView=_mainView;
- (void)p_stopDividerSnapBack;
- (void)p_updateDividerSnapBackAnimation:(id)arg1;
- (void)p_scheduleNextDividerSnapBackAnimationUpdate;
- (void)p_snapBackDividerToMinAccessoryViewSizeFromInitialVisibleAccessoryViewSize:(double)arg1;
- (void)p_updateCursorWithEvent:(id)arg1;
@property(readonly, nonatomic) struct CGRect p_dividerDragRect;
- (void)updateTrackingAreas;
- (void)cursorUpdate:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)p_updateDividerDragVisibleAccessoryViewSize;
- (double)p_dividerDragVisibleAccessoryViewSize;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (void)layout;
- (void)updateConstraints;
- (void)restoreSavedAccessoryViewSize:(double)arg1;
@property(readonly, nonatomic) BOOL p_canDragDividerPastMinAccessoryViewSize;
@property(readonly, nonatomic) struct CGRect unhiddenAccessoryViewFrame;
@property(readonly, nonatomic) struct CGRect mainViewFrameForUnhiddenAccessoryView;
@property(readonly, nonatomic) double p_visibleAccessoryViewSize;
@property(readonly, nonatomic) NSResponder *p_nextResponderForHiddenAccessoryView;
- (void)p_notifyDidHideAccessoryView;
- (void)p_notifyWillShowAccessoryView;
- (void)setAccessoryViewHidden:(BOOL)arg1 animated:(BOOL)arg2 notify:(BOOL)arg3;
- (void)setAccessoryViewHidden:(BOOL)arg1 animated:(BOOL)arg2;
- (struct CGSize)boundsSizeForMainViewSize:(struct CGSize)arg1;
- (double)p_adjustedMaxAccessoryViewSizeForUndersizedWindowFactor;
@property(nonatomic) double dividerThickness;
@property(nonatomic, getter=isVertical) BOOL vertical;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

