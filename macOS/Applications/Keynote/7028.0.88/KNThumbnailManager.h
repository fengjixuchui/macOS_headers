//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TSDThumbnailControllerDelegate-Protocol.h"
#import "TSDThumbnailProducer-Protocol.h"

@class KNDocumentRoot, NSArray, NSCondition, NSMapTable, NSMutableDictionary, NSString, TSDThumbnailController;
@protocol KNVisibleSlideNodesProvider;

@interface KNThumbnailManager : NSObject <TSDThumbnailProducer, TSDThumbnailControllerDelegate>
{
    KNDocumentRoot *_documentRoot;
    BOOL _hasBeenTornDown;
    struct CGSize _masterSlideThumbnailSize;
    NSCondition *_condition;
    NSMutableDictionary *_imageNamesInLocalStore;
    NSMapTable *_replacedBodyPlaceholdersForMasterSlideNodes;
    NSMapTable *_replacedTitlePlaceholdersForMasterSlideNodes;
    BOOL _thumbnailsArePrimary;
    id <KNVisibleSlideNodesProvider> _visibleSlideNodesProvider;
    TSDThumbnailController *_thumbnailController;
    NSArray *_visibleSlideNodes;
    struct CGSize _thumbnailSize;
}

- (void).cxx_destruct;
@property(copy) NSArray *visibleSlideNodes; // @synthesize visibleSlideNodes=_visibleSlideNodes;
@property(nonatomic) BOOL thumbnailsArePrimary; // @synthesize thumbnailsArePrimary=_thumbnailsArePrimary;
@property(readonly, nonatomic) TSDThumbnailController *thumbnailController; // @synthesize thumbnailController=_thumbnailController;
@property(readonly, nonatomic) struct CGSize thumbnailSize; // @synthesize thumbnailSize=_thumbnailSize;
@property(nonatomic) __weak id <KNVisibleSlideNodesProvider> visibleSlideNodesProvider; // @synthesize visibleSlideNodesProvider=_visibleSlideNodesProvider;
- (void)upgradeForUnity20IDChangeForSlideNodes:(id)arg1;
- (void)p_updateThumbnailSizeAndInvalidateInvalidThumbnails;
- (void)p_screensChanged:(id)arg1;
- (void)p_setThumbnailImageInLocalStore:(id)arg1 forSlideNode:(id)arg2;
- (id)p_thumbnailFileNameForSlideNode:(id)arg1 extension:(id)arg2;
- (id)p_getThumbnailFromLocalStoreForSlideNode:(id)arg1;
- (id)p_imageNamesInLocalStore;
- (void)p_updateVisibleSlideNodes;
- (void)documentCacheWasInvalidated;
- (void)didDownloadRemoteData:(id)arg1;
- (void)didDownloadDocumentResources:(id)arg1;
- (void)didDownloadDataWithDigestStrings:(id)arg1;
- (void)dirtySlideNodesForChanges:(id)arg1;
- (void)setDelayBeforeRedraw:(double)arg1;
- (double)delayBeforeRedraw;
- (void)resumeThumbnailing;
- (void)suspendThumbnailing;
@property(nonatomic, getter=isEnabled) BOOL enabled;
- (void)waitUntilSlideNodesHaveThumbnails:(id)arg1;
- (void)thumbnail:(id)arg1 didChange:(id)arg2;
- (void)commitThumbnail:(id)arg1 identifier:(id)arg2 datasThatNeedDownload:(id)arg3;
- (BOOL)p_thumbnailCanBeJPEG:(id)arg1 slideNode:(id)arg2;
@property(readonly) NSArray *principalThumbnailIdentifiers;
- (void)configureImager:(id)arg1 forIdentifier:(id)arg2;
- (BOOL)shouldReuseBitmapContext;
- (BOOL)distortedToMatch;
- (BOOL)suppressOverlayLayerForIdentifier:(id)arg1;
- (struct CGRect)unscaledClipRectForIdentifier:(id)arg1;
- (struct CGSize)thumbnailSizeForIdentifierForDisplay:(id)arg1;
- (struct CGSize)thumbnailSizeForIdentifier:(id)arg1;
- (id)rootInfosForIdentifier:(id)arg1;
- (BOOL)p_isDocumentResourceLocatorForbidden:(id)arg1;
- (BOOL)p_slideNodeHasForbiddenAsset:(id)arg1;
- (void)dirtySlideNodesWithBadThumbnails;
- (void)noteSlideNodesWithBadThumbnails;
- (void)performBlockOnSlideNodesWithBadThumbnails:(CDUnknownBlockType)arg1;
- (void)redrawThumbnailImmediatelyForSlideNode:(id)arg1;
- (void)noteDirtySlideNode:(id)arg1;
- (void)p_noteDirtySlideNode:(id)arg1 withWriteLock:(BOOL)arg2;
- (id)thumbnailForSlideNode:(id)arg1 atSizeInPixels:(struct CGSize)arg2 waitIfNecessary:(BOOL)arg3;
- (id)thumbnailForSlideNode:(id)arg1;
- (id)p_thumbnailForSlideNodeWithoutSideEffects:(id)arg1 atSizeInPixels:(struct CGSize)arg2;
- (void)teardown;
- (void)loadedDocument;
- (void)p_setThumbnailSizesForShowSize:(struct CGSize)arg1;
- (struct CGSize)p_maxThumbnailSize;
- (double)p_thumbnailScale;
- (void)dealloc;
- (id)initWithDocumentRoot:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

