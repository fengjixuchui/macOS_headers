//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <QuartzCore/CALayer.h>

@class NSArray, TSUColor;

@interface KNOverlayLayer : CALayer
{
    TSUColor *_strokeColor;
    CALayer *_laserLayer;
    BOOL _compensatingForAirPlay;
    double _laserScale;
    NSArray *_strokes;
    KNOverlayLayer *_mirrorLayer;
    TSUColor *_remoteControlLastColor;
    double _normalizedForce;
}

+ (Class)p_preferredSubclass;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void).cxx_destruct;
@property(nonatomic) double normalizedForce; // @synthesize normalizedForce=_normalizedForce;
@property(retain, nonatomic) TSUColor *remoteControlLastColor; // @synthesize remoteControlLastColor=_remoteControlLastColor;
@property(nonatomic, getter=isCompensatingForAirPlay) BOOL compensatingForAirPlay; // @synthesize compensatingForAirPlay=_compensatingForAirPlay;
@property(nonatomic) __weak KNOverlayLayer *mirrorLayer; // @synthesize mirrorLayer=_mirrorLayer;
@property(copy, nonatomic) NSArray *strokes; // @synthesize strokes=_strokes;
@property(nonatomic) double laserScale; // @synthesize laserScale=_laserScale;
- (struct CGPoint)i_boundsPointForTelestratorPoint:(struct CGPoint)arg1;
- (void)endLaser;
- (void)moveLaserToPoint:(struct CGPoint)arg1;
- (void)startLaserAtPoint:(struct CGPoint)arg1;
- (void)clearAll;
- (void)endDrawing;
- (void)drawToPoint:(struct CGPoint)arg1 atTime:(double)arg2;
- (void)startDrawingAtPoint:(struct CGPoint)arg1 atTime:(double)arg2 withColor:(id)arg3;
- (void)drawContentsInContext:(struct CGContext *)arg1;
- (BOOL)hasActiveStroke;
@property(nonatomic) struct CGPoint laserLocation;
- (id)init;

@end

