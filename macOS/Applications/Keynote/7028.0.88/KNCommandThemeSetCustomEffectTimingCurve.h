//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <TSKit/TSKCommand.h>

#import "GSSPAutoEncodable-Protocol.h"

@class NSString, TSDBezierPathSource;

@interface KNCommandThemeSetCustomEffectTimingCurve : TSKCommand <GSSPAutoEncodable>
{
    NSString *_name;
    TSDBezierPathSource *_pathSource;
    BOOL _definedPathSource;
    TSDBezierPathSource *_oldPathSource;
}

+ (id)commandWithPathSource:(id)arg1 name:(id)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (void)saveToArchiver:(id)arg1;
-     // Error parsing type: v32@0:8^{CommandSetThemeCustomEffectTimingCurveArchive=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{CommandArchive}^{PathSourceArchive}^{PathSourceArchive}}16@24, name: saveToArchive:archiver:
-     // Error parsing type: v32@0:8r^{CommandSetThemeCustomEffectTimingCurveArchive=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{CommandArchive}^{PathSourceArchive}^{PathSourceArchive}}16@24, name: loadFromArchive:unarchiver:
- (void)loadFromUnarchiver:(id)arg1;
- (void)p_sendThemeCurvesDidChangeNotificationOnTheme:(id)arg1;
- (id)p_currentTheme;
- (id)actionString;
- (void)rollback;
- (id)makeInverse;
- (BOOL)supportsCollaboration;
- (void)undo;
- (void)redo;
- (void)commit;
- (BOOL)process;
- (id)initWithPathSource:(id)arg1 name:(id)arg2 context:(id)arg3;
- (void)populateGSSPCmdThemeSetCustomEffectTimingCurve:(id)arg1 withEncodeContext:(struct GSSPEncodeConversionContext *)arg2;
- (void)populateGSSPMessageInstance:(id)arg1 withContext:(struct GSSPEncodeConversionContext *)arg2;
- (id)newGsspMessageInstance;
- (id)gsspMessageInstance;
- (int)gsspSharingFlag;
- (id)initWithGSSPMessage:(id)arg1 andContext:(struct GSSPDecodeConversionContext *)arg2;

@end

