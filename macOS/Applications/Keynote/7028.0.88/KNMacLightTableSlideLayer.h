//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <TSDrawables/TSDNoDefaultImplicitActionLayer.h>

@class CALayer, KNMacLightTableSlideHighlightLayer, KNMacLightTableSlideNumberLayer, KNSlideNavigatorSlideData, TSUImage;

@interface KNMacLightTableSlideLayer : TSDNoDefaultImplicitActionLayer
{
    KNMacLightTableSlideNumberLayer *_slideNumberLayer;
    KNMacLightTableSlideHighlightLayer *_selectionHighlightLayer;
    CALayer *_presenterNotesIndicatorLayer;
    CALayer *_buildIndicatorLayer;
    CALayer *_transitionIndicatorLayer;
    BOOL _selected;
    BOOL _primary;
    BOOL _inContext;
    BOOL _dragging;
    KNSlideNavigatorSlideData *_slideData;
    TSUImage *_thumbnailImage;
    double _thumbnailAspectRatio;
    double _screenScale;
    CALayer *_contentLayer;
    CALayer *_thumbnailLayer;
}

+ (struct CGSize)p_thumbnailSizeForLayerSize:(struct CGSize)arg1;
+ (double)thumbnailLayerBottomInset;
+ (double)thumbnailLayerSideInset;
+ (double)thumbnailLayerTopInset;
+ (struct CGSize)thumbnailSizeForZoomScale:(double)arg1 withAspectRatio:(double)arg2;
+ (struct CGSize)slideLayerSizeForZoomScale:(double)arg1 withAspectRatio:(double)arg2;
- (void).cxx_destruct;
@property(readonly, nonatomic, getter=isDragging) BOOL dragging; // @synthesize dragging=_dragging;
@property(nonatomic, getter=isInContext) BOOL inContext; // @synthesize inContext=_inContext;
@property(nonatomic, getter=isPrimary) BOOL primary; // @synthesize primary=_primary;
@property(nonatomic, getter=isSelected) BOOL selected; // @synthesize selected=_selected;
@property(readonly, nonatomic) CALayer *thumbnailLayer; // @synthesize thumbnailLayer=_thumbnailLayer;
@property(readonly, nonatomic) CALayer *contentLayer; // @synthesize contentLayer=_contentLayer;
@property(nonatomic) double screenScale; // @synthesize screenScale=_screenScale;
@property(nonatomic) double thumbnailAspectRatio; // @synthesize thumbnailAspectRatio=_thumbnailAspectRatio;
@property(readonly, nonatomic) TSUImage *thumbnailImage; // @synthesize thumbnailImage=_thumbnailImage;
@property(retain, nonatomic) KNSlideNavigatorSlideData *slideData; // @synthesize slideData=_slideData;
- (void)p_updateSlideNumber;
- (void)p_updateSelectionHighlightFrame;
- (void)p_updateSkippedState;
- (void)endDragOperation;
- (void)slideWasDraggedWithIndexInStack:(unsigned long long)arg1;
- (void)beginDragOperation;
- (id)hitTest:(struct CGPoint)arg1;
- (id)p_hittableSublayer;
- (void)p_updateSelectionHighlight;
- (void)updateThumbnailImageWithImage:(id)arg1;
- (void)p_updateTransitionIndicator;
- (void)p_updateTransitionIndicatorLayerContents;
- (void)p_updateBuildIndicator;
- (void)p_updateBuildIndicatorLayerContents;
- (void)p_updatePresenterNotesIndicator;
- (void)p_updatePresenterNotesIndicatorLayerContents;
- (void)addDeleteAnimationForKey:(id)arg1;
- (void)addInsertAnimationForKey:(id)arg1;
- (void)updateAppearance;
@property(readonly, nonatomic) struct CGRect thumbnailFrameInSlideLayer;
- (void)layoutSublayers;
- (double)thumbnailShadowOpacity;
- (id)p_layerActions;
- (id)initWithLayer:(id)arg1;
- (id)init;

@end

