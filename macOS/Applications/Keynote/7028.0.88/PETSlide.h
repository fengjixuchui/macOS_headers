//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface PETSlide : NSObject
{
}

+ (BOOL)addCommentWithText:(id)arg1 commentStorage:(id)arg2 position:(struct CGPoint)arg3 date:(id)arg4 author:(id)arg5 state:(id)arg6;
+ (void)mapComments:(id)arg1;
+ (void)mapBuilds:(id)arg1;
+ (void)mapSlideTree:(id)arg1 state:(id)arg2;
+ (void)mapMediaEntries:(id)arg1 rootChildren:(id)arg2;
+ (void)addInteractiveInfoForMediaNode:(id)arg1 toRootChildren:(id)arg2;
+ (void)mapParallelDataEntries:(id)arg1 nestedEntries:(id)arg2;
+ (id)newDefaultParallelTimeNodeInUnionWithStartTimeCondition:(int)arg1;
+ (id)newDefaultParallelTimeNodeInUnionWithStartTimeCondition:(int)arg1 addStartCondition:(BOOL)arg2 withTriggerEvent:(int)arg3 addTriggerEvent:(BOOL)arg4;
+ (id)newDefaultParallelTimeNodeInUnionWithStartTimeCondition:(int)arg1 addStartCondition:(BOOL)arg2;
+ (double)mapDelay:(id)arg1 triggerType:(int)arg2;
+ (int)mapIterateType:(id)arg1 state:(id)arg2;
+ (double)mapDuration:(id)arg1 presetClass:(int)arg2 presetId:(long long)arg3 state:(id)arg4;
+ (double)mapDirection:(id)arg1 presetClass:(int)arg2 state:(id)arg3;
+ (long long)mapEffect:(id)arg1 animationType:(long long)arg2 presetClass:(int)arg3 state:(id)arg4;
+ (id)newTarget:(id)arg1 oadDrawable:(id)arg2 presetClass:(int)arg3 paragraphIndex:(unsigned long long)arg4 state:(id)arg5 buildState:(id)arg6;
+ (BOOL)isTextBuildChunkAllAtOnce:(id)arg1 buildState:(id)arg2;
+ (int)pieChartBuildTypeFromKnBuild:(id)arg1;
+ (int)chartBuildTypeFromKnBuild:(id)arg1 is3D:(BOOL)arg2;
+ (BOOL)isChartBuildTypeAllAtOnce:(id)arg1 isPie:(BOOL)arg2 buildState:(id)arg3;
+ (int)mapAutomatic:(id)arg1;
+ (int)mapAnimationType:(long long)arg1 buildEffect:(id)arg2;
+ (BOOL)buildEffectIsMediaCall:(id)arg1;
+ (void)insertBuildsForBuildByGroup:(id)arg1 parallelDataEntries:(id)arg2 knBuildChunk:(id)arg3 state:(id)arg4 buildState:(id)arg5;
+ (id)textTimeNodeStartWithZeroDelayBasedOnTimeNode:(id)arg1 paragraphIndex:(unsigned long long)arg2;
+ (id)timeNodeStartWithZeroDelayBasedOnTimeNode:(id)arg1 target:(id)arg2;
+ (id)newParallelTimeNode:(id)arg1 paragraphIndex:(unsigned long long)arg2 state:(id)arg3 buildState:(id)arg4;
+ (BOOL)shouldAnimateExtraDrawablesWithBuild:(id)arg1;
+ (void)setRepeatCount:(id)arg1 presetClass:(int)arg2 presetId:(long long)arg3 duration:(double)arg4 knBuild:(id)arg5;
+ (void)setAccelerationDeceleration:(id)arg1 presetClass:(int)arg2 presetId:(long long)arg3 knBuild:(id)arg4;
+ (id)mapValue:(id)arg1 presetClass:(int)arg2 presetId:(long long)arg3 state:(id)arg4 buildState:(id)arg5;
+ (id)targetDrawableFromBuild:(id)arg1 buildState:(id)arg2;
+ (void)addTargetToBuildMap:(id)arg1 presetClass:(int)arg2 knBuildChunk:(id)arg3 buildState:(id)arg4;
+ (id)buildMapKey:(id)arg1 presetClass:(int)arg2 buildState:(id)arg3 knBuild:(id)arg4;
+ (void)mapSoundtrack:(id)arg1 state:(id)arg2;
+ (void)mapNoteInfo:(id)arg1 slide:(id)arg2 state:(id)arg3;
+ (void)processBuilds:(id)arg1 parallelDataEntries:(id)arg2 mediaEntries:(id)arg3 buildMap:(id)arg4;
+ (BOOL)isUnmappableMovieAnimation:(id)arg1 buildState:(id)arg2;
+ (void)handleChartInsertAllAtOnce:(id)arg1 parallelTimeNode:(id)arg2 parallelDataEntries:(id)arg3 buildState:(id)arg4;
+ (unsigned long long)chartChunkCount:(id)arg1 chartBuildType:(int)arg2;
+ (void)setChartTargetInfo:(id)arg1 chdChart:(id)arg2 chartBuildType:(int)arg3 indexInBuild:(unsigned long long)arg4 chunkCount:(unsigned long long)arg5;
+ (void)injectStartMediaAfterBuildChunk:(id)arg1 parallelTimeNode:(id)arg2 parallelDataEntries:(id)arg3 buildState:(id)arg4;
+ (void)handleParagraphBuildAnimateBackground:(id)arg1 parallelTimeNode:(id)arg2 parallelDataEntries:(id)arg3 buildState:(id)arg4;
+ (void)updateParallelNodeAnimateBackground:(id)arg1 parallelTimeNode:(id)arg2 parallelDataEntries:(id)arg3 buildState:(id)arg4;
+ (void)processUnbalancedChartBuilds:(id)arg1 slideState:(id)arg2 buildState:(id)arg3;
+ (void)handleExtraDrawablesWithParallelTimeNode:(id)arg1 buildChunk:(id)arg2 parallelDataEntries:(id)arg3 buildState:(id)arg4;
+ (int)withEffectAnimationTimeNodeTypeWithBuildState:(id)arg1;
+ (void)handleUnbalancedParagraphBuildsFromBuildChunk:(id)arg1 parallelTimeNode:(id)arg2 parallelDataEntries:(id)arg3 buildState:(id)arg4;
+ (void)processUnbalancedParagraphBuilds:(id)arg1 buildState:(id)arg2;
+ (void)endBuildByGroupHandlingForKnBuildChunk:(id)arg1 parallelTimeNode:(id)arg2 parallelDataEntries:(id)arg3 slideState:(id)arg4 buildState:(id)arg5;
+ (unsigned long long)beginBuildByGroupHandlingForKnBuildChunk:(id)arg1 slideState:(id)arg2 buildState:(id)arg3;
+ (unsigned long long)startParagraphIndexForBuildByGroup:(id)arg1 slideState:(id)arg2;
+ (void)processMedia:(id)arg1 mediaEntries:(id)arg2 startMediaAfterBuildChunkSet:(id)arg3 buildState:(id)arg4;
+ (id)petMovieForTargetDrawable:(id)arg1 slideState:(id)arg2;
+ (id)targetMovieDrawablesWithSlideState:(id)arg1;
+ (id)targetDrawableClusterForSourceDrawable:(id)arg1 slideState:(id)arg2;
+ (id)petMovieFromSourceDrawable:(id)arg1 slideState:(id)arg2;
+ (id)newMediaParallelTimeNode:(id)arg1 duration:(double)arg2 timeNodeType:(int)arg3 buildState:(id)arg4;
+ (id)newSoundtrackSequentialTimeNode:(id)arg1 delay:(float)arg2 buildState:(id)arg3;
+ (void)addSequentialTimeNode:(id)arg1 toSequentialData:(id)arg2;
+ (id)newMediaNodeForDrawable:(id)arg1 volume:(float)arg2 numberOfSlides:(unsigned long long)arg3 isShowWhenStopped:(BOOL)arg4;

@end

