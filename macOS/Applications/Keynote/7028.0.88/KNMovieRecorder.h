//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AVCaptureFileOutputRecordingDelegate-Protocol.h"

@class AVCaptureDeviceInput, AVCaptureMovieFileOutput, AVCaptureSession, KNHostTimebase, NSArray, NSError, NSMutableArray, NSString, NSURL, TSPObjectContext;
@protocol KNTimebase;

@interface KNMovieRecorder : NSObject <AVCaptureFileOutputRecordingDelegate>
{
    TSPObjectContext *_recordedDataObjectContext;
    KNHostTimebase *_timebase;
    NSMutableArray *_placeholderMovieSegments;
    unsigned long long _pendingRecordedFilesCount;
    BOOL _isRunning;
    BOOL _audioRecordingEnabled;
    BOOL _isRecording;
    BOOL _isPaused;
    NSArray *_recordedMovieSegments;
    NSError *_recordingError;
    AVCaptureSession *_captureSession;
    AVCaptureDeviceInput *_captureAudioDeviceInput;
    AVCaptureMovieFileOutput *_captureFileOutput;
    CDUnknownBlockType _completionHandler;
    NSURL *_latestRecordingURL;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSURL *latestRecordingURL; // @synthesize latestRecordingURL=_latestRecordingURL;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(retain, nonatomic) AVCaptureMovieFileOutput *captureFileOutput; // @synthesize captureFileOutput=_captureFileOutput;
@property(retain, nonatomic) AVCaptureDeviceInput *captureAudioDeviceInput; // @synthesize captureAudioDeviceInput=_captureAudioDeviceInput;
@property(retain, nonatomic) AVCaptureSession *captureSession; // @synthesize captureSession=_captureSession;
@property(copy, nonatomic) NSError *recordingError; // @synthesize recordingError=_recordingError;
@property(copy, nonatomic) NSArray *recordedMovieSegments; // @synthesize recordedMovieSegments=_recordedMovieSegments;
@property(nonatomic, getter=isAudioRecordingEnabled) BOOL audioRecordingEnabled; // @synthesize audioRecordingEnabled=_audioRecordingEnabled;
@property(readonly, nonatomic) NSObject<KNTimebase> *timebase; // @synthesize timebase=_timebase;
- (id)currentAudioAveragePowerLevels;
- (void)captureOutput:(id)arg1 didFinishRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3 error:(id)arg4;
- (void)captureOutput:(id)arg1 didStartRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3;
- (void)p_captureSessionRuntimeErrorDidOccur:(id)arg1;
- (void)p_completeRecordingIfAllFilesAreFinished;
- (void)p_stopRecordingCurrentFile;
- (void)p_actuallyStartRecordingLatestFile;
- (void)p_startRecordingNewFile;
- (void)p_resetRecordedMovieSegmentsAndError;
- (void)resumeRecordingAtTime:(double)arg1;
- (void)resumeRecording;
- (void)pauseRecording;
- (void)stopRecording;
- (void)startRecordingWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)resumeRunning;
- (void)suspendRunning;
- (void)p_tearDownCaptureSession;
- (void)stopRunning;
- (void)startRunning;
- (id)init;
- (id)initWithRecordedDataObjectContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

