//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TSKChangeSourceObserver-Protocol.h"

@class KNPlaybackController, KNPlaybackThumbnailGenerator, KNRecording, KNRecordingController, KNRecordingPlaybackController, KNRecordingScrubberSliderMarkerValueArray, KNRecordingSoundtrackAssetLoader, NSHashTable, NSString, NSTimer;
@protocol KNLaserOverlayController, KNRecordingSeekingLayerHost, KNRecordingSessionControllerDelegate, KNTimebase;

@interface KNRecordingSessionController : NSObject <TSKChangeSourceObserver>
{
    NSHashTable *_audioLevelObservers;
    NSHashTable *_currentTimeObservers;
    BOOL _running;
    BOOL _startingRecording;
    BOOL _currentTimeAtBeginning;
    BOOL _seeking;
    BOOL _loadingSoundtrackAssets;
    BOOL _trimmingMovieSegment;
    BOOL _shouldEnableRecordingAfterPlaybackStops;
    KNRecording *_currentRecording;
    KNPlaybackController *_playbackController;
    NSObject<KNLaserOverlayController> *_laserOverlayController;
    KNPlaybackThumbnailGenerator *_thumbnailGenerator;
    id <KNRecordingSeekingLayerHost> _seekingLayerHost;
    id <KNRecordingSessionControllerDelegate> _delegate;
    KNRecordingController *_recordingController;
    KNRecordingPlaybackController *_recordingPlaybackController;
    KNRecordingSoundtrackAssetLoader *_soundtrackAssetLoader;
    struct __CFRunLoopSource *_recordingStoppedSignalSource;
    struct __CFRunLoop *_recordingStoppedWaitRunLoop;
    double _recordingReplacementStartTime;
    unsigned long long _disableRecordingCount;
    NSTimer *_audioLevelObserverTimer;
    id _timebaseDiscontinuityObserver;
    NSObject<KNTimebase> *_placeholderPresentedTimebase;
}

+ (id)keyPathsForValuesAffectingPresentedTimebase;
+ (id)keyPathsForValuesAffectingPlaying;
+ (id)keyPathsForValuesAffectingPlaybackActive;
+ (BOOL)automaticallyNotifiesObserversOfAudioRecordingEnabled;
+ (id)keyPathsForValuesAffectingAudioRecordingEnabled;
+ (id)keyPathsForValuesAffectingRecordingPaused;
+ (id)keyPathsForValuesAffectingStoppingRecording;
+ (id)keyPathsForValuesAffectingIsRecording;
+ (void)initialize;
- (void).cxx_destruct;
@property(retain, nonatomic) NSObject<KNTimebase> *placeholderPresentedTimebase; // @synthesize placeholderPresentedTimebase=_placeholderPresentedTimebase;
@property(retain, nonatomic) id timebaseDiscontinuityObserver; // @synthesize timebaseDiscontinuityObserver=_timebaseDiscontinuityObserver;
@property(nonatomic) BOOL shouldEnableRecordingAfterPlaybackStops; // @synthesize shouldEnableRecordingAfterPlaybackStops=_shouldEnableRecordingAfterPlaybackStops;
@property(retain, nonatomic) NSTimer *audioLevelObserverTimer; // @synthesize audioLevelObserverTimer=_audioLevelObserverTimer;
@property(nonatomic) unsigned long long disableRecordingCount; // @synthesize disableRecordingCount=_disableRecordingCount;
@property(nonatomic) double recordingReplacementStartTime; // @synthesize recordingReplacementStartTime=_recordingReplacementStartTime;
@property(nonatomic) struct __CFRunLoop *recordingStoppedWaitRunLoop; // @synthesize recordingStoppedWaitRunLoop=_recordingStoppedWaitRunLoop;
@property(nonatomic) struct __CFRunLoopSource *recordingStoppedSignalSource; // @synthesize recordingStoppedSignalSource=_recordingStoppedSignalSource;
@property(nonatomic, getter=isTrimmingMovieSegment) BOOL trimmingMovieSegment; // @synthesize trimmingMovieSegment=_trimmingMovieSegment;
@property(retain, nonatomic) KNRecordingSoundtrackAssetLoader *soundtrackAssetLoader; // @synthesize soundtrackAssetLoader=_soundtrackAssetLoader;
@property(retain, nonatomic) KNRecordingPlaybackController *recordingPlaybackController; // @synthesize recordingPlaybackController=_recordingPlaybackController;
@property(retain, nonatomic) KNRecordingController *recordingController; // @synthesize recordingController=_recordingController;
@property(nonatomic) __weak id <KNRecordingSessionControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) id <KNRecordingSeekingLayerHost> seekingLayerHost; // @synthesize seekingLayerHost=_seekingLayerHost;
@property(retain, nonatomic) KNPlaybackThumbnailGenerator *thumbnailGenerator; // @synthesize thumbnailGenerator=_thumbnailGenerator;
@property(retain, nonatomic) NSObject<KNLaserOverlayController> *laserOverlayController; // @synthesize laserOverlayController=_laserOverlayController;
@property(retain, nonatomic) KNPlaybackController *playbackController; // @synthesize playbackController=_playbackController;
@property(nonatomic, getter=isLoadingSoundtrackAssets) BOOL loadingSoundtrackAssets; // @synthesize loadingSoundtrackAssets=_loadingSoundtrackAssets;
@property(nonatomic, getter=isSeeking) BOOL seeking; // @synthesize seeking=_seeking;
@property(nonatomic, getter=isCurrentTimeAtBeginning) BOOL currentTimeAtBeginning; // @synthesize currentTimeAtBeginning=_currentTimeAtBeginning;
@property(nonatomic, getter=isStartingRecording) BOOL startingRecording; // @synthesize startingRecording=_startingRecording;
@property(retain, nonatomic) KNRecording *currentRecording; // @synthesize currentRecording=_currentRecording;
@property(nonatomic, getter=isRunning) BOOL running; // @synthesize running=_running;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)processChanges:(id)arg1 forChangeSource:(id)arg2;
@property(readonly, nonatomic) unsigned long long currentSlideNumber;
- (void)p_updatePlaceholderPresentedTimebase;
@property(readonly, nonatomic) NSObject<KNTimebase> *presentedTimebase;
- (void)p_deleteRecording;
- (void)deleteRecording:(id)arg1;
- (void)p_tearDownPlayback;
- (void)p_setupPlaybackIfNeeded;
- (void)p_updateCurrentTimeObserver:(id)arg1;
@property(readonly, nonatomic) KNRecordingScrubberSliderMarkerValueArray *slideMarkerValueArray;
- (void)p_updateCurrentTimeObservers;
- (void)removeCurrentTimeObserver:(id)arg1;
- (void)addCurrentTimeObserver:(id)arg1;
- (void)endSeeking;
- (void)seekToCurrentTimeFraction:(double)arg1;
- (void)beginSeeking;
- (void)p_updateIsCurrentTimeAtBeginning;
- (void)gotoBeginning:(id)arg1;
- (void)togglePlaying:(id)arg1;
@property(readonly, nonatomic, getter=isPlaying) BOOL playing;
@property(readonly, nonatomic, getter=isPlaybackActive) BOOL playbackActive;
- (void)p_updateAudioLevelObservers:(id)arg1;
- (void)p_updateAudioLevelObserverTimer;
- (void)removeAudioLevelObserver:(id)arg1;
- (void)addAudioLevelObserver:(id)arg1;
@property(nonatomic, getter=isAudioRecordingEnabled) BOOL audioRecordingEnabled;
- (void)p_enableRecording;
- (void)p_disableRecording;
- (void)toggleRecordingPaused:(id)arg1;
@property(readonly, nonatomic, getter=isRecordingPaused) BOOL recordingPaused;
- (void)p_signalRecordingStoppedIfNeeded;
- (void)p_replaceRecordingAfterRecordingReplacementStartTimeWithRecording:(id)arg1 trimmedMovieSegment:(id)arg2;
- (void)p_startRecordingReplacingSomeOfExistingRecording:(BOOL)arg1;
- (void)p_startRecordingIfAllowedReplacingSomeOfExistingRecording:(BOOL)arg1;
- (void)toggleRecording:(id)arg1;
@property(readonly, nonatomic, getter=isStoppingRecording) BOOL stoppingRecording;
@property(readonly, nonatomic) BOOL isRecording;
- (void)p_updateCurrentRecording;
- (void)p_updatePlaybackControllerPlayMode;
- (void)stopRunning;
- (void)startRunningWithPlaybackController:(id)arg1 laserOverlayController:(id)arg2 thumbnailGenerator:(id)arg3 seekingLayerHost:(id)arg4 delegate:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

