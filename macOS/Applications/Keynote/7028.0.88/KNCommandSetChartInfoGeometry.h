//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <TSDrawables/TSDInfoGeometryCommand.h>

#import "GSSPAutoEncodable-Protocol.h"

@class TSCHChartDrawableInfo, TSCHChartInfo;

@interface KNCommandSetChartInfoGeometry : TSDInfoGeometryCommand <GSSPAutoEncodable>
{
    struct CGSize _previousLegendSize;
    struct CGPoint _previousLegendOffset;
    struct CGSize _adjustedLegendSize;
    struct CGPoint _adjustedLegendOffset;
}

- (id)otherSerializationClasses;
@property(readonly, nonatomic) TSCHChartInfo *p_chartInfo;
@property(readonly, nonatomic) TSCHChartDrawableInfo *p_chartDrawableInfo;
- (void)saveToArchiver:(id)arg1;
-     // Error parsing type: v32@0:8^{ChartInfoGeometryCommandArchive=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}^{InfoGeometryCommandArchive}^{Point}^{Size}^{Point}^{Size}}16@24, name: saveToArchive:archiver:
-     // Error parsing type: v32@0:8r^{ChartInfoGeometryCommandArchive=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}^{InfoGeometryCommandArchive}^{Point}^{Size}^{Point}^{Size}}16@24, name: loadFromArchive:unarchiver:
- (void)loadFromUnarchiver:(id)arg1;
- (id)makeInverse;
- (void)undo;
- (void)applyGeometryToInfoForCommit:(id)arg1;
- (void)didInitFromSOS;
- (id)initWithChartDrawableInfo:(id)arg1 newGeometry:(id)arg2 matchObjectPlaceholderGeometry:(BOOL)arg3 context:(id)arg4;
- (id)initWithChartDrawableInfo:(id)arg1 newGeometry:(id)arg2 matchObjectPlaceholderGeometry:(BOOL)arg3 adjustedLegendSize:(struct CGSize)arg4 adjustedLegendOffset:(struct CGPoint)arg5 context:(id)arg6;
- (id)initWithInfo:(id)arg1 newGeometry:(id)arg2 matchObjectPlaceholderGeometry:(BOOL)arg3 context:(id)arg4;
- (void)populateGSSPCmdSetChartInfoGeometry:(id)arg1 withEncodeContext:(struct GSSPEncodeConversionContext *)arg2;
- (void)populateGSSPMessageInstance:(id)arg1 withContext:(struct GSSPEncodeConversionContext *)arg2;
- (id)newGsspMessageInstance;
- (id)gsspMessageInstance;
- (int)gsspSharingFlag;
- (id)initWithGSSPMessage:(id)arg1 andContext:(struct GSSPDecodeConversionContext *)arg2;

@end

