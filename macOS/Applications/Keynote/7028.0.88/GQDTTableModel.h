//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GQDNameMappable-Protocol.h"
#import "ICExportable-Protocol.h"

@class GQDTTable, NSMutableArray, NSString;
@protocol ICETCellProvider;

@interface GQDTTableModel : NSObject <ICExportable, GQDNameMappable>
{
    unsigned short mColumnCount;
    unsigned short mRowCount;
    struct __CFString *mName;
    BOOL mNameVisible;
    struct __CFArray *mColumnWidths;
    struct __CFArray *mColumnPreferredWidths;
    struct __CFArray *mColumnFittingWidths;
    struct __CFArray *mColumnStyles;
    struct __CFArray *mRowHeights;
    struct __CFArray *mRowPreferredHeights;
    struct __CFArray *mRowFittingHeights;
    struct __CFArray *mRowStyles;
    struct __CFArray *mColumnVisibilities;
    struct __CFArray *mRowVisibilities;
    unsigned short mHeaderRowCount;
    unsigned short mHeaderColumnCount;
    unsigned short mFooterRowCount;
    BOOL mHeaderRowsFrozen;
    BOOL mHeaderColumnsFrozen;
    struct __CFArray *mCells;
    struct __CFArray *mColumnGroupDisplayTypes;
    BOOL mGroupingOrderEnabled;
    struct __CFArray *mGroupingOrderList;
    long long mNumGroupLevels;
    NSMutableArray *mGroupingCellList;
    struct __CFString *mTableID;
    struct __CFArray *mVerticalGridLineStyles;
    struct __CFArray *mHorizontalGridLineStyles;
    struct __CFArray *mRows;
    struct __CFArray *mColumns;
    id <ICETCellProvider> mCellProvider;
    struct __CFArray *mCellAnnotations;
    struct __CFDictionary *mCellCommentMapping;
    GQDTTable *mTableInfo;
    struct __CFDictionary *mErrorWarningMetadata;
    BOOL mHasCellComments;
    BOOL mHasFiltersetEnabled;
    unsigned long long mFiltersetType;
    unsigned long long mFilterspecCount;
    struct __CFArray *mFilterspecs;
    struct __CFArray *mSortSpecs;
}

+ (const struct StateSpec *)stateForReading;
+ (id)defaultLayoutStyleWithExporter:(id)arg1;
+ (id)defaultParagraphStyleWithExporter:(id)arg1;
- (id)groupingCellList;
- (struct __CFArray *)groupingOrderList;
- (void)setHasGroupOrderEnabled:(BOOL)arg1;
- (BOOL)hasGroupingOrderEnabled;
- (void)setNumGroupLevels:(long long)arg1;
- (long long)numGroupLevels;
- (unsigned short)firstVisibleColumn;
- (BOOL)hasGroupDisplayType:(unsigned short)arg1 level:(unsigned short)arg2 displayType:(int *)arg3 isTypeVisible:(char *)arg4;
- (int)typeOfVectorAlongGridline:(unsigned short)arg1 offset:(unsigned short)arg2 length:(unsigned short)arg3 vertical:(BOOL)arg4;
- (void)setHeaderColumnsFrozen:(BOOL)arg1;
- (void)setHeaderRowsFrozen:(BOOL)arg1;
- (BOOL)headerColumnsFrozen;
- (BOOL)headerRowsFrozen;
- (unsigned short)footerRowCount;
- (unsigned short)headerColumnCount;
- (unsigned short)headerRowCount;
- (struct __CFArray *)cells;
- (id)cellAt:(unsigned short)arg1;
- (int)visibilityForRow:(unsigned short)arg1;
- (int)visibilityForColumn:(unsigned short)arg1;
- (id)styleForColumn:(unsigned short)arg1;
- (id)styleForRow:(unsigned short)arg1;
- (float)heightForRow:(unsigned short)arg1;
- (float)fittingHeightForRow:(unsigned short)arg1;
- (float)preferredHeightForRow:(unsigned short)arg1;
- (float)preferredWidthForColumn:(unsigned short)arg1;
- (float)widthForColumn:(unsigned short)arg1;
- (BOOL)isNameVisible;
- (struct __CFString *)tableID;
- (struct __CFString *)name;
- (unsigned short)rowCount;
- (unsigned short)columnCount;
- (void)dealloc;
- (void)addGroupingCell:(id)arg1;
- (void)setGroupingOrderList:(struct __CFArray *)arg1;
- (void)setCells:(struct __CFArray *)arg1;
- (int)addGroupLevelsFrom:(struct _xmlTextReader *)arg1;
- (int)addRowInfoFrom:(struct _xmlTextReader *)arg1 processor:(id)arg2;
- (int)addColumnInfoFrom:(struct _xmlTextReader *)arg1 processor:(id)arg2;
- (int)addStyleFrom:(struct _xmlTextReader *)arg1 processor:(id)arg2 toArray:(struct __CFArray *)arg3;
- (void)readAttribute:(const char *)arg1 fromReader:(struct _xmlTextReader *)arg2 toArray:(struct __CFArray *)arg3;
- (int)readAttributesForGroupingOrder:(struct _xmlTextReader *)arg1;
- (int)readAttributesForGrid:(struct _xmlTextReader *)arg1;
- (int)readAttributesForModel:(struct _xmlTextReader *)arg1;
- (struct __CFDictionary *)cellComments;
- (BOOL)hasCellComments;
- (struct __CFDictionary *)errorWarningMetadata;
- (id)tableInfo;
- (void)setTableInfo:(id)arg1;
- (id)cellProvider;
- (void)setCellProvider:(id)arg1;
- (BOOL)hasFiltersetEnabled;
- (void)setFiltersetEnabled:(BOOL)arg1;
- (unsigned long long)filtersetType;
- (void)setFiltersetType:(unsigned long long)arg1;
- (unsigned short)filterspecCount;
- (void)setFilterspecCount:(unsigned short)arg1;
- (struct __CFArray *)sortspecs;
- (void)setSortspecs:(struct __CFArray *)arg1;
- (struct __CFArray *)filterspecs;
- (void)setFilterspecs:(struct __CFArray *)arg1;
- (struct __CFArray *)columns;
- (void)setColumns:(struct __CFArray *)arg1;
- (struct __CFArray *)rows;
- (void)setRows:(struct __CFArray *)arg1;
- (struct __CFArray *)horizontalGridLineStyles;
- (void)setHorizontalGridLineStyles:(struct __CFArray *)arg1;
- (struct __CFArray *)verticalGridLineStyles;
- (void)setVerticalGridLineStyles:(struct __CFArray *)arg1;
- (void)setFooterRowCount:(unsigned short)arg1;
- (void)setHeaderColumnCount:(unsigned short)arg1;
- (void)setHeaderRowCount:(unsigned short)arg1;
- (struct __CFArray *)rowVisibilities;
- (void)setRowVisibilities:(struct __CFArray *)arg1;
- (struct __CFArray *)columnVisibilities;
- (void)setColumnVisibilities:(struct __CFArray *)arg1;
- (void)setIsNameVisible:(BOOL)arg1;
- (void)setName:(struct __CFString *)arg1;
- (void)setTableID:(struct __CFString *)arg1;
- (id)initWithTSTTableInfo:(id)arg1 withInfo:(id)arg2 exporter:(id)arg3;
- (void)p_writeFilters:(id)arg1 exporter:(id)arg2;
- (void)p_writeCellAnnotationForTableInfo:(id)arg1 cell:(id)arg2 cellID:(struct TSUCellCoord)arg3 exporter:(id)arg4;
- (void)p_writeCellCommentForCell:(id)arg1 cellID:(struct TSUCellCoord)arg2 exporter:(id)arg3;
- (void)p_writeTableCells:(id)arg1 exporter:(id)arg2;
- (void)p_writeTableGridLinesWithLayout:(id)arg1 tableInfo:(id)arg2 exporter:(id)arg3;
- (void)p_writeColumnGridStyles:(id)arg1 tableInfo:(id)arg2 exporter:(id)arg3;
- (void)p_writeRowGridStyles:(id)arg1 tableInfo:(id)arg2 exporter:(id)arg3;
- (id)p_newGridStyleWithVectorType:(int)arg1 start:(int)arg2 stop:(int)arg3 tableInfo:(id)arg4 stroke:(id)arg5 exporter:(id)arg6;
- (void)p_freeBaseVectorStyles;
- (id)p_baseExportStyleForVectorType:(int)arg1;
- (void)p_setupBaseVectorStyles:(id)arg1 tableInfo:(id)arg2;
- (int)p_exportRowVectorTypeForColumnIndex:(int)arg1 tableInfo:(id)arg2 rowIndex:(int)arg3;
- (int)p_exportColumnVectorTypeForRowIndex:(int)arg1 tableInfo:(id)arg2 colIndex:(int)arg3;
- (id)p_newSingleExportCell:(id)arg1 withStyle:(id)arg2 needsNewStyle:(BOOL)arg3 tableInfo:(id)arg4 cellID:(struct TSUCellCoord)arg5 styleName:(id)arg6 exporter:(id)arg7;
- (void)p_setupGlobalTableParameters:(id)arg1 exporter:(id)arg2;
- (BOOL)p_noRowsMatchFilter:(id)arg1;
- (void)p_writeDefaultCellFormats:(struct GQDSMap *)arg1 exporter:(id)arg2;
- (BOOL)encodeWithExporter:(id)arg1;
- (void)encodeAttributesWithExporter:(id)arg1;
- (char *)elementName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

