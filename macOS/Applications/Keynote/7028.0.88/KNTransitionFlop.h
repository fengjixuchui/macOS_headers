//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "KNAnimationEffect.h"

#import "KNAnimationPluginArchiving-Protocol.h"
#import "KNTransitionMetalAnimator-Protocol.h"
#import "KNTransitionOpenGLAnimator-Protocol.h"

@class NSArray, NSString, TSDGLMotionBlurEffect, TSDGLShader, TSDMetalMotionBlurEffect, TSDMetalShader;
@protocol TSDGLDataBuffer, TSDMTLDataBuffer;

@interface KNTransitionFlop : KNAnimationEffect <KNTransitionOpenGLAnimator, KNTransitionMetalAnimator, KNAnimationPluginArchiving>
{
    long long _numPoints;
    NSArray *_colorBufferAttributes;
    NSArray *_shadowBufferAttributes;
    unsigned long long _colorPositionAttributeIndex;
    unsigned long long _colorTexCoordAttributeIndex;
    unsigned long long _colorNormalAttributeIndex;
    unsigned long long _colorPrevPositionAttributeIndex;
    unsigned long long _shadowPositionAttributeIndex;
    unsigned long long _shadowAlphaAttributeIndex;
    TSDGLShader *_flopShader;
    id <TSDGLDataBuffer> _glDataBuffer;
    TSDGLShader *_shadowShader;
    id <TSDGLDataBuffer> _glShadowDataBuffer;
    id <TSDGLDataBuffer> _glQuadDataBuffer;
    id <TSDGLDataBuffer> _glNextQuadDataBuffer;
    TSDGLShader *_quadShader;
    TSDGLMotionBlurEffect *_motionBlurGLEffect;
    TSDMetalMotionBlurEffect *_motionBlurMetalEffect;
    TSDMetalShader *_quadMetalShader;
    id <TSDMTLDataBuffer> _metalOutgoingQuadDataBuffer;
    id <TSDMTLDataBuffer> _metalIncomingQuadDataBuffer;
    TSDMetalShader *_colorMetalShader;
    id <TSDMTLDataBuffer> _metalColorDataBuffer;
    TSDMetalShader *_shadowMetalShader;
    id <TSDMTLDataBuffer> _metalShadowDataBuffer;
    // Error parsing type: {?="MVPMatrix"{?="columns"[4]}}, name: _shadowVertexInput
    // Error parsing type: {?="MVPMatrix"{?="columns"[4]}}, name: _quadVertexInput
    // Error parsing type: {?="MVPMatrix"{?="columns"[4]}"TextureMatrix"{?="columns"[3]}"VelocityScale""FlipNormals"f}, name: _colorMetalVertexInput
    // Error parsing type: {?="MVPMatrix"{?="columns"[4]}"TextureMatrix"{?="columns"[3]}"VelocityScale""FlipNormals"f}, name: _colorMetalVertexInputFlipped
    double _lastUpdatePercent;
    float _shadowUmbra[3];
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(long long)arg4 isToClassic:(BOOL)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 oldAnimationName:(id)arg3 warning:(id *)arg4 type:(long long)arg5 isFromClassic:(BOOL)arg6 version:(unsigned long long)arg7;
+ (id)thumbnailImageNameForType:(long long)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(long long)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(long long)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (long long)animationCategory;
+ (id)animationName;
+ (long long)rendererTypeForAnimationContext:(id)arg1;
- (void).cxx_destruct;
- (void)renderFrameWithContext:(id)arg1;
- (void)p_metalRenderFrameWithContext:(id)arg1;
- (void)p_glRenderFrameWithContext:(id)arg1;
- (void)p_drawFlopVertical:(BOOL)arg1 encoder:(id)arg2 metalTexture:(id)arg3 oldMetalTexture:(id)arg4 isUpdating:(BOOL)arg5;
- (void)p_drawFlopVertical:(BOOL)arg1 texture:(id)arg2 oldTexture:(id)arg3;
- (void)animationDidEndWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)p_metalAnimationWillBeginWithContext:(id)arg1;
- (void)p_glAnimationWillBeginWithContext:(id)arg1;
- (void)updateFlopAndShadowMeshesWithTexture:(id)arg1 context:(id)arg2 flopBuffer:(id)arg3 shadowBuffer:(id)arg4 isUpdating:(BOOL)arg5;
- (void)_updateShadowWithTexture:(id)arg1 percent:(double)arg2 direction:(unsigned long long)arg3 shadowBuffer:(id)arg4 currentBuffer:(unsigned long long)arg5;
- (void)_updateFlop:(id)arg1 withContext:(id)arg2 dataBuffer:(id)arg3 isUpdating:(BOOL)arg4;
- (void)createArrays:(id)arg1 context:(id)arg2 device:(id)arg3;
- (void)p_teardown;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

