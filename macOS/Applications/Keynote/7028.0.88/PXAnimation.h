//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface PXAnimation : NSObject
{
}

+ (void)writeAnimationFromSlideBase:(id)arg1 to:(id)arg2 state:(id)arg3;
+ (void)readAnimationFromTimingXmlNode:(struct _xmlNode *)arg1 tgtAnimation:(id)arg2 drawingState:(id)arg3;
+ (id)readGraphicBuild:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)readOleChartBuild:(struct _xmlNode *)arg1;
+ (int)readChartBuildType:(id)arg1;
+ (id)readParagraphBuild:(struct _xmlNode *)arg1;
+ (void)readAnimSequentialElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readAnimParallelElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readCommonBehaviorData:(struct _xmlNode *)arg1 tgtCommonBehaviorData:(id)arg2 drawingState:(id)arg3;
+ (void)readAnimRotationElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readAnimSetElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (id)readAnimVariant:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (void)readAnimCmdElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readAnimVideoElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readAnimAudioElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readCommonMediaNodeData:(struct _xmlNode *)arg1 commonMediaData:(id)arg2 drawingState:(id)arg3;
+ (void)readAnimScaleElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readAnimMotionElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readPointFromNode:(struct _xmlNode *)arg1 tgtPoint:(struct CGPoint *)arg2;
+ (void)readAnimEffectElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readAnimElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readChartType:(id)arg1 oleChartTarget:(id)arg2;
+ (void)readChartBuildStep:(id)arg1 chartTarget:(id)arg2;
+ (id)newShapeTarget:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)newTarget:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (void)readTriggerEvent:(id)arg1 timeCondition:(id)arg2;
+ (void)readCondition:(struct _xmlNode *)arg1 timeCondition:(id)arg2 drawingState:(id)arg3;
+ (void)readStConditionList:(struct _xmlNode *)arg1 commonTimeNodeData:(id)arg2 drawingState:(id)arg3;
+ (void)readConditionList:(struct _xmlNode *)arg1 arrayOfConditions:(id)arg2 drawingState:(id)arg3;
+ (void)readIterate:(struct _xmlNode *)arg1 commonTimeNodeData:(id)arg2 drawingState:(id)arg3;
+ (void)readChildTimeNodeList:(struct _xmlNode *)arg1 commonTimeNodeData:(id)arg2 drawingState:(id)arg3;
+ (void)readRestartType:(id)arg1 commonTimeNodeData:(id)arg2;
+ (void)readPresetClass:(id)arg1 commonTimeNodeData:(id)arg2;
+ (void)readTimeNodeType:(id)arg1 commonTimeNodeData:(id)arg2;
+ (void)readCommonTimeNodeData:(struct _xmlNode *)arg1 commonTimeNodeData:(id)arg2 drawingState:(id)arg3;
+ (BOOL)readOptionalStringAttribute:(id)arg1 fromNode:(struct _xmlNode *)arg2 attributeMap:(const struct attributeMapEntry *)arg3 attributeCount:(int)arg4 toPDDomValue:(unsigned long long *)arg5;
+ (int)presetSubTypeFromAnimType:(int)arg1 direction:(int)arg2;
+ (void)writeVariant:(id)arg1 state:(id)arg2;
+ (void)writeBuildList:(id)arg1 state:(id)arg2;
+ (void)writeBuild:(id)arg1 buildKey:(id)arg2 state:(id)arg3;
+ (void)writeChartBuild:(id)arg1 buildKey:(id)arg2 state:(id)arg3;
+ (void)writeParagraphBuild:(id)arg1 buildKey:(id)arg2 state:(id)arg3;
+ (void)writeBuildCommonAttributes:(id)arg1 state:(id)arg2;
+ (void)writeCommonTimeNodeAttributes:(id)arg1 state:(id)arg2;
+ (void)writeTimeList:(id)arg1 state:(id)arg2;
+ (void)writeCommonTimeNodeData:(id)arg1 state:(id)arg2;
+ (void)writeTimeNodeUnion:(id)arg1 state:(id)arg2;
+ (void)writeAudioNode:(id)arg1 state:(id)arg2;
+ (void)writeVideoNode:(id)arg1 state:(id)arg2;
+ (void)writeCommonMediaNodeData:(id)arg1 state:(id)arg2;
+ (void)writeTimeBehavior:(id)arg1 attributeName:(id)arg2 timeAnimateValues:(id)arg3 state:(id)arg4;
+ (void)writeTimeAnimateValue:(id)arg1 state:(id)arg2;
+ (void)writeColorBehavior:(id)arg1 attributeName:(id)arg2 state:(id)arg3;
+ (void)writeEffectBehavior:(id)arg1 attributeName:(id)arg2 filterName:(id)arg3 state:(id)arg4;
+ (void)writeRotateBehavior:(id)arg1 attributeName:(id)arg2 state:(id)arg3;
+ (void)writeMotionBehavior:(id)arg1 attributeArray:(id)arg2 state:(id)arg3;
+ (void)writeScaleBehavior:(id)arg1 attributeName:(id)arg2 state:(id)arg3;
+ (void)writeBaseScaleBehaviorElements:(id)arg1 state:(id)arg2;
+ (void)writeElementName:(id)arg1 withPoint:(struct CGPoint)arg2 toFile:(id)arg3;
+ (void)writeCmdBehavior:(id)arg1 attributeName:(id)arg2 state:(id)arg3;
+ (void)writeSetBehavior:(id)arg1 variant:(id)arg2 attributeName:(id)arg3 state:(id)arg4;
+ (void)writeCommonBehaviorData:(id)arg1 attributeName:(id)arg2 state:(id)arg3;
+ (void)writeCommonBehaviorData:(id)arg1 attributeArray:(id)arg2 state:(id)arg3;
+ (void)writeParallelTimeNode:(id)arg1 state:(id)arg2;
+ (void)writeParallelTimeNodeBuildInfo:(id)arg1 state:(id)arg2;
+ (void)writeEmphasisBuildInfo:(id)arg1 state:(id)arg2;
+ (void)writeEntranceExitBuildInfo:(id)arg1 state:(id)arg2;
+ (void)writeTeeterEmphasisBuildInfo:(id)arg1 state:(id)arg2;
+ (void)writeBlinkEmphasisBuildInfo:(id)arg1 state:(id)arg2;
+ (void)writePulseEmphasisBuildInfo:(id)arg1 state:(id)arg2;
+ (void)writePathBuildInfo:(id)arg1 state:(id)arg2;
+ (void)writeGrowShrinkEmphasisBuildInfo:(id)arg1 state:(id)arg2;
+ (void)writeSpinEmphasisBuildInfo:(id)arg1 state:(id)arg2;
+ (void)writeTransparencyEmphasisBuildInfo:(id)arg1 state:(id)arg2;
+ (void)writeMediaCall:(id)arg1 state:(id)arg2;
+ (void)writeBounceBuildInfo:(id)arg1 state:(id)arg2;
+ (void)writeZoomBuildInfo:(id)arg1 state:(id)arg2;
+ (void)writeStretchCollapseBuildInfo:(id)arg1 state:(id)arg2;
+ (id)formulaForStretchCollapseDirection:(long long)arg1 isEntrance:(BOOL)arg2 tavListIndex:(long long)arg3;
+ (void)writeFlyBuildInfo:(id)arg1 state:(id)arg2;
+ (id)formulaForFlyDirection:(long long)arg1 isEntrance:(BOOL)arg2 tavListIndex:(long long)arg3;
+ (id)formulaForDirection:(long long)arg1 tavListIndex:(long long)arg2 directionMap:(id)arg3;
+ (void)writeSwivelBuildInfo:(id)arg1 state:(id)arg2;
+ (void)writeSpiralBuildInfo:(id)arg1 state:(id)arg2;
+ (void)addTimeValueToArray:(id)arg1 formula:(id)arg2 percent:(double)arg3 doubleValue:(double)arg4;
+ (void)addTimeValueToArray:(id)arg1 formula:(id)arg2 percent:(double)arg3 variant:(id)arg4;
+ (id)newPXTimeAnimateValue:(id)arg1 percent:(double)arg2 doubleValue:(double)arg3;
+ (id)newPXTimeAnimateValue:(id)arg1 percent:(double)arg2 variant:(id)arg3;
+ (id)newPDAnimateTimeBehavior:(id)arg1 duration:(double)arg2;
+ (id)newPDAnimateTimeBehavior:(id)arg1 duration:(double)arg2 hasFillTypeHold:(BOOL)arg3;
+ (void)writeBuildInfoWithSetAndEffectBehavior:(id)arg1 state:(id)arg2;
+ (id)getFilterName:(int)arg1 presetSubType:(int)arg2;
+ (id)stringFromDirectionType:(int)arg1;
+ (id)filterNameForAnimType:(int)arg1;
+ (void)writeSetBehavior:(id)arg1 isVisible:(BOOL)arg2 target:(id)arg3 state:(id)arg4;
+ (void)writeSetBehavior:(id)arg1 isVisible:(BOOL)arg2 target:(id)arg3 startTimeConditions:(id)arg4 state:(id)arg5;
+ (void)writeSequentialTimeNode:(id)arg1 state:(id)arg2;
+ (void)writeIterate:(id)arg1 state:(id)arg2;
+ (void)writeTimeCondition:(id)arg1 name:(id)arg2 state:(id)arg3;
+ (void)writeTimeCondition:(id)arg1 state:(id)arg2;
+ (void)writeRunTimeNode:(id)arg1 state:(id)arg2;
+ (void)writeTarget:(id)arg1 state:(id)arg2;
+ (void)writeAttribute:(id)arg1 withPDDomValue:(int)arg2 attributeMap:(const struct attributeMapEntry *)arg3 attributeCount:(int)arg4 toFile:(id)arg5;

@end

