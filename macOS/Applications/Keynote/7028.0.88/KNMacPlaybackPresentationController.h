//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "KNOverlaySessionControllerDelegate-Protocol.h"
#import "KNPlaybackControllerDelegate-Protocol.h"
#import "KNRecordingSessionControllerDelegate-Protocol.h"
#import "KNShowcastPresentationControllerDelegate-Protocol.h"
#import "NSPopoverDelegate-Protocol.h"
#import "NSWindowDelegate-Protocol.h"
#import "TSDCanvasDelegate-Protocol.h"

@class KNDocumentRoot, KNMacAnimatedPlaybackViewController, KNMacOverlayView, KNMacPlaybackContainerViewController, KNMacPlaybackPresentationConfigurationEditor, KNMacPlaybackPresentationWindowManager, KNMacPlaybackScreenConfigurationController, KNMacPlaybackScreenConfigurationPickerViewController, KNMacPlaybackTouchBarController, KNMacPlaybackWindow, KNMacPresenterDisplayConfigurationSet, KNMacPresenterDisplayConfigurationSetController, KNMacPresenterDisplayTransientNameController, KNMacPresenterDisplayViewController, KNOverlaySessionController, KNPlaybackController, KNPresenterDisplayClockController, KNPresenterDisplayTimerController, KNRecordingPlaybackController, KNRecordingSessionController, KNShowcastPresentationController, KNSlideNode, NSArray, NSDate, NSError, NSPopover, NSSet, NSString, NSTimer, NSTouchBar, NSTrackingArea, NSUUID;
@protocol KNMacPlaybackSlideNavigatorContainer, NSObject, TSDCanvasProxyDelegate;

@interface KNMacPlaybackPresentationController : NSObject <KNPlaybackControllerDelegate, KNOverlaySessionControllerDelegate, KNRecordingSessionControllerDelegate, KNShowcastPresentationControllerDelegate, TSDCanvasDelegate, NSWindowDelegate, NSPopoverDelegate>
{
    CDUnknownBlockType _completionHandler;
    KNMacAnimatedPlaybackViewController *_playbackViewController;
    KNShowcastPresentationController *_showcastPresentationController;
    NSArray *_showcastLoadingViewControllers;
    KNRecordingSessionController *_recordingSessionController;
    KNMacPlaybackScreenConfigurationPickerViewController *_configurationPickerViewController;
    KNMacPlaybackScreenConfigurationController *_configurationController;
    NSSet *_resumeOnActivationWindows;
    KNMacPlaybackPresentationConfigurationEditor *_playbackConfigurationEditor;
    KNPresenterDisplayClockController *_clockController;
    KNPresenterDisplayTimerController *_timerController;
    unsigned int _preventUserIdleDisplaySleepAssertion;
    id <NSObject> _processInfoActivity;
    NSTrackingArea *_idleTimerResetTrackingArea;
    NSTimer *_idleTimer;
    id _idleTimerResetEventMonitor;
    KNOverlaySessionController *_overlaySessionController;
    KNMacOverlayView *_overlayView;
    KNMacPlaybackTouchBarController *_touchBarController;
    NSPopover *_configurationPopover;
    BOOL _isUpdatingPlaybackAndPresenterWindows;
    BOOL _isAppBecomingActive;
    BOOL _needsUpdatePlaybackAndPresenterWindowsAfterResumePresentation;
    BOOL _didPauseRecordingPlaybackOnSuspend;
    BOOL _isStoppingPresentation;
    BOOL _isStoppingPresentationForOtherMainWindow;
    BOOL _currentSlideHasChangedSinceShowStarted;
    BOOL _showcastConnectionLost;
    BOOL _showingModalPanel;
    BOOL _isPlaybackPrepared;
    BOOL _didSuspendCollaboration;
    BOOL _isPresentationSuspended;
    BOOL _playbackShroudShown;
    BOOL _playbackDidEndInFullScreenWindow;
    BOOL _isExitingFromFullScreenWindowedPlayback;
    BOOL _didOrderDocumentWindowsOut;
    CDUnknownBlockType _presentationCompletionBlock;
    BOOL _shouldSkipPlaybackControllerEndShowCheck;
    BOOL _isOnlyAllowingPresenterDisplayCustomization;
    BOOL _p_showcastLoading;
    BOOL _p_applicationHidden;
    KNDocumentRoot *_documentRoot;
    KNPlaybackController *_playbackController;
    long long _presentationType;
    NSArray *_presenterDisplayViewControllers;
    KNMacPresenterDisplayViewController *_primaryPresenterDisplayViewController;
    NSDate *_timerElapsedTimeStartDate;
    KNMacPlaybackContainerViewController *_p_playbackContainerViewController;
    KNRecordingPlaybackController *_p_recordingPlaybackController;
    KNMacPlaybackPresentationWindowManager *_p_playbackWindowManager;
    NSError *_p_showcastLoadingError;
    NSUUID *_p_showcastLoadingSlideNodeUUID;
    unsigned long long _p_showcastLoadingEventIndex;
    KNMacPresenterDisplayConfigurationSet *_activeConfigurationSet;
    KNMacPresenterDisplayConfigurationSetController *_configurationSetController;
    KNMacPresenterDisplayTransientNameController *_transientNameWindowController;
}

+ (id)keyPathsForValuesAffectingSlideNavigatorContainer;
+ (id)keyPathsForValuesAffectingCanInteractivelyStopPresentation;
+ (id)keyPathsForValuesAffectingCanInteractivelyChangeSlides;
+ (id)keyPathsForValuesAffectingNavigationInteractive;
+ (unsigned long long)possiblePresenterDisplayCount;
+ (void)registerUserDefaults;
+ (void)initialize;
- (void).cxx_destruct;
@property(retain, nonatomic) KNMacPresenterDisplayTransientNameController *transientNameWindowController; // @synthesize transientNameWindowController=_transientNameWindowController;
@property(retain, nonatomic) KNMacPresenterDisplayConfigurationSetController *configurationSetController; // @synthesize configurationSetController=_configurationSetController;
@property(retain, nonatomic) KNMacPresenterDisplayConfigurationSet *activeConfigurationSet; // @synthesize activeConfigurationSet=_activeConfigurationSet;
@property(nonatomic) unsigned long long p_showcastLoadingEventIndex; // @synthesize p_showcastLoadingEventIndex=_p_showcastLoadingEventIndex;
@property(copy, nonatomic) NSUUID *p_showcastLoadingSlideNodeUUID; // @synthesize p_showcastLoadingSlideNodeUUID=_p_showcastLoadingSlideNodeUUID;
@property(copy, nonatomic) NSError *p_showcastLoadingError; // @synthesize p_showcastLoadingError=_p_showcastLoadingError;
@property(nonatomic) BOOL p_applicationHidden; // @synthesize p_applicationHidden=_p_applicationHidden;
@property(nonatomic) BOOL p_showcastLoading; // @synthesize p_showcastLoading=_p_showcastLoading;
@property(retain, nonatomic) KNMacPlaybackPresentationWindowManager *p_playbackWindowManager; // @synthesize p_playbackWindowManager=_p_playbackWindowManager;
@property(retain, nonatomic) KNRecordingPlaybackController *p_recordingPlaybackController; // @synthesize p_recordingPlaybackController=_p_recordingPlaybackController;
@property(retain, nonatomic) KNMacPlaybackContainerViewController *p_playbackContainerViewController; // @synthesize p_playbackContainerViewController=_p_playbackContainerViewController;
@property(readonly, nonatomic) NSDate *timerElapsedTimeStartDate; // @synthesize timerElapsedTimeStartDate=_timerElapsedTimeStartDate;
@property(retain, nonatomic) KNMacPresenterDisplayViewController *primaryPresenterDisplayViewController; // @synthesize primaryPresenterDisplayViewController=_primaryPresenterDisplayViewController;
@property(copy, nonatomic) NSArray *presenterDisplayViewControllers; // @synthesize presenterDisplayViewControllers=_presenterDisplayViewControllers;
@property(readonly, nonatomic) BOOL isOnlyAllowingPresenterDisplayCustomization; // @synthesize isOnlyAllowingPresenterDisplayCustomization=_isOnlyAllowingPresenterDisplayCustomization;
@property(readonly, nonatomic) long long presentationType; // @synthesize presentationType=_presentationType;
@property(readonly, nonatomic) KNPlaybackController *playbackController; // @synthesize playbackController=_playbackController;
@property(readonly, nonatomic) KNDocumentRoot *documentRoot; // @synthesize documentRoot=_documentRoot;
- (BOOL)windowShouldClose:(id)arg1;
- (void)windowDidFailToExitFullScreen:(id)arg1;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (id)customWindowsToExitFullScreenForWindow:(id)arg1;
- (void)windowDidFailToEnterFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)windowWillEnterFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (id)customWindowsToEnterFullScreenForWindow:(id)arg1;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (id)p_fullScreenWindows;
- (BOOL)p_windowIsFullScreen:(id)arg1;
- (BOOL)p_didPlayInFullScreenWindow;
- (BOOL)p_shouldEndPlaybackAfterExitingFullScreenWindow;
- (BOOL)p_shouldStartPlaybackAfterEnteringFullScreenWindow;
- (BOOL)p_shouldAlwaysUseFullScreenSpace;
- (BOOL)p_isFullScreenPlaybackAllowed;
@property(readonly, nonatomic) NSTouchBar *touchBar;
- (BOOL)shouldShowTextCommentHighlightsForCanvas:(id)arg1;
- (BOOL)shouldShowCommentsForCanvas:(id)arg1;
- (BOOL)playbackController:(id)arg1 canProcessHyperlinkURL:(id)arg2;
- (unsigned long long)p_showcastViewerCount;
- (BOOL)shouldPlaybackControllerEndShow:(id)arg1;
- (void)p_finishShowcastLoading;
- (void)showcastPresentationController:(id)arg1 didFailWithError:(id)arg2;
- (void)showcastPresentationControllerDidBecomeReadyToPlay:(id)arg1;
- (void)showcastPresentationControllerDidSynchronizeDocument:(id)arg1;
- (void)recordingSessionController:(id)arg1 recordingDidFailWithError:(id)arg2;
- (void)recordingSessionController:(id)arg1 shouldDeleteRecordingWithReplyHandler:(CDUnknownBlockType)arg2;
- (void)recordingSessionController:(id)arg1 shouldReplaceScopeOfRecording:(long long)arg2 replyHandler:(CDUnknownBlockType)arg3;
- (void)recordingSessionController:(id)arg1 shouldStartRecordingWithReplyHandler:(CDUnknownBlockType)arg2;
- (void)popoverDidClose:(id)arg1;
- (void)overlaySessionControllerDidEndTelestrating:(id)arg1;
- (void)overlaySessionControllerDidBeginTelestrating:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)p_updatePresenterDisplayContentViewLockedStatus;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)p_resetShowIfIdle:(id)arg1;
- (void)p_resetIdleTimer;
- (void)p_displaysDidChange;
- (void)p_mainWindowDidChange:(id)arg1;
- (void)p_windowDidBecomeMain:(id)arg1;
- (void)p_applicationDidHide:(id)arg1;
- (void)p_documentWindowDidExitFullScreen:(id)arg1;
- (void)p_applicationDidBecomeActive:(id)arg1;
- (void)p_applicationWillBecomeActive:(id)arg1;
- (void)p_applicationDidResignActive:(id)arg1;
- (void)p_playbackControllerEventDidChange:(id)arg1;
- (id)p_presenterDisplayViewControllerForSelectionPath:(id)arg1 withFlags:(unsigned long long)arg2;
- (void)setSelectionPath:(id)arg1 withFlags:(unsigned long long)arg2;
- (BOOL)canSetSelectionPath:(id)arg1 withFlags:(unsigned long long)arg2;
- (id)p_presenterDisplayViewControllerForScrollingPresenterNotes;
- (void)scrollPresenterNotesPageDown:(id)arg1;
- (void)scrollPresenterNotesPageUp:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)goToLastSlide:(id)arg1;
- (void)goToFirstSlide:(id)arg1;
- (void)goToPreviousSlide:(id)arg1;
- (void)goToNextSlide:(id)arg1;
- (void)toggleSlideNumberVisible:(id)arg1;
- (void)toggleShouldAlwaysShowCursor:(id)arg1;
- (void)toggleHelpWindowVisible:(id)arg1;
- (void)p_removeShowcastLoadingViewsAnimated:(BOOL)arg1;
- (void)p_updateShowcastLoadingViews;
- (void)p_addShowcastLoadingViewsIfNeeded;
- (BOOL)p_isShowcastPresentation;
- (void)endMetricsCustomization:(id)arg1;
- (void)cancelMetricsCustomization:(id)arg1;
- (void)enterMetricsCustomization:(id)arg1;
- (void)p_beginMetricsCustomizationForCustomizationOnlyMode;
- (void)p_beginMetricsCustomizationForPresenterDisplayConfigurationController:(id)arg1;
@property(readonly, nonatomic, getter=isConfiguringMetrics) BOOL configuringMetrics;
- (BOOL)p_currentSlideVisibleForScreenConfiguration:(id)arg1;
- (void)p_updateShowLayerVisibileStatus:(BOOL)arg1;
- (void)p_updateWindowsToMatchScreenConfigurationFrom:(id)arg1 to:(id)arg2;
- (BOOL)p_isScreenConfigurationCustomizationViewCoveringPlaybackView;
- (void)p_endScreenConfiguration;
@property(readonly, nonatomic) KNMacPlaybackPresentationConfigurationEditor *p_playbackConfigurationEditor;
- (void)p_setUpConfigurationPickerPopover;
- (void)customizeScreenConfigurationUsingFullscreenUI:(id)arg1;
- (BOOL)p_shouldShowSwapButton;
- (void)customizeScreenConfiguration:(id)arg1;
- (void)swapDisplays:(id)arg1;
@property(readonly, nonatomic) BOOL canSwapDisplays;
- (void)p_teardownTimerController;
- (void)resetPresenterDisplayTimer:(id)arg1;
- (void)p_startElapsedTimeIfNeeded;
- (void)p_updateTimerControllerTimebaseFromRecordingPlaybackControllerIfNeeded;
- (void)p_updateTimerControllerTimebaseFromRecordingSessionController;
- (void)p_updateTimerControllerTimebaseForElapsedTimeIfNeeded;
- (void)updateTimerControllerTimebase;
- (id)p_timerController;
- (void)p_teardownClockController;
- (id)p_clockController;
- (void)toggleSlideNavigatorVisible:(id)arg1;
@property(readonly, nonatomic) id <KNMacPlaybackSlideNavigatorContainer> slideNavigatorContainer;
- (void)resumeInteractiveNavigationIfPossible;
@property(readonly, nonatomic) BOOL canInteractivelyStopPresentation;
@property(readonly, nonatomic) BOOL canInteractivelyChangeSlides;
@property(readonly, nonatomic, getter=isNavigationInteractive) BOOL navigationInteractive;
- (BOOL)switchConfigurationForFunctionKey:(unsigned long long)arg1;
- (BOOL)p_isPresenterDisplayPreferenceEnabled;
- (BOOL)p_shouldDisablePresenterDisplays;
- (void)p_updatePresenterDisplayControlsEnabled;
- (void)p_updateCursorVisibility;
- (void)p_updateKeyPlaybackWindow;
@property(readonly, nonatomic) KNMacPlaybackWindow *playbackWindow;
- (id)presenterDisplayViewControllerForScreen:(id)arg1;
- (id)presenterDisplayViewControllerForConfigurationController:(id)arg1;
- (void)p_removePresenterDisplayViewsFromWindows;
- (void)p_updatePresenterDisplayViewControllersForWindowControllers:(id)arg1;
- (void)p_removePlaybackViewFromWindowOrPresenterDisplay;
- (void)p_addPlaybackViewToPresenterDisplay:(id)arg1;
- (void)p_addPlaybackViewToWindow:(id)arg1;
@property(readonly, nonatomic) BOOL requiresShowcastConfirmationToExit;
@property(readonly, nonatomic) BOOL requiresPasswordToExit;
- (id)p_windowControllersForPresenterDisplays;
- (BOOL)p_isCurrentSlideVisibleOnPresenterDisplay;
@property(readonly, nonatomic) BOOL isWindowedPlayback;
- (void)p_updatePlaybackAndPresenterWindows;
- (void)p_resumePresentation;
- (void)p_suspendPresentation;
- (void)hide:(id)arg1;
@property(readonly, nonatomic) BOOL canHide;
- (void)orderPresentationFront;
- (void)removePlaybackShroudAndResume;
- (void)p_resumeCollaborationIfSuspended;
- (void)p_suspendCollaborationIfNeeded;
- (void)p_stopBlockingSuddenTermination;
- (void)p_startBlockingSuddenTermination;
- (BOOL)p_shouldBlockSuddenTermination;
- (void)p_stopPreventingUserIdleDisplaySleep;
- (void)p_startPreventingUserIdleDisplaySleep;
- (BOOL)p_shouldPreventUserIdleDisplaySleep;
- (void)p_hideApplicationIconBadge;
- (void)p_showApplicationIconBadge;
- (void)p_presentationDidEnd;
- (void)p_handleDocumentWindowVisibilityForEndingPresentation;
- (void)p_updateSelectedSlideInDocumentWindowForEndingPresentation;
- (void)p_updateDocumentWindowFrameToMatchPlaybackWindow;
- (void)p_presentationWillEnd;
- (void)p_presentationDidStart;
- (void)p_playbackDidEnd;
- (void)p_startPreparedPlayback;
- (void)p_preparePlaybackAtSlideNode:(id)arg1 eventIndex:(unsigned long long)arg2;
- (BOOL)stopPresentationWithCompletion:(CDUnknownBlockType)arg1;
- (void)stopPresentation;
- (id)p_windowClassNamesToHide;
- (id)p_windowControllerClassNamesToHide;
- (void)p_registerAllInterestingWindowsToHideWithWindowVisibilityManager;
- (void)p_prepareForHidingNonPresentationWindowsWhenPresentationStarts;
- (void)p_setUpWindowedPlaybackWindow;
- (void)startPresentationOverDocumentWindowController:(id)arg1 atSlideNode:(id)arg2 eventIndex:(unsigned long long)arg3 presentationType:(long long)arg4 customizePresenterDisplayOnly:(BOOL)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)dealloc;
- (id)init;
- (id)initWithDocumentRoot:(id)arg1;
- (unsigned int)gotoPreviousSlideForMediaKeyCommand;
- (unsigned int)gotoNextSlideForMediaKeyCommand;
- (id)handleMoveSlideSwitcherBackwardScriptCommand:(id)arg1;
- (id)handleMoveSlideSwitcherForwardScriptCommand:(id)arg1;
- (id)handleAcceptSlideSwitcherScriptCommand:(id)arg1;
- (id)handleCancelSlideSwitcherScriptCommand:(id)arg1;
- (id)handleShowSlideSwitcherScriptCommand:(id)arg1;
- (void)gotoSlideNode:(id)arg1;
- (id)handlePreviousSlideScriptCommand:(id)arg1;
- (id)handleNextSlideScriptCommand:(id)arg1;
- (void)endShow;
@property(readonly, nonatomic) KNSlideNode *currentSlideNode;
@property(readonly, nonatomic, getter=isSlideNavigatorVisible) BOOL slideNavigatorVisible;

// Remaining properties
@property(readonly, nonatomic) id <TSDCanvasProxyDelegate> canvasProxyDelegate;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

