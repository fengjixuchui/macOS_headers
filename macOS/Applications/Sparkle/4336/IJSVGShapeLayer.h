//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "CAShapeLayer.h"

@class IJSVGGradientLayer, IJSVGLayer, IJSVGPatternLayer, IJSVGStrokeLayer;

@interface IJSVGShapeLayer : CAShapeLayer
{
    BOOL _requiresBackingScaleHelp;
    BOOL _convertMasksToPaths;
    int _blendingMode;
    IJSVGGradientLayer *_gradientFillLayer;
    IJSVGPatternLayer *_patternFillLayer;
    IJSVGStrokeLayer *_strokeLayer;
    IJSVGGradientLayer *_gradientStrokeLayer;
    IJSVGPatternLayer *_patternStrokeLayer;
    double _backingScaleFactor;
    long long _renderQuality;
    IJSVGLayer *_maskingLayerInternal;
    struct CGPoint _absoluteOrigin;
    struct CGPoint _originalPathOrigin;
}

@property(retain, nonatomic) IJSVGLayer *maskingLayerInternal; // @synthesize maskingLayerInternal=_maskingLayerInternal;
@property(nonatomic) BOOL convertMasksToPaths; // @synthesize convertMasksToPaths=_convertMasksToPaths;
@property(nonatomic) struct CGPoint originalPathOrigin; // @synthesize originalPathOrigin=_originalPathOrigin;
@property(nonatomic) struct CGPoint absoluteOrigin; // @synthesize absoluteOrigin=_absoluteOrigin;
@property(nonatomic) int blendingMode; // @synthesize blendingMode=_blendingMode;
@property(nonatomic) long long renderQuality; // @synthesize renderQuality=_renderQuality;
@property(nonatomic) double backingScaleFactor; // @synthesize backingScaleFactor=_backingScaleFactor;
@property(nonatomic) BOOL requiresBackingScaleHelp; // @synthesize requiresBackingScaleHelp=_requiresBackingScaleHelp;
@property(nonatomic) IJSVGPatternLayer *patternStrokeLayer; // @synthesize patternStrokeLayer=_patternStrokeLayer;
@property(nonatomic) IJSVGGradientLayer *gradientStrokeLayer; // @synthesize gradientStrokeLayer=_gradientStrokeLayer;
@property(nonatomic) IJSVGStrokeLayer *strokeLayer; // @synthesize strokeLayer=_strokeLayer;
@property(nonatomic) IJSVGPatternLayer *patternFillLayer; // @synthesize patternFillLayer=_patternFillLayer;
@property(nonatomic) IJSVGGradientLayer *gradientFillLayer; // @synthesize gradientFillLayer=_gradientFillLayer;
- (void).cxx_destruct;
- (id)actionForKey:(id)arg1;
- (void)renderInContext:(struct CGContext *)arg1;
- (id)maskingLayer;
- (void)applySublayerMaskToContext:(struct CGContext *)arg1 forSublayer:(id)arg2 withOffset:(struct CGPoint)arg3;
- (void)_customRenderInContext:(struct CGContext *)arg1;
- (void)addSublayer:(id)arg1;

@end

