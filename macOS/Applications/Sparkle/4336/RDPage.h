//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCoding.h"
#import "NSCopying.h"
#import "RDMenuItemProtocol.h"
#import "RDTemplateProtocol.h"
#import "RDWebsiteProtocol.h"

@class NSData, NSMutableDictionary, NSPointerArray, NSString, NSValue, RDAsset, RDPageContent, RDSchemaContent, RDSection, RDWebsite;

@interface RDPage : NSObject <NSCoding, NSCopying, RDWebsiteProtocol, RDTemplateProtocol, RDMenuItemProtocol>
{
    BOOL _undeletable;
    BOOL _unclonable;
    BOOL _hidden;
    BOOL _excludeFromSearch;
    BOOL _excludeFromMenus;
    int _type;
    int _allowSearchEngineTextIndexing;
    int _allowSearchEnginePageArchival;
    NSString *_language;
    RDSection *_section;
    NSString *_title;
    NSString *_originalURL;
    NSString *_folder;
    NSString *_desc;
    NSString *_keywords;
    RDPageContent *_content;
    NSString *_internalFilename;
    RDSchemaContent *_contentTypeInfo;
    NSString *_accessControlGroup;
    NSString *_socialImage;
    RDAsset *_socialImageAsset;
    NSData *_socialImageFileBookmark;
    NSString *_socialImageFilename;
    NSValue *_socialImageSize;
    NSMutableDictionary *_templateItems;
    NSPointerArray *_wrapTextItems;
}

@property(retain, nonatomic) NSPointerArray *wrapTextItems; // @synthesize wrapTextItems=_wrapTextItems;
@property(retain, nonatomic) NSMutableDictionary *templateItems; // @synthesize templateItems=_templateItems;
@property(nonatomic) BOOL excludeFromMenus; // @synthesize excludeFromMenus=_excludeFromMenus;
@property(nonatomic) BOOL excludeFromSearch; // @synthesize excludeFromSearch=_excludeFromSearch;
@property(nonatomic) int allowSearchEnginePageArchival; // @synthesize allowSearchEnginePageArchival=_allowSearchEnginePageArchival;
@property(nonatomic) int allowSearchEngineTextIndexing; // @synthesize allowSearchEngineTextIndexing=_allowSearchEngineTextIndexing;
@property(retain, nonatomic) NSValue *socialImageSize; // @synthesize socialImageSize=_socialImageSize;
@property(retain, nonatomic) NSString *socialImageFilename; // @synthesize socialImageFilename=_socialImageFilename;
@property(retain, nonatomic) NSData *socialImageFileBookmark; // @synthesize socialImageFileBookmark=_socialImageFileBookmark;
@property(retain, nonatomic) RDAsset *socialImageAsset; // @synthesize socialImageAsset=_socialImageAsset;
@property(retain, nonatomic) NSString *socialImage; // @synthesize socialImage=_socialImage;
@property(retain, nonatomic) NSString *accessControlGroup; // @synthesize accessControlGroup=_accessControlGroup;
@property(retain, nonatomic) RDSchemaContent *contentTypeInfo; // @synthesize contentTypeInfo=_contentTypeInfo;
@property(nonatomic) int type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *internalFilename; // @synthesize internalFilename=_internalFilename;
@property(retain, nonatomic) RDPageContent *content; // @synthesize content=_content;
@property(retain, nonatomic) NSString *keywords; // @synthesize keywords=_keywords;
@property(retain, nonatomic) NSString *desc; // @synthesize desc=_desc;
@property(retain, nonatomic) NSString *folder; // @synthesize folder=_folder;
@property(retain, nonatomic) NSString *originalURL; // @synthesize originalURL=_originalURL;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(nonatomic) BOOL hidden; // @synthesize hidden=_hidden;
@property(nonatomic) BOOL unclonable; // @synthesize unclonable=_unclonable;
@property(nonatomic) BOOL undeletable; // @synthesize undeletable=_undeletable;
@property(nonatomic) __weak RDSection *section; // @synthesize section=_section;
@property(retain, nonatomic) NSString *language; // @synthesize language=_language;
- (void).cxx_destruct;
- (BOOL)hasCustomPatternBackgroundWithUUID:(id)arg1;
- (void)setMenuItemText:(id)arg1;
- (id)menuItemText;
- (void)addCSSPageProperties:(id)arg1 context:(id)arg2;
- (id)additionalResources:(id)arg1 htmlDocument:(id)arg2;
- (void)replaceLinkToOriginalPage:(id)arg1;
- (id)linkWithTarget:(int)arg1;
- (id)anchorWithUUID:(id)arg1;
- (id)itemWithUUID:(id)arg1;
- (BOOL)fontStyleIsUsed:(id)arg1;
- (BOOL)fontFamilyIsUsed:(id)arg1;
- (void)updateColor:(long long)arg1;
- (void)replaceFontFamily:(id)arg1 withFamily:(id)arg2;
- (void)replaceFonts:(id)arg1;
- (void)refreshFonts:(id)arg1;
- (void)replaceFontStyleWithName:(id)arg1 withStyle:(id)arg2;
- (void)renameFontStyleWithName:(id)arg1 withName:(id)arg2;
- (void)updateFontStyle:(id)arg1;
- (void)addUsedFontsInfo:(id)arg1 fontStyles:(id)arg2;
- (void)enumerateWrapTextItemsForItem:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)updateWrapPaths:(BOOL)arg1;
- (void)updateWrapPaths;
- (void)invalidateWrapTextItems:(id)arg1;
- (void)removeWrapTextItem:(id)arg1 update:(BOOL)arg2;
- (void)removeWrapTextItem:(id)arg1;
- (void)addWrapTextItem:(id)arg1 update:(BOOL)arg2;
- (void)addWrapTextItem:(id)arg1;
- (void)updateWrapTextItems;
- (void)rebuildWrapTextItems;
- (void)enumerateFooterItems:(CDUnknownBlockType)arg1 nonFooterItem:(CDUnknownBlockType)arg2;
- (void)filterAllItems:(CDUnknownBlockType)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)filterItems:(CDUnknownBlockType)arg1 withBlock:(CDUnknownBlockType)arg2 withNonMatchingBlock:(CDUnknownBlockType)arg3;
- (void)filterItems:(CDUnknownBlockType)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)itemsWithClassName:(id)arg1;
- (id)itemHavingTemplateItemAsItem:(id)arg1;
- (id)itemHavingTemplateItem:(id)arg1;
- (BOOL)referencesTemplateItem:(id)arg1;
- (BOOL)replaceItem:(id)arg1 withItem:(id)arg2;
- (void)addTemplateItemsFromPage:(id)arg1;
- (void)addTemplateItem:(id)arg1 forItem:(id)arg2;
- (id)templateItemForItem:(id)arg1;
- (BOOL)containsTemplateItem:(id)arg1;
- (BOOL)containsItem:(id)arg1;
- (id)itemAtPosition:(struct CGPoint)arg1;
- (double)footerHeightForDevice:(id)arg1;
- (double)contentHeightExcludingFooterElementsForDevice:(id)arg1;
- (double)contentHeightForDevice:(id)arg1;
- (double)footerHeight;
- (double)contentHeightExcludingFooterElements;
- (double)visibleContentHeight;
- (double)contentHeight;
- (double)originalPageHeight;
- (void)fixPageFooterForDevice:(id)arg1;
- (BOOL)fixPageFooter;
- (BOOL)fixPageHeightForDevice:(id)arg1;
- (BOOL)fixPageHeight;
- (void)setPageHeight:(double)arg1;
- (double)pageHeight;
- (void)setPageWidth:(double)arg1 forDevice:(id)arg2;
- (void)setPageWidth:(double)arg1;
- (double)pageWidth;
- (struct CGSize)pageSizeForDevice:(id)arg1;
- (struct CGSize)pageSize;
- (BOOL)removeAnchor:(id)arg1;
- (void)addAnchor:(id)arg1;
- (long long)topItemPosition;
- (BOOL)removeItem:(id)arg1;
- (void)addItem:(id)arg1 atPosition:(long long)arg2;
- (void)addItem:(id)arg1;
- (id)allVisibleItems;
- (id)allSnapItems;
- (id)allItems;
- (id)items;
- (id)clone;
- (void)checkCurrentDevice:(id)arg1;
- (void)removeUnusedDevices:(id)arg1;
- (void)switchToDevice:(id)arg1;
- (BOOL)hasDevice:(id)arg1;
- (void)removeDevice:(id)arg1;
- (void)addDevice:(id)arg1 copyingPropertiesFromDevice:(id)arg2;
- (void)addDevice:(id)arg1;
- (void)addTemplateItems:(id)arg1;
- (void)copyTemplateItems:(id)arg1 withZone:(struct _NSZone *)arg2 originalWebsite:(id)arg3;
@property(nonatomic) __weak RDWebsite *website;
@property(readonly, nonatomic) NSString *languageValue;
- (id)relativeResourcePath:(id)arg1 inContext:(id)arg2;
- (id)relativeCSSPath:(id)arg1 inContext:(id)arg2;
- (id)folderDepthPrefix;
@property(readonly, nonatomic) NSString *automaticFilename;
@property(readonly, nonatomic) NSString *prettyFilename;
@property(retain, nonatomic) NSString *filename;
- (Class)pageContentClass;
- (id)initWithWebsite:(id)arg1 inSection:(id)arg2;
- (id)initWithWebsite:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyInWebsite:(id)arg1 withZone:(struct _NSZone *)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

