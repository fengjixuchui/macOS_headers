//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSDiscardableContent.h"

@class NSArray, RDAssetReference;

@interface RDContentDrawingInternal : NSObject <NSDiscardableContent>
{
    BOOL _discarded;
    NSArray *_filters;
    RDAssetReference *_asset;
    id _imageMatte;
    double _screendpi;
    CDUnknownBlockType _cgimageGenerator;
    id _originalCGImage;
    long long _accessCounter;
    struct CGSize _currentSize;
    struct CGSize _originalCGImageSize;
}

@property(nonatomic) BOOL discarded; // @synthesize discarded=_discarded;
@property(nonatomic) long long accessCounter; // @synthesize accessCounter=_accessCounter;
@property(nonatomic) struct CGSize originalCGImageSize; // @synthesize originalCGImageSize=_originalCGImageSize;
@property(retain, nonatomic) id originalCGImage; // @synthesize originalCGImage=_originalCGImage;
@property(copy, nonatomic) CDUnknownBlockType cgimageGenerator; // @synthesize cgimageGenerator=_cgimageGenerator;
@property(nonatomic) double screendpi; // @synthesize screendpi=_screendpi;
@property(nonatomic) struct CGSize currentSize; // @synthesize currentSize=_currentSize;
@property(retain, nonatomic) id imageMatte; // @synthesize imageMatte=_imageMatte;
@property(retain, nonatomic) RDAssetReference *asset; // @synthesize asset=_asset;
@property(retain, nonatomic) NSArray *filters; // @synthesize filters=_filters;
- (void).cxx_destruct;
- (BOOL)isContentDiscarded;
- (void)endContentAccess;
- (void)discardContentIfPossible;
- (BOOL)beginContentAccess;
- (struct CGRect)outputRectWithSize:(struct CGSize)arg1 paintRect:(CDUnknownBlockType)arg2;
- (id)linkElementInDocument:(id)arg1 lightboxEnabled:(BOOL)arg2 lightboxTheme:(long long)arg3 lightboxOpacity:(double)arg4 lightboxImageScale:(long long)arg5 imageSize:(struct CGSize)arg6 imageName:(id)arg7 link:(id)arg8 cacheKey:(id)arg9 draw:(CDUnknownBlockType)arg10 context:(id)arg11 item:(id)arg12;
- (id)imageWithName:(id)arg1 size:(struct CGSize)arg2 paintRect:(CDUnknownBlockType)arg3 document:(id)arg4 context:(id)arg5 item:(id)arg6;
- (id)imageElementWithName:(id)arg1 originalSize:(struct CGSize)arg2 paintRect:(CDUnknownBlockType)arg3 propertySets:(id)arg4 imgPropertySet:(id *)arg5 document:(id)arg6 context:(id)arg7 overlay:(int)arg8 state:(id)arg9;
- (struct CGImage *)imageAtSize:(struct CGRect)arg1 screenScale:(double)arg2 draw:(CDUnknownBlockType)arg3 info:(id)arg4 forWebsite:(id)arg5 opaque:(BOOL)arg6;
- (id)keyForItem:(id)arg1 name:(id)arg2 options:(id)arg3;
- (id)addImageInContext:(id)arg1 size:(struct CGSize)arg2 name:(id)arg3 folder:(id)arg4 lossy:(BOOL)arg5 scale:(long long)arg6 compression:(double)arg7 cacheKey:(id)arg8 hash:(id *)arg9 draw:(CDUnknownBlockType)arg10 info:(id)arg11 document:(id)arg12 item:(id)arg13;
- (id)generateDeviceImagesInContext:(id)arg1 document:(id)arg2 images:(id)arg3 imageSize:(CDUnknownBlockType)arg4 draw:(CDUnknownBlockType)arg5 stretchMode:(BOOL)arg6 item:(id)arg7;
- (id)borderDefWithSuffix:(id)arg1 item:(id)arg2;
- (void)addCSSBorderPropertiesToPropertySet:(id)arg1 context:(id)arg2 forceBorder:(BOOL)arg3 forceDisable:(BOOL)arg4 item:(id)arg5;
- (id)multiResImageInContext:(id)arg1 inDocument:(id)arg2 basename:(id)arg3 lossy:(BOOL)arg4 compression:(double *)arg5 originalSize:(struct CGSize)arg6 size:(struct CGSize)arg7 paintRect:(CDUnknownBlockType)arg8 key:(id)arg9 item:(id)arg10;
- (void)scanResponsiveBreakpointsFor:(CDUnknownBlockType)arg1 inContext:(id)arg2 item:(id)arg3;
- (void)addCSSPropertiesToPropertySets:(id)arg1 element:(id)arg2 forItem:(id)arg3 context:(id)arg4 forceBorder:(BOOL)arg5 forceBorderDisable:(BOOL)arg6;
- (void)drawBorderInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2 flipped:(BOOL)arg3 side:(long long)arg4 item:(id)arg5;
- (void)clipPathInContext:(struct CGContext *)arg1 p1:(struct CGPoint)arg2 p2:(struct CGPoint)arg3 p3:(struct CGPoint)arg4 p4:(struct CGPoint)arg5;
- (void)clipPathBorderLeftInContext:(struct CGContext *)arg1 outerRect:(struct CGRect)arg2 innerRect:(struct CGRect)arg3 radius:(double)arg4 flipped:(BOOL)arg5 item:(id)arg6;
- (void)clipPathBorderBottomInContext:(struct CGContext *)arg1 outerRect:(struct CGRect)arg2 innerRect:(struct CGRect)arg3 radius:(double)arg4 flipped:(BOOL)arg5 item:(id)arg6;
- (void)clipPathBorderRightInContext:(struct CGContext *)arg1 outerRect:(struct CGRect)arg2 innerRect:(struct CGRect)arg3 radius:(double)arg4 flipped:(BOOL)arg5 item:(id)arg6;
- (void)clipPathBorderTopInContext:(struct CGContext *)arg1 outerRect:(struct CGRect)arg2 innerRect:(struct CGRect)arg3 radius:(double)arg4 flipped:(BOOL)arg5 item:(id)arg6;
- (void)drawBorderInContext:(struct CGContext *)arg1 alpha:(double)arg2 rect:(struct CGRect)arg3 flipped:(BOOL)arg4 item:(id)arg5;
- (void)generatePathInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2 radius:(double)arg3 flipped:(BOOL)arg4 item:(id)arg5;
- (void)generateCurve:(long long)arg1 inContext:(struct CGContext *)arg2 rect:(struct CGRect)arg3 flipped:(BOOL)arg4 item:(id)arg5;
- (void)drawItemImageInContext:(struct CGContext *)arg1 alpha:(double)arg2 rect:(struct CGRect)arg3 flipped:(BOOL)arg4 renderingDestination:(int)arg5 state:(id)arg6;
- (void)drawImageOverlay:(long long)arg1 overlay:(int)arg2 onCorner:(long long)arg3 inContext:(struct CGContext *)arg4 paintRect:(struct CGRect)arg5 device:(id)arg6 scale:(double)arg7 item:(id)arg8;
- (id)imageFilterCSS;
- (void)addImageFilterPropertiesInContext:(id)arg1 propertySet:(id)arg2;
- (id)filterArray;
- (id)filterImage:(id)arg1 withFilters:(id)arg2;
- (void)drawImageInContext:(struct CGContext *)arg1 paintRect:(struct CGRect)arg2 destRect:(struct CGRect)arg3 clip:(BOOL)arg4 blur:(long long)arg5 blurRadius:(long long)arg6 scale:(long long)arg7 item:(id)arg8;
- (void)drawItemContentInContext:(struct CGContext *)arg1 alpha:(double)arg2 rect:(struct CGRect)arg3 flipped:(BOOL)arg4 renderingDestination:(int)arg5 state:(id)arg6;
- (void)drawItemBackgroundInContext:(struct CGContext *)arg1 alpha:(double)arg2 rect:(struct CGRect)arg3 flipped:(BOOL)arg4 item:(id)arg5;
- (void)drawShadowInContext:(struct CGContext *)arg1 alpha:(double)arg2 rect:(struct CGRect)arg3 flipped:(BOOL)arg4 renderingDestination:(int)arg5 item:(id)arg6;
- (id)cgimageForRect:(struct CGRect)arg1 scale:(long long)arg2;
@property(readonly, nonatomic) struct CGSize imageSize;
@property(readonly, nonatomic) BOOL haveImage;
- (id)initWithAsset:(id)arg1;
- (id)initWithImageGenerator:(CDUnknownBlockType)arg1 size:(struct CGSize)arg2;
- (id)initWithImage:(id)arg1;
- (id)init;

@end

