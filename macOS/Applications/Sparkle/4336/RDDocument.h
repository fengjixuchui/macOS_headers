//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSDocument.h"

#import "NSKeyedUnarchiverDelegate.h"
#import "NSPopoverDelegate.h"
#import "RDDeviceSwitcherProtocol.h"
#import "RDGridPopoverProtocol.h"

@class NSButton, NSLayoutConstraint, NSOutlineView, NSPopover, NSSegmentedControl, NSString, NSView, NSWindow, RDAddPageViewController, RDCreateTextDiffWindowController, RDDevicePopoverViewController, RDEditorView, RDGridPopoverViewController, RDGridSettings, RDImportWindowController, RDPlistReader, RDPreviewPopoverViewController, RDSiteSettingsWindowController, RDUploadPopoverViewController, RDWebsite, RDWebsiteController;

@interface RDDocument : NSDocument <NSKeyedUnarchiverDelegate, NSPopoverDelegate, RDDeviceSwitcherProtocol, RDGridPopoverProtocol>
{
    BOOL _documentIsOK;
    BOOL _documentIsClosing;
    BOOL _defaultFrame;
    BOOL _gridVisible;
    BOOL _formatBarVisible;
    BOOL _hiddenElementsVisible;
    BOOL _observingPreferences;
    BOOL _uploadError;
    RDWebsiteController *_websiteController;
    NSWindow *_documentWindow;
    RDEditorView *_editorView;
    NSSegmentedControl *_outlineActionsSegmentedControl;
    NSButton *_deviceToolbarButton;
    NSButton *_gridToolbarButton;
    NSButton *_addElementToolbarButton;
    NSButton *_previewToolbarButton;
    NSButton *_publishToolbarButton;
    NSOutlineView *_websiteOutlineView;
    NSView *_formatBarView;
    NSButton *_showHideElementsImageButton;
    NSButton *_alignLeftButton;
    NSButton *_alignHCenterButton;
    NSButton *_alignRightButton;
    NSButton *_alignTopButton;
    NSButton *_alignVCenterButton;
    NSButton *_alignBottomButton;
    NSButton *_distributeHorizontalButton;
    NSButton *_distributeVerticalButton;
    NSButton *_evenWidthButton;
    NSButton *_evenHeightButton;
    NSButton *_arrangeToBackButton;
    NSButton *_arrangeToFrontButton;
    NSButton *_arrangeBackwardButton;
    NSButton *_arrangeForwardButton;
    NSLayoutConstraint *_formatBarHeightConstraint;
    NSLayoutConstraint *_formatBarPositionConstraint;
    NSLayoutConstraint *_scrollViewPositionConstraint;
    NSPopover *_devicePopover;
    NSPopover *_gridPopover;
    NSPopover *_uploadPopover;
    NSPopover *_previewPopover;
    RDWebsite *_website;
    RDGridSettings *_gridSettings;
    NSPopover *_addPagePopover;
    RDAddPageViewController *_addPageViewController;
    RDDevicePopoverViewController *_devicePopoverViewController;
    RDGridPopoverViewController *_gridPopoverViewController;
    RDPreviewPopoverViewController *_previewPopoverViewController;
    RDUploadPopoverViewController *_uploadPopoverViewController;
    RDSiteSettingsWindowController *_siteSettingsWindowController;
    RDImportWindowController *_importWindowController;
    RDCreateTextDiffWindowController *_createTextDiffWindowController;
    RDPlistReader *_rd;
}

+ (BOOL)autosavesInPlace;
+ (BOOL)fontFamilyIsUsed:(id)arg1;
+ (id)documentForWebsite:(id)arg1;
@property(retain, nonatomic) RDPlistReader *rd; // @synthesize rd=_rd;
@property(retain, nonatomic) RDCreateTextDiffWindowController *createTextDiffWindowController; // @synthesize createTextDiffWindowController=_createTextDiffWindowController;
@property(retain, nonatomic) RDImportWindowController *importWindowController; // @synthesize importWindowController=_importWindowController;
@property(retain, nonatomic) RDSiteSettingsWindowController *siteSettingsWindowController; // @synthesize siteSettingsWindowController=_siteSettingsWindowController;
@property(nonatomic) BOOL uploadError; // @synthesize uploadError=_uploadError;
@property(retain, nonatomic) RDUploadPopoverViewController *uploadPopoverViewController; // @synthesize uploadPopoverViewController=_uploadPopoverViewController;
@property(retain, nonatomic) RDPreviewPopoverViewController *previewPopoverViewController; // @synthesize previewPopoverViewController=_previewPopoverViewController;
@property(retain, nonatomic) RDGridPopoverViewController *gridPopoverViewController; // @synthesize gridPopoverViewController=_gridPopoverViewController;
@property(retain, nonatomic) RDDevicePopoverViewController *devicePopoverViewController; // @synthesize devicePopoverViewController=_devicePopoverViewController;
@property(retain, nonatomic) RDAddPageViewController *addPageViewController; // @synthesize addPageViewController=_addPageViewController;
@property(retain, nonatomic) NSPopover *addPagePopover; // @synthesize addPagePopover=_addPagePopover;
@property(retain, nonatomic) RDGridSettings *gridSettings; // @synthesize gridSettings=_gridSettings;
@property(nonatomic) BOOL observingPreferences; // @synthesize observingPreferences=_observingPreferences;
@property(nonatomic) BOOL hiddenElementsVisible; // @synthesize hiddenElementsVisible=_hiddenElementsVisible;
@property(nonatomic) BOOL formatBarVisible; // @synthesize formatBarVisible=_formatBarVisible;
@property(nonatomic) BOOL gridVisible; // @synthesize gridVisible=_gridVisible;
@property(nonatomic) BOOL defaultFrame; // @synthesize defaultFrame=_defaultFrame;
@property(retain, nonatomic) RDWebsite *website; // @synthesize website=_website;
@property(nonatomic) BOOL documentIsClosing; // @synthesize documentIsClosing=_documentIsClosing;
@property(nonatomic) BOOL documentIsOK; // @synthesize documentIsOK=_documentIsOK;
@property(retain, nonatomic) NSPopover *previewPopover; // @synthesize previewPopover=_previewPopover;
@property(retain, nonatomic) NSPopover *uploadPopover; // @synthesize uploadPopover=_uploadPopover;
@property(retain, nonatomic) NSPopover *gridPopover; // @synthesize gridPopover=_gridPopover;
@property(retain, nonatomic) NSPopover *devicePopover; // @synthesize devicePopover=_devicePopover;
@property(nonatomic) __weak NSLayoutConstraint *scrollViewPositionConstraint; // @synthesize scrollViewPositionConstraint=_scrollViewPositionConstraint;
@property(nonatomic) __weak NSLayoutConstraint *formatBarPositionConstraint; // @synthesize formatBarPositionConstraint=_formatBarPositionConstraint;
@property(nonatomic) __weak NSLayoutConstraint *formatBarHeightConstraint; // @synthesize formatBarHeightConstraint=_formatBarHeightConstraint;
@property(nonatomic) __weak NSButton *arrangeForwardButton; // @synthesize arrangeForwardButton=_arrangeForwardButton;
@property(nonatomic) __weak NSButton *arrangeBackwardButton; // @synthesize arrangeBackwardButton=_arrangeBackwardButton;
@property(nonatomic) __weak NSButton *arrangeToFrontButton; // @synthesize arrangeToFrontButton=_arrangeToFrontButton;
@property(nonatomic) __weak NSButton *arrangeToBackButton; // @synthesize arrangeToBackButton=_arrangeToBackButton;
@property(nonatomic) __weak NSButton *evenHeightButton; // @synthesize evenHeightButton=_evenHeightButton;
@property(nonatomic) __weak NSButton *evenWidthButton; // @synthesize evenWidthButton=_evenWidthButton;
@property(nonatomic) __weak NSButton *distributeVerticalButton; // @synthesize distributeVerticalButton=_distributeVerticalButton;
@property(nonatomic) __weak NSButton *distributeHorizontalButton; // @synthesize distributeHorizontalButton=_distributeHorizontalButton;
@property(nonatomic) __weak NSButton *alignBottomButton; // @synthesize alignBottomButton=_alignBottomButton;
@property(nonatomic) __weak NSButton *alignVCenterButton; // @synthesize alignVCenterButton=_alignVCenterButton;
@property(nonatomic) __weak NSButton *alignTopButton; // @synthesize alignTopButton=_alignTopButton;
@property(nonatomic) __weak NSButton *alignRightButton; // @synthesize alignRightButton=_alignRightButton;
@property(nonatomic) __weak NSButton *alignHCenterButton; // @synthesize alignHCenterButton=_alignHCenterButton;
@property(nonatomic) __weak NSButton *alignLeftButton; // @synthesize alignLeftButton=_alignLeftButton;
@property(nonatomic) __weak NSButton *showHideElementsImageButton; // @synthesize showHideElementsImageButton=_showHideElementsImageButton;
@property(nonatomic) __weak NSView *formatBarView; // @synthesize formatBarView=_formatBarView;
@property(nonatomic) __weak NSOutlineView *websiteOutlineView; // @synthesize websiteOutlineView=_websiteOutlineView;
@property(nonatomic) __weak NSButton *publishToolbarButton; // @synthesize publishToolbarButton=_publishToolbarButton;
@property(nonatomic) __weak NSButton *previewToolbarButton; // @synthesize previewToolbarButton=_previewToolbarButton;
@property(nonatomic) __weak NSButton *addElementToolbarButton; // @synthesize addElementToolbarButton=_addElementToolbarButton;
@property(nonatomic) __weak NSButton *gridToolbarButton; // @synthesize gridToolbarButton=_gridToolbarButton;
@property(nonatomic) __weak NSButton *deviceToolbarButton; // @synthesize deviceToolbarButton=_deviceToolbarButton;
@property(nonatomic) __weak NSSegmentedControl *outlineActionsSegmentedControl; // @synthesize outlineActionsSegmentedControl=_outlineActionsSegmentedControl;
@property(nonatomic) __weak RDEditorView *editorView; // @synthesize editorView=_editorView;
@property(retain, nonatomic) NSWindow *documentWindow; // @synthesize documentWindow=_documentWindow;
@property(retain, nonatomic) RDWebsiteController *websiteController; // @synthesize websiteController=_websiteController;
- (void).cxx_destruct;
- (void)addParagraphsToDictionary:(id)arg1 fromString:(id)arg2;
- (void)createTextDiff:(id)arg1;
- (id)convertCSVToHTML:(id)arg1;
- (void)importTextFromHTMLDocument:(id)arg1;
- (void)importText:(id)arg1;
- (void)scanAndDumpOpen:(CDUnknownBlockType)arg1 emit:(CDUnknownBlockType)arg2 close:(CDUnknownBlockType)arg3 endline:(CDUnknownBlockType)arg4;
- (void)dumpAsHTML;
- (void)dumpAsRTF;
- (void)dumpText:(id)arg1;
- (id)translatableItems:(id)arg1 found:(id)arg2;
- (void)debugTogglePreviewGeneration:(id)arg1;
- (void)debugToggleSidebarGeneration:(id)arg1;
- (void)debugToggleFrames:(id)arg1;
- (id)searchForText:(id)arg1 inPage:(id)arg2 inItem:(id)arg3 ignoreCase:(BOOL)arg4;
- (void)fixPageFooter:(id)arg1;
- (void)fixPageHeight:(id)arg1;
- (void)debugSaveCurrentPage:(id)arg1;
- (void)dumpTypingAttributes:(id)arg1;
- (void)dumpUndoStacks:(id)arg1;
- (void)exceptionNow:(id)arg1;
- (void)crashNow:(id)arg1;
- (BOOL)retryUploadSessionWithSettings:(id)arg1 delegate:(id)arg2;
- (BOOL)errorUploadSessionWithSettings:(id)arg1;
- (BOOL)cancelUploadSessionWithSettings:(id)arg1;
- (BOOL)cancelAllUploads;
- (BOOL)startUploadSessionWithSettings:(id)arg1 delegate:(id)arg2;
- (BOOL)canStartUploadSession;
- (void)updatePublishInfoForUploadSettings:(id)arg1;
- (BOOL)removeUploadSettings:(id)arg1;
- (BOOL)replaceUploadSettings:(id)arg1 withSettings:(id)arg2;
- (BOOL)addUploadSettings:(id)arg1;
- (id)uploadSettingsWithName:(id)arg1;
- (void)showHideSelectionOnThisDevice:(id)arg1;
- (void)toBack:(id)arg1;
- (void)sendBackward:(id)arg1;
- (void)toFront:(id)arg1;
- (void)bringForward:(id)arg1;
- (void)setDevicePopoverContentSize:(struct CGSize)arg1;
- (BOOL)showAlertOnDirtyDevice;
- (void)setShowAlertOnDirtyDevice:(BOOL)arg1;
- (BOOL)previewCurrentDeviceOnly;
- (void)setPreviewCurrentDeviceOnly:(BOOL)arg1;
- (BOOL)syncTextAcrossDevices;
- (void)setSyncTextAcrossDevices:(BOOL)arg1;
- (long long)deviceCount;
- (void)reflectDevice:(id)arg1;
- (void)switchToDevice:(id)arg1;
- (void)switchTo320:(id)arg1;
- (void)switchTo480:(id)arg1;
- (void)switchTo768:(id)arg1;
- (void)switchTo960:(id)arg1;
- (void)switchTo1200:(id)arg1;
- (void)addUndoForRemoveDevice:(id)arg1 forItem:(id)arg2 templateItems:(id)arg3;
- (void)addUndoForRemoveDevice:(id)arg1 forPage:(id)arg2;
- (void)addUndoForRemoveDevice:(id)arg1;
- (BOOL)haveDevice:(long long)arg1;
- (void)removeDevice:(id)arg1;
- (void)addDevice:(id)arg1;
- (id)deviceWithName:(id)arg1;
- (id)currentDevice;
- (void)dismissDevicePicker:(id)arg1;
- (void)devicePicker:(id)arg1;
- (void)dismissUploadPopover:(id)arg1;
- (void)createUploadPopover:(id)arg1;
- (void)openUploadPane:(id)arg1;
- (void)arrangeForward:(id)arg1;
- (void)arrangeBackward:(id)arg1;
- (void)arrangeToFront:(id)arg1;
- (void)arrangeToBack:(id)arg1;
- (void)evenHeight:(id)arg1;
- (void)evenWidth:(id)arg1;
- (void)distributeVertical:(id)arg1;
- (void)distributeHorizontal:(id)arg1;
- (void)alignBottom:(id)arg1;
- (void)alignVCenter:(id)arg1;
- (void)alignTop:(id)arg1;
- (void)alignRight:(id)arg1;
- (void)alignHCenter:(id)arg1;
- (void)alignLeft:(id)arg1;
- (void)updateShowHideElementsButtons;
- (void)showHideElements:(id)arg1;
- (void)showHideFormatBarAnimated:(BOOL)arg1;
- (void)updateFormatBarDesignButtons;
- (void)showHideFormatBar:(id)arg1;
- (void)dismissPreviewPane:(id)arg1;
- (void)openPreviewPane:(id)arg1;
- (void)dismissGridPane:(id)arg1;
- (void)openGridPane:(id)arg1;
- (void)gridVisibilityChanged:(BOOL)arg1;
- (void)gridSettingsChanged:(id)arg1;
- (id)loadGridSettingsWithKey:(id)arg1;
- (void)saveGridSettings:(id)arg1 key:(id)arg2;
- (id)gridSettingsForDeviceWidth:(long long)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)exportWebsite:(id)arg1;
- (void)deleteSection:(id)arg1;
- (void)addSection:(id)arg1 withIndex:(long long)arg2;
- (void)deletePage:(id)arg1;
- (void)addPage:(id)arg1 withIndex:(long long)arg2 toSection:(id)arg3;
- (void)setDefaultTitleForPage:(id)arg1 withPrefix:(id)arg2;
- (void)setDefaultTitleForPage:(id)arg1;
- (void)setDefaultStyleForText:(id)arg1 textAlignment:(unsigned long long)arg2 textColor:(long long)arg3 nsTextColor:(id)arg4 device:(id)arg5 deviceScale:(double)arg6 referenceDevice:(id)arg7;
- (id)addButtonWithUUID:(id)arg1 toPrivacyPolicyPage:(id)arg2 backgroundColor:(long long)arg3 type:(long long)arg4;
- (id)addSiteSearchPageCopyingTemplateItemsFromPage:(id)arg1;
- (id)addPrivacyPolicyPageCopyingTemplateItemsFromPage:(id)arg1;
- (id)addSection;
- (id)addPageWithPageTemplate:(id)arg1 toSection:(id)arg2 copyingTemplateItemsFromPage:(id)arg3;
- (void)popoverDidClose:(id)arg1;
- (void)popoverWillShow:(id)arg1;
- (void)dismissAddPagePopover:(id)arg1;
- (void)addWebsiteElement:(id)arg1;
- (void)sendBrokenCSSDocument;
- (void)sendBrokenFrameDocument;
- (void)viewPrivacyPolicy:(id)arg1;
- (void)sendSparkleLog:(id)arg1;
- (void)sendFeedback:(id)arg1;
- (BOOL)fontStyleIsUsed:(id)arg1;
- (BOOL)fontFamilyIsUsed:(id)arg1;
- (void)replaceFontFamily:(id)arg1 withFamily:(id)arg2;
- (void)replaceFonts:(id)arg1;
- (void)refreshFonts:(id)arg1;
- (void)getUsedFonts:(id)arg1 missingFonts:(id)arg2 replacedFonts:(id)arg3;
- (void)restoreMenuItems:(id)arg1;
- (void)saveMenuItems:(id)arg1 forMenu:(id)arg2 inPage:(id)arg3;
- (void)synchronizeMenu:(id)arg1 inPage:(id)arg2;
- (void)synchronizeMenus;
- (void)synchronizeMenusReferencingItem:(id)arg1;
- (void)removeMenuItem:(id)arg1 undo:(BOOL)arg2;
- (void)addMenuItem:(id)arg1 toMenu:(id)arg2 position:(long long)arg3 parent:(id)arg4 undo:(BOOL)arg5;
- (void)windowDidBecomeKey:(id)arg1;
- (void)updatePublishProgress;
- (void)endCreateTextDiffSheet;
- (void)endImportSheet;
- (void)endSiteSettings;
- (void)showImport:(id)arg1;
- (void)refreshSiteSettingsUI;
- (void)openSiteSettingsWithActivePane:(id)arg1 options:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)showSiteSettings:(id)arg1;
- (void)addSiteSearch:(id)arg1;
- (void)addFormButton:(id)arg1;
- (void)addFormRadiobutton:(id)arg1;
- (void)addFormCheckbox:(id)arg1;
- (void)addFormTextInput:(id)arg1;
- (void)addScrollLocation:(id)arg1;
- (void)addEmbed:(id)arg1;
- (void)addElement:(id)arg1;
- (void)addMap:(id)arg1;
- (void)addInstagram:(id)arg1;
- (void)addFacebook:(id)arg1;
- (void)addTwitter:(id)arg1;
- (void)addMenu:(id)arg1;
- (void)addImageGallery:(id)arg1;
- (void)addWideBox:(id)arg1;
- (void)addBox:(id)arg1;
- (void)addAudio:(id)arg1;
- (void)addVideo:(id)arg1;
- (void)addImage:(id)arg1;
- (void)addText:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)zoomFitPage:(id)arg1;
- (void)zoomFitWidth:(id)arg1;
- (void)zoomActualSize:(id)arg1;
- (void)zoomOut:(id)arg1;
- (void)zoomIn:(id)arg1;
- (void)showHideThumbnails:(id)arg1;
- (BOOL)canAsynchronouslyWriteToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3;
- (void)checkCompleteWithFonts:(id)arg1;
- (void)beginCheck;
- (id)uploadManager;
- (void)printDocumentWithSettings:(id)arg1 showPrintPanel:(BOOL)arg2 delegate:(id)arg3 didPrintSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (Class)unarchiver:(id)arg1 cannotDecodeObjectOfClassName:(id)arg2 originalClasses:(id)arg3;
- (id)temporaryFileURL;
- (BOOL)unknownFileFormatError:(id *)arg1;
- (id)doReadLegacyFromURL:(id)arg1 error:(id *)arg2;
- (id)doReadVersion:(id)arg1 error:(id *)arg2;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)awakeFromNib;
- (void)hideScrollbarHack:(id)arg1;
- (BOOL)isEntireFileLoaded;
- (void)windowControllerDidLoadNib:(id)arg1;
- (id)windowNibName;
- (void)canCloseDocumentWithDelegate:(id)arg1 shouldCloseSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (void)moveToURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)close;
- (id)assetReader;
- (id)duplicateAndReturnError:(id *)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

