//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "RDTransferManager.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSString;

@interface RDFTPManager : RDTransferManager
{
    BOOL _initialized;
    BOOL _listingHomeDir;
    BOOL _useRelativePaths;
    long long _internalErrorCode;
    NSMutableDictionary *_threadData;
    long long _threadId;
    long long _mlstSupported;
    long long _sizeSupported;
    long long _connectTimeout;
    NSMutableArray *_curlHandlers;
    NSMutableArray *_curlHandlersStatus;
    NSString *_homeDir;
    NSArray *_lastDirList;
    NSMutableDictionary *_internalErrorCodes;
}

+ (void)curlEnd;
+ (void)curlInit;
+ (long long)defaultPortForProtocol:(id)arg1;
@property(nonatomic) BOOL useRelativePaths; // @synthesize useRelativePaths=_useRelativePaths;
@property(retain, nonatomic) NSMutableDictionary *internalErrorCodes; // @synthesize internalErrorCodes=_internalErrorCodes;
@property(retain, nonatomic) NSArray *lastDirList; // @synthesize lastDirList=_lastDirList;
@property(nonatomic) BOOL listingHomeDir; // @synthesize listingHomeDir=_listingHomeDir;
@property(retain, nonatomic) NSString *homeDir; // @synthesize homeDir=_homeDir;
@property(retain, nonatomic) NSMutableArray *curlHandlersStatus; // @synthesize curlHandlersStatus=_curlHandlersStatus;
@property(retain, nonatomic) NSMutableArray *curlHandlers; // @synthesize curlHandlers=_curlHandlers;
@property(nonatomic) long long connectTimeout; // @synthesize connectTimeout=_connectTimeout;
@property(nonatomic) long long sizeSupported; // @synthesize sizeSupported=_sizeSupported;
@property(nonatomic) long long mlstSupported; // @synthesize mlstSupported=_mlstSupported;
@property(nonatomic) long long threadId; // @synthesize threadId=_threadId;
@property(retain, nonatomic) NSMutableDictionary *threadData; // @synthesize threadData=_threadData;
@property(nonatomic) BOOL initialized; // @synthesize initialized=_initialized;
- (void).cxx_destruct;
- (id)getFullPath:(id)arg1 homeDir:(id)arg2 currentDir:(id)arg3;
- (id)getFullPathQuoted:(id)arg1;
- (id)getErrorMessage:(long long)arg1;
- (BOOL)moveFilesTo:(id)arg1;
- (BOOL)renameFile:(id)arg1 to:(id)arg2;
- (BOOL)deleteFile:(id)arg1;
- (long long)getFileSize:(id)arg1;
- (id)getFileInfoMLST:(id)arg1;
- (id)getFileInfoStandard:(id)arg1;
- (id)getFileInfo:(id)arg1 isDir:(BOOL)arg2;
- (id)getFile:(id)arg1;
- (BOOL)uploadFile:(id)arg1;
- (id)getDirList;
- (id)getDirListInfo:(id)arg1;
- (id)sftpGetDirListWithInfo:(id)arg1;
- (id)ftpGetDirListWithInfoInternal;
- (id)ftpGetDirListWithInfo:(id)arg1;
- (id)getDirListWithInfo:(id)arg1;
- (id)getDirListWithInfo;
- (BOOL)isDir:(id)arg1;
- (BOOL)chDir:(id)arg1;
- (BOOL)rmDir:(id)arg1;
- (BOOL)_mkDir:(id)arg1;
- (BOOL)mkDir:(id)arg1;
- (id)getCurrentPath;
- (void)setCACert:(void *)arg1;
- (BOOL)prepareCURL:(void *)arg1 url:(id)arg2 userPwd:(id)arg3 fileInfo:(id)arg4 forRead:(BOOL)arg5;
- (BOOL)retrieveCertificate;
- (BOOL)ignoreCertificate;
- (BOOL)usePassiveMode;
- (id)getUserPwd;
- (id)getPassword;
- (id)getUser;
- (long long)getPort;
- (id)getHost;
- (id)getCurlProtocol;
- (id)getProtocol;
- (BOOL)isValidIPAddress:(id)arg1;
- (BOOL)isValidHostForProtocol:(id)arg1;
- (BOOL)compareDirList:(id)arg1 withDirList:(id)arg2 withInfo:(BOOL)arg3;
- (BOOL)checkDirList;
- (BOOL)checkParameters;
- (void)reset;
- (void)curlEnd:(void *)arg1 reuseConnection:(BOOL)arg2;
- (void)curlEnd:(void *)arg1;
- (void *)curlInit;
- (long long)maxConcurrentTransfers;
- (BOOL)reuseConnection;
- (BOOL)endTransfer;
- (BOOL)initTransfer;
- (void)dealloc;
- (void)log:(id)arg1 withLogLevel:(int)arg2;
- (BOOL)certificateError;
- (void)setError:(long long)arg1 curlError:(long long)arg2;
- (BOOL)connectionError;
- (void)setInternalErrorCode:(long long)arg1;
- (long long)internalErrorCode;
- (char *)curlErrorBuffer;
- (void)endCommand:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)endCommand:(id)arg1;
- (id)beginCommand:(id)arg1 param:(id)arg2;
- (id)beginCommand:(id)arg1;

@end

