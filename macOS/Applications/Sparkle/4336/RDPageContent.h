//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "RDItem.h"

#import "NSCoding.h"
#import "NSCopying.h"

@class NSArray, NSData, NSString, RDContentDrawing, RDDevice, RDGenerationOptions, RDPage;

@interface RDPageContent : RDItem <NSCoding, NSCopying>
{
    BOOL _preparedPatternBlur;
    NSString *_videoURL;
    RDPage *_page;
    RDGenerationOptions *_options;
    id _patternImage;
    NSString *_loadedPatternID;
    long long _preparedDeviceWidth;
    double _preparedPatternScale;
    long long _preparedPatternBlurRadius;
    id _pattern;
    NSString *_patternID;
    NSData *_lastImageData;
    NSData *_lastPosterData;
    id _cgimage;
    id _postercgimage;
    RDContentDrawing *_contentDrawing;
    RDDevice *_prevDevice;
    long long _deviceNum;
}

+ (int)patternTypeForBackground:(id)arg1;
@property(nonatomic) long long deviceNum; // @synthesize deviceNum=_deviceNum;
@property(retain, nonatomic) RDDevice *prevDevice; // @synthesize prevDevice=_prevDevice;
@property(retain, nonatomic) RDContentDrawing *contentDrawing; // @synthesize contentDrawing=_contentDrawing;
@property(retain, nonatomic) id postercgimage; // @synthesize postercgimage=_postercgimage;
@property(retain, nonatomic) id cgimage; // @synthesize cgimage=_cgimage;
@property(retain, nonatomic) NSData *lastPosterData; // @synthesize lastPosterData=_lastPosterData;
@property(retain, nonatomic) NSData *lastImageData; // @synthesize lastImageData=_lastImageData;
@property(retain, nonatomic) NSString *patternID; // @synthesize patternID=_patternID;
@property(retain, nonatomic) id pattern; // @synthesize pattern=_pattern;
@property(nonatomic) long long preparedPatternBlurRadius; // @synthesize preparedPatternBlurRadius=_preparedPatternBlurRadius;
@property(nonatomic) BOOL preparedPatternBlur; // @synthesize preparedPatternBlur=_preparedPatternBlur;
@property(nonatomic) double preparedPatternScale; // @synthesize preparedPatternScale=_preparedPatternScale;
@property(nonatomic) long long preparedDeviceWidth; // @synthesize preparedDeviceWidth=_preparedDeviceWidth;
@property(retain, nonatomic) NSString *loadedPatternID; // @synthesize loadedPatternID=_loadedPatternID;
@property(retain, nonatomic) id patternImage; // @synthesize patternImage=_patternImage;
@property(retain, nonatomic) RDGenerationOptions *options; // @synthesize options=_options;
@property(nonatomic) __weak RDPage *page; // @synthesize page=_page;
- (void).cxx_destruct;
- (void)upgradeModelObjectWith:(id)arg1;
@property(retain, nonatomic) NSString *videoURL; // @synthesize videoURL=_videoURL;
- (BOOL)hasCustomPatternBackgroundWithUUID:(id)arg1;
- (void)setDefaultValuesForDevice:(id)arg1;
- (void)switchToDevice:(id)arg1;
- (void)removeUnusedDevices:(id)arg1;
- (void)removeDevice:(id)arg1;
- (void)addDevice:(id)arg1;
- (id)anchorWithUUID:(id)arg1;
- (id)anchorWithName:(id)arg1;
- (BOOL)removeAnchor:(id)arg1;
- (void)addAnchor:(id)arg1;
@property(readonly, nonatomic) NSArray *anchors;
- (id)createUniqueAnchorWithFrame:(struct CGRect)arg1;
@property(nonatomic) int pageAlign;
- (id)patternImageFromFile:(id)arg1 scale:(double)arg2 blur:(BOOL)arg3 blurRadius:(long long)arg4;
- (void)reloadImage;
- (void)drawPlaceholderInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (void)drawVideoBackground:(struct CGContext *)arg1 rect:(struct CGRect)arg2 flip:(BOOL)arg3;
- (struct CGSize)posterImageSize;
- (void)drawInContext:(struct CGContext *)arg1 renderingDestination:(int)arg2;
- (BOOL)drawMultiLayer;
- (BOOL)updateStaticLayer:(id)arg1 renderingDestination:(int)arg2;
- (BOOL)isFixedWhenScrolling;
- (void)addCSSPageProperties:(id)arg1 context:(id)arg2;
- (void)addVideoBackgroundToHtmlDocument:(id)arg1 context:(id)arg2;
- (void)generateHtml:(id)arg1 context:(id)arg2;
- (BOOL)backgroundIsVideo;
- (BOOL)backgroundIsCustomPattern;
- (BOOL)backgroundIsSubtlePattern;
- (void)addUsedColorIndexes:(id)arg1;
- (void)remapColors;
- (void)setProperty:(id)arg1 withValue:(id)arg2;
- (void)addItemProperties;
- (double)footerHeightForDevice:(id)arg1;
- (double)contentHeightExcludingFooterElements:(BOOL)arg1 forDevice:(id)arg2;
- (double)contentHeightExcludingFooterElementsForDevice:(id)arg1;
- (double)footerHeight;
- (double)contentHeightExcludingFooterElements:(BOOL)arg1 excludingHiddenElements:(BOOL)arg2;
- (double)visibleContentHeight;
- (double)contentHeightExcludingFooterElements;
- (double)contentHeightForDevice:(id)arg1;
- (double)contentHeight;
- (struct CGRect)cssBoxModelFrameForDevice:(id)arg1;
- (struct CGRect)cssContentFrameForDevice:(id)arg1;
- (struct CGRect)cssGroupFrameForDevice:(id)arg1;
- (struct CGRect)cssFrameForDevice:(id)arg1;
- (void)setFrame:(struct CGRect)arg1 forDevice:(id)arg2;
- (struct CGRect)frameForDevice:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGRect)frame;
- (struct CGRect)drawingExtent;
- (BOOL)isHiddenOnDevice:(id)arg1;
- (BOOL)isHidden;
- (BOOL)isCanvas;
- (id)clone;
- (id)initDummyInPage:(id)arg1 website:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 inPage:(id)arg2 website:(id)arg3;
- (id)initWithCoder:(id)arg1;
- (id)copyInWebsite:(id)arg1 withZone:(struct _NSZone *)arg2;

@end

