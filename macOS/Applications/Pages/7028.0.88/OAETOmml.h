//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class OAETDocumentState, TSUColor, TSWPEquationInfo;

@interface OAETOmml : NSObject
{
    struct _xmlNs *_ommlNs;
    struct stack<_xmlNode *, std::__1::deque<_xmlNode *, std::__1::allocator<_xmlNode *>>> _ommlNodeStack;
    float _defaultFontSize;
    TSWPEquationInfo *_equation;
    OAETDocumentState *_state;
    TSUColor *_defaultFontColor;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(copy, nonatomic) TSUColor *defaultFontColor; // @synthesize defaultFontColor=_defaultFontColor;
@property(nonatomic) float defaultFontSize; // @synthesize defaultFontSize=_defaultFontSize;
@property(retain, nonatomic) OAETDocumentState *state; // @synthesize state=_state;
@property(retain, nonatomic) TSWPEquationInfo *equation; // @synthesize equation=_equation;
- (id)ommlStringWithMmlString:(id)arg1 equation:(id)arg2 state:(id)arg3;
- (struct _xmlNode *)ensureNode:(struct _xmlNode *)arg1 hasFirstChildNamed:(id)arg2;
- (BOOL)nodeNameIsArg:(id)arg1;
- (id)propertiesNodeNameForNodeName:(id)arg1;
- (void)handleMmlNode:(struct _xmlNode *)arg1;
- (void)handleFatalMmlNode:(struct _xmlNode *)arg1;
- (void)handleMmlTextTokenNode:(struct _xmlNode **)arg1 joinWithFollowingSiblings:(BOOL)arg2;
- (void)addRunForMmlTextTokenNode:(struct _xmlNode *)arg1 withText:(id)arg2 forceNormal:(BOOL)arg3;
- (void)addClientTextPropertiesInsideControlPropertiesForMmlNode:(struct _xmlNode *)arg1;
- (void)addClientTextPropertiesForMmlNode:(struct _xmlNode *)arg1;
- (struct _xmlNode *)clientTextPropertiesForMmlNode:(struct _xmlNode *)arg1;
- (id)propertiesOfTextTokenNode:(struct _xmlNode *)arg1;
- (id)resolvedSizeOfTextTokenNode:(struct _xmlNode *)arg1;
- (id)resolvedFontColorOfNode:(struct _xmlNode *)arg1;
- (id)resolvedFontOfTextTokenNode:(struct _xmlNode *)arg1;
- (void)handleMmlTextTokenWithGlyphChildren:(struct _xmlNode *)arg1;
- (id)stringWithContentsOfMmlTextToken:(struct _xmlNode *)arg1;
- (id)rightQuoteOfMmlStringToken:(struct _xmlNode *)arg1;
- (id)leftQuoteOfMmlStringToken:(struct _xmlNode *)arg1;
- (void)handleMmlGlyph:(struct _xmlNode *)arg1;
- (BOOL)textTokenContainsGlyphs:(struct _xmlNode *)arg1;
- (BOOL)mmlElementIsNormalText:(struct _xmlNode *)arg1;
- (id)altTextOfMmlGlyph:(struct _xmlNode *)arg1;
- (int)textTokenClassOfMmlElement:(struct _xmlNode *)arg1;
- (void)writeStyleAndScriptForFont:(id)arg1 normal:(BOOL)arg2;
- (id)fontForMmlNode:(struct _xmlNode *)arg1 mathVariant:(id)arg2 fontStyle:(id)arg3 fontWeight:(id)arg4;
- (void)addMathRunPropertiesForMmlNode:(struct _xmlNode *)arg1 normal:(BOOL)arg2 mathVariant:(id)arg3 fontStyle:(id)arg4 fontWeight:(id)arg5;
- (void)addRunPropertiesForMmlNode:(struct _xmlNode *)arg1 normal:(BOOL)arg2 mathVariant:(id)arg3 fontStyle:(id)arg4 fontWeight:(id)arg5 mathColor:(id)arg6 mathSize:(id)arg7 color:(id)arg8 fontFamily:(id)arg9 fontSize:(id)arg10;
- (void)handleMmlRow:(struct _xmlNode *)arg1;
- (void)handleMmlSubSup:(struct _xmlNode *)arg1 ommlElementName:(const char *)arg2 showSub:(BOOL)arg3 showSup:(BOOL)arg4;
- (void)handleMmlNonNarySubSup:(struct _xmlNode *)arg1 ommlElementName:(const char *)arg2 showSub:(BOOL)arg3 showSup:(BOOL)arg4;
- (void)handleMmlUnderOver:(struct _xmlNode *)arg1;
- (void)handleMmlOverOrUnder:(struct _xmlNode *)arg1 isOver:(BOOL)arg2;
- (BOOL)handleMmlElementAsLimit:(struct _xmlNode *)arg1 isOver:(BOOL)arg2;
- (BOOL)handleMmlRowAsNary:(struct _xmlNode *)arg1;
- (BOOL)mmlNodeIsNary:(struct _xmlNode *)arg1;
- (id)naryMmlElementTypes;
- (BOOL)mmlNodeIsNaryOperator:(struct _xmlNode *)arg1;
- (void)handleMmlPhantom:(struct _xmlNode *)arg1;
- (void)handleMmlPadded:(struct _xmlNode *)arg1;
- (void)addOmmlPhantomForMmlPhantom:(struct _xmlNode *)arg1 mmlPadded:(struct _xmlNode *)arg2;
- (void)addPhantomPropertiesForMmlPhantom:(struct _xmlNode *)arg1 mmlPadded:(struct _xmlNode *)arg2;
- (BOOL)mmlDistanceAttributeIsZero:(const char *)arg1 mmlNode:(struct _xmlNode *)arg2;
- (void)handleMmlLinearFraction:(struct _xmlNode *)arg1;
- (BOOL)mmlNodeIsLinearFraction:(struct _xmlNode *)arg1;
- (void)handleMmlTable:(struct _xmlNode *)arg1;
- (unsigned long long)maxRowCellCountInMmlTable:(struct _xmlNode *)arg1;
- (void)addOmmlEmptyCells:(unsigned long long)arg1;
- (void)handleMmlEquationArrayRow:(struct _xmlNode *)arg1 outputAlignGroup:(char *)arg2;
- (void)addOmmlRunWithAmpersandCount:(unsigned long long)arg1;
- (unsigned long long)countOfAlignElementsInMmlSubtree:(struct _xmlNode *)arg1;
- (unsigned long long)countOfElementsOfType:(int)arg1 inMmlSubtree:(struct _xmlNode *)arg2;
- (BOOL)mmlNodeIsSpecialCollection:(struct _xmlNode *)arg1;
- (BOOL)shouldIgnoreMmlCollection:(struct _xmlNode *)arg1;
- (BOOL)mmlTableIsEquationArray:(struct _xmlNode *)arg1;
- (BOOL)tableStrokeWithNameIsNone:(const char *)arg1 inMmlTable:(struct _xmlNode *)arg2;
- (void)handleMmlMultiScripts:(struct _xmlNode *)arg1;
- (void)convertNoneMmlElementToNull:(struct _xmlNode **)arg1;
- (void)handleMmlFenced:(struct _xmlNode *)arg1;
- (void)handleMmlRoot:(struct _xmlNode *)arg1;
- (void)handleMmlEnclose:(struct _xmlNode *)arg1;
- (void)handleMmlSqrt:(struct _xmlNode *)arg1;
- (void)handleMmlFraction:(struct _xmlNode *)arg1;
- (BOOL)mmlDistanceIsZero:(id)arg1;
- (void)handleMmlDelimiter:(struct _xmlNode *)arg1;
- (BOOL)mmlNodeIsDelimiter:(struct _xmlNode *)arg1;
- (void)handleMmlFunction:(struct _xmlNode *)arg1;
- (BOOL)mmlNodeIsFunction:(struct _xmlNode *)arg1;
- (BOOL)handleMmlElementAsChrGroup:(struct _xmlNode *)arg1 isOver:(BOOL)arg2;
- (BOOL)handleMmlElementAsAccent:(struct _xmlNode *)arg1 isOver:(BOOL)arg2;
- (id)accentStringOfMmlElement:(struct _xmlNode *)arg1 isOver:(BOOL)arg2;
- (BOOL)handleMmlELementAsBar:(struct _xmlNode *)arg1 isOver:(BOOL)arg2;
- (BOOL)mmlElementIsBar:(struct _xmlNode *)arg1;
- (BOOL)mmlElementIsAccented:(struct _xmlNode *)arg1;
- (id)stringByNormalizingSpaceInContentsOfMmlElement:(struct _xmlNode *)arg1;
- (id)stringByNormalizingSpaceInString:(id)arg1;
- (BOOL)naryOperatorIsStretchy:(id)arg1;
- (BOOL)stringIsNaryOperator:(id)arg1;
- (void)createOmmlPropertiesForMmlArgument:(struct _xmlNode *)arg1;
- (unsigned short)upperCombiningCharWithNonCombiningChar:(unsigned short)arg1;
- (void)addOmmlTextNodeWithContents:(id)arg1;
- (id)postprocessedTextWithText:(id)arg1;
- (void)addOmmlEmptyArgumentWithName:(const char *)arg1 forMmlParent:(struct _xmlNode *)arg2;
- (void)addOmmlArgumentWithName:(const char *)arg1 forChildrenOfMmlNode:(struct _xmlNode *)arg2;
- (void)addOmmlArgumentWithName:(const char *)arg1 forMmlNode:(struct _xmlNode *)arg2;
- (void)handleMmlContainer:(struct _xmlNode *)arg1;
- (void)handleMmlContainer:(struct _xmlNode *)arg1 joinTextTokens:(BOOL)arg2;
- (void)handleMmlArgument:(struct _xmlNode *)arg1;
- (id)stringWithContentsOfMmlElement:(struct _xmlNode *)arg1;
- (id)stringWithNameOfMmlElement:(struct _xmlNode *)arg1;
- (struct _xmlNode *)childOfMmlElement:(struct _xmlNode *)arg1 ofType:(int)arg2;
- (struct _xmlNode *)childOfMmlElement:(struct _xmlNode *)arg1 atIndex:(unsigned long long)arg2;
- (unsigned long long)childCountOfMmlElement:(struct _xmlNode *)arg1;
- (struct _xmlNode *)prevSiblingOfMmlElement:(struct _xmlNode *)arg1;
- (struct _xmlNode *)nextSiblingOfMmlElement:(struct _xmlNode *)arg1;
- (struct _xmlNode *)lastChildOfMmlElement:(struct _xmlNode *)arg1;
- (struct _xmlNode *)firstChildOfMmlElement:(struct _xmlNode *)arg1;
- (BOOL)boolValueOfMmlAttribute:(const char *)arg1 ofNode:(struct _xmlNode *)arg2 defaultValue:(BOOL)arg3;
- (id)valueOfMmlAttribute:(const char *)arg1 ofNode:(struct _xmlNode *)arg2;
- (BOOL)boolValueOfMmlString:(id)arg1 defaultValue:(BOOL)arg2;
- (int)elementTypeForMmlElement:(struct _xmlNode *)arg1;
- (void)addOmmlValueNodeWithName:(const char *)arg1 stringValue:(id)arg2;
- (void)addOmmlNodeWithName:(const char *)arg1 contents:(id)arg2;
- (void)addOmmlAttributeWithName:(const char *)arg1 stringValue:(id)arg2;
- (void)addOmmlNodeWithName:(const char *)arg1;
- (void)endOmmlNode;
- (struct _xmlNode *)beginOmmlNodeWithName:(const char *)arg1;
- (struct _xmlNode *)currentNode;

@end

