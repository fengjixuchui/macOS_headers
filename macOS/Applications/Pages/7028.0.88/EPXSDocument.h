//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class EPXDocumentLayoutContext, EPXFootnote, EPXImageBinary, EPXJavaScript, EPXMetadata, EPXStylesheet, NSMutableArray, NSMutableDictionary, NSMutableSet;

@interface EPXSDocument : NSObject
{
    EPXMetadata *mMetadata;
    EPXStylesheet *mStylesheet;
    EPXJavaScript *mJavaScript;
    EPXFootnote *mFootnoteDoc;
    NSMutableArray *mEntries;
    NSMutableArray *mImageBinaries;
    NSMutableSet *mImageNames;
    NSMutableArray *mMediaBinaries;
    NSMutableSet *mMediaNames;
    EPXImageBinary *mCoverImage;
    BOOL _isFixedLayout;
    BOOL _isRTL;
    BOOL _exportNavigationTOC;
    BOOL _is2PagesUp;
    BOOL _cancelled;
    NSMutableArray *_embeddedFonts;
    NSMutableSet *_embeddedFontBinaryUrls;
    EPXDocumentLayoutContext *_layoutContext;
    NSMutableDictionary *_pageHrefToPageListItemMap;
    NSMutableArray *_documentNavInfos;
    NSMutableArray *_inlineNavInfos;
    NSMutableArray *_floatingNavInfos;
    NSMutableArray *_navPointsForFixedLayout;
    unsigned long long _minimumUsedLevel;
    struct CGSize _pageSize;
    struct CGSize _coverImageSize;
}

+ (id)p_addMediaBinaryIsAudioOnly:(BOOL)arg1 tspdata:(id)arg2 preferredName:(id)arg3 binaryNameSet:(id)arg4 binaryArray:(id)arg5;
+ (id)p_addBinaryWithClass:(Class)arg1 data:(id)arg2 preferredName:(id)arg3 binaryNameSet:(id)arg4 binaryArray:(id)arg5;
+ (id)cleanName:(id)arg1 binaryNameSet:(id)arg2;
- (void).cxx_destruct;
@property(nonatomic) unsigned long long minimumUsedLevel; // @synthesize minimumUsedLevel=_minimumUsedLevel;
@property(retain, nonatomic) NSMutableArray *navPointsForFixedLayout; // @synthesize navPointsForFixedLayout=_navPointsForFixedLayout;
@property(readonly, nonatomic) NSMutableArray *floatingNavInfos; // @synthesize floatingNavInfos=_floatingNavInfos;
@property(readonly, nonatomic) NSMutableArray *inlineNavInfos; // @synthesize inlineNavInfos=_inlineNavInfos;
@property(readonly, nonatomic) NSMutableArray *documentNavInfos; // @synthesize documentNavInfos=_documentNavInfos;
@property(readonly, nonatomic) NSMutableDictionary *pageHrefToPageListItemMap; // @synthesize pageHrefToPageListItemMap=_pageHrefToPageListItemMap;
@property(readonly, nonatomic) EPXDocumentLayoutContext *layoutContext; // @synthesize layoutContext=_layoutContext;
@property(readonly, getter=isCancelled) BOOL cancelled; // @synthesize cancelled=_cancelled;
@property(nonatomic) BOOL is2PagesUp; // @synthesize is2PagesUp=_is2PagesUp;
@property(nonatomic) BOOL exportNavigationTOC; // @synthesize exportNavigationTOC=_exportNavigationTOC;
@property(nonatomic) struct CGSize coverImageSize; // @synthesize coverImageSize=_coverImageSize;
@property(nonatomic) struct CGSize pageSize; // @synthesize pageSize=_pageSize;
@property(nonatomic) BOOL isRTL; // @synthesize isRTL=_isRTL;
@property(nonatomic) BOOL isFixedLayout; // @synthesize isFixedLayout=_isFixedLayout;
@property(retain, nonatomic) NSMutableSet *embeddedFontBinaryUrls; // @synthesize embeddedFontBinaryUrls=_embeddedFontBinaryUrls;
@property(retain, nonatomic) NSMutableArray *embeddedFonts; // @synthesize embeddedFonts=_embeddedFonts;
- (void)mapNavInfosForCurrentPage;
- (void)insertCollectedInlineNavInfos;
- (void)insertCollectedFloatingNavInfos;
- (long long)compareDrawablePositionsForNavInfo1:(id)arg1 navInfo2:(id)arg2;
- (void)collectFloatingNavInfo:(id)arg1 href:(id)arg2 level:(unsigned long long)arg3 position:(struct CGPoint)arg4;
- (void)collectInlineNavInfo:(id)arg1 href:(id)arg2 level:(unsigned long long)arg3 charIndex:(unsigned long long)arg4 position:(struct CGPoint)arg5;
- (void)addNestedNavPoint:(id)arg1 href:(id)arg2;
- (void)addNavPoint:(id)arg1 href:(id)arg2;
- (void)setCoverImage:(id)arg1 preferredName:(id)arg2;
- (id)coverImage;
- (id)cleanAndMakeUniqueName:(id)arg1 nameSet:(id)arg2;
- (id)addMediaBinaryWithTSPData:(id)arg1 preferredName:(id)arg2 audioOnly:(BOOL)arg3;
- (id)mediaBinaries;
- (void)removeImageBinary:(id)arg1;
- (id)addImageBinaryWithData:(id)arg1 preferredName:(id)arg2;
- (id)imageBinaries;
- (void)insertEntry:(id)arg1 afterEntryType:(int)arg2 defaultShouldPrepend:(BOOL)arg3;
- (void)insertEntry:(id)arg1 beforeEntryType:(int)arg2;
- (long long)indexOfFirstEntryType:(int)arg1;
- (void)insertEntry:(id)arg1 at:(unsigned long long)arg2;
- (void)addEntry:(id)arg1;
- (id)entries;
- (BOOL)hasChapters;
- (id)footnotes;
- (BOOL)hasFootnotes;
- (id)javaScript;
- (id)stylesheet;
- (id)metadata;
- (void)cancel;
- (id)initWithLayoutContext:(id)arg1;

@end

