//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class OADTable, OADTableProperties, OADTableStyle, OAITDrawableContainer, OAITDrawingState, TSTTableInfo;

@interface OAITTable : NSObject
{
    OADTable *mSourceTable;
    OADTableProperties *mSourceTableProperties;
    OADTableStyle *mSourceTableStyle;
    int mColumnCount;
    int mRowCount;
    struct ChVector<float> *mColumnWidths;
    struct ChVector<float> *mRowHeights;
    int mHeaderRowCount;
    int mFooterRowCount;
    int mHeaderColumnCount;
    OAITDrawingState *mDrawingState;
    TSTTableInfo *mTargetTableInfo;
    TSTTableInfo *mTargetTableModel;
    OAITDrawableContainer *mTargetDrawableContainer;
    struct TCStrokeMatrix *mDefaultHorizontalStrokes;
    struct TCStrokeMatrix *mDefaultVerticalStrokes;
}

+ (void)mapTable:(id)arg1 toDrawableContainer:(id)arg2 drawingState:(id)arg3;
+ (id)createTablePresetWithContext:(id)arg1 presetID:(unsigned long long)arg2 tableStyle:(id)arg3 drawingState:(id)arg4;
+ (id)mapTableStyle:(id)arg1 tableProperties:(id)arg2 drawingState:(id)arg3;
+ (id)propertyMapsForTableStyle:(id)arg1 tableProperties:(id)arg2 drawingState:(id)arg3;
+ (id)resolvedStrokeForVectorRegion:(int)arg1 tableStyle:(id)arg2;
+ (id)resolvedParagraphPropertiesForCellRegion:(int)arg1 tableStyle:(id)arg2 tableProperties:(id)arg3 defaultTextStyle:(id)arg4;
+ (id)resolvedFillForCellRegion:(int)arg1 tableStyle:(id)arg2 tableProperties:(id)arg3;
+ (id)resolvedTablePartStyleForCellRegion:(int)arg1 tableStyle:(id)arg2 tableProperties:(id)arg3;
+ (id)mapFill:(id)arg1 size:(struct CGSize)arg2 drawingState:(id)arg3;
+ (id)mapStroke:(id)arg1 drawingState:(id)arg2;
- (void).cxx_destruct;
- (id)strokeForVectorNormalToDir1:(int)arg1 i1:(int)arg2 i2:(int)arg3;
- (int)regionForVectorNormalToDir1:(int)arg1 i1:(int)arg2 i2:(int)arg3;
- (int)cellRegionAtRow:(int)arg1 column:(int)arg2;
- (float)rowHeight:(int)arg1;
- (float)columnWidth:(int)arg1;
- (void)mapGrid;
- (int)headerColumnCount;
- (int)footerRowCount;
- (int)headerRowCount;
- (void)map;
- (void)collectDefaults;
- (void)mapCellAtRow:(int)arg1 column:(int)arg2;
- (void)mapTextInSourceCell:(id)arg1 toTargetCell:(id)arg2 cellSize:(struct CGSize)arg3;
- (void)mapSourceCellProperties:(id)arg1 atRow:(int)arg2 column:(int)arg3 toTargetCell:(id)arg4 cellSize:(struct CGSize)arg5;
- (void)mapSourceCellBorderProperties:(id)arg1 atRow:(int)arg2 column:(int)arg3 toTargetCell:(id)arg4;
- (void)mapSourceCellProperties:(id)arg1 atRow:(int)arg2 column:(int)arg3 toPropertyMap:(id)arg4 cellSize:(struct CGSize)arg5;
- (id)resolvedStrokeForVectorNormalToDir1:(int)arg1 i1:(int)arg2 i2:(int)arg3;
- (struct CGSize)mapSizeOfCell:(id)arg1;
- (void)dealloc;
- (id)initWithSourceTable:(id)arg1 targetDrawableContainer:(id)arg2 drawingState:(id)arg3;

@end

