//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSMutableArray;

@interface TPSectionHint : NSObject
{
    NSMutableArray *_pageHints;
    unsigned long long _documentStartPageIndex;
}

+ (BOOL)verifyHints:(id)arg1 withBodyStorage:(id)arg2 upToPageIndex:(unsigned long long)arg3;
- (void).cxx_destruct;
@property(nonatomic) unsigned long long documentStartPageIndex; // @synthesize documentStartPageIndex=_documentStartPageIndex;
@property(readonly, nonatomic) NSArray *pageHints; // @synthesize pageHints=_pageHints;
-     // Error parsing type: v48@0:8^{SectionHintArchive=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<TP::PageHintArchive>=^{Arena}ii^{Rep}}I}16@24@32@?40, name: saveToArchive:archiver:context:shouldArchiveHintBlock:
-     // Error parsing type: @32@0:8r^{SectionHintArchive=^^?{InternalMetadataWithArena=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{RepeatedPtrField<TP::PageHintArchive>=^{Arena}ii^{Rep}}I}16@24, name: initWithArchive:unarchiver:
- (void)setPageHints:(id)arg1;
- (BOOL)containsDocumentPageIndex:(unsigned long long)arg1;
- (BOOL)hasEndOfTextLayoutBeforePageIndex:(unsigned long long)arg1;
- (BOOL)hasPageHintOfKind:(long long)arg1 beforePageIndex:(unsigned long long)arg2;
- (BOOL)hasPageHintOfKind:(long long)arg1 atPageIndex:(unsigned long long)arg2;
- (void)trimPageHintsFromPageIndex:(unsigned long long)arg1;
- (id)pageHintForPageIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) struct _NSRange documentPageRange;
@property(readonly, nonatomic) unsigned long long lastPageIndex;
@property(readonly, nonatomic) unsigned long long pageCountWithoutFillerPage;
@property(readonly, nonatomic) unsigned long long pageCount;
- (id)copyForCaching;
- (id)copyForArchiving;
- (id)init;

@end

