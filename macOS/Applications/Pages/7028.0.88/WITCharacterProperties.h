//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface WITCharacterProperties : NSObject
{
}

+ (unsigned short)fontSizeFrom:(id)arg1;
+ (id)mapShadowFrom:(id)arg1 inheritanceList:(id)arg2 fontSize:(short)arg3 overridesOnly:(BOOL)arg4 drawingState:(id)arg5;
+ (void)mapFontFrom:(id)arg1 parent:(id)arg2 languageType:(int)arg3 to:(id)arg4 documentState:(id)arg5;
+ (void)setWritingDirection:(int)arg1 atCharIndex:(unsigned long long)arg2 textState:(id)arg3;
+ (id)mapProperties:(id)arg1 parent:(id)arg2 languageType:(int)arg3 overridesOnly:(BOOL)arg4 textState:(id)arg5;
+ (void)handleChangeTrackingWithProperties:(id)arg1 parent:(id)arg2 languageType:(int)arg3 range:(struct _NSRange)arg4 textState:(id)arg5 field:(BOOL)arg6;
+ (void)addChangeKind:(int)arg1 editDate:(id)arg2 authorIndex:(unsigned long long)arg3 field:(BOOL)arg4 storage:(id)arg5 range:(struct _NSRange)arg6 textState:(id)arg7 changeTrackingSupported:(BOOL)arg8;
+ (void)addChange:(id)arg1 toStorage:(id)arg2 range:(struct _NSRange)arg3 changeTrackingSupported:(BOOL)arg4;
+ (void)fixDeletionDate:(id)arg1 onStorage:(id)arg2 range:(struct _NSRange)arg3;
+ (_Bool)reusePreviousChangeTrackingIfSameAuthor:(id)arg1 forStorage:(id)arg2 range:(struct _NSRange)arg3 ctAttributeKind:(unsigned long long)arg4;
+ (void)subtractFlattenedPropertiesFromPropertyMap:(id)arg1 characterStyle:(id)arg2 paragraphStyle:(id)arg3 textState:(id)arg4;
+ (id)fontNamePropertySet;
+ (id)flattenedPropertySet;
+ (id)baseStyleFor:(id)arg1 documentState:(id)arg2;
+ (BOOL)rightToLeftChangedInInheritanceList:(id)arg1;
+ (void)map:(id)arg1 to:(id)arg2 parent:(id)arg3 parentColor:(id)arg4 languageType:(int)arg5 overridesOnly:(BOOL)arg6 documentState:(id)arg7;
+ (void)mapInheritanceList:(id)arg1 to:(id)arg2 parent:(id)arg3 parentColor:(id)arg4 languageType:(int)arg5 overridesOnly:(BOOL)arg6 documentState:(id)arg7;
+ (id)colorForWordHighlight:(int)arg1;
+ (id)fontColor:(id)arg1 parent:(id)arg2 documentState:(id)arg3;
+ (id)localeFor:(id)arg1 parent:(id)arg2 documentState:(id)arg3;
+ (BOOL)isContentsFormattingChangedFor:(id)arg1 parent:(id)arg2 documentState:(id)arg3;
+ (BOOL)isContentsInsertedFor:(id)arg1 parent:(id)arg2 documentState:(id)arg3;
+ (BOOL)isContentsDeletedFor:(id)arg1 parent:(id)arg2 documentState:(id)arg3;
+ (BOOL)isContentsHiddenFor:(id)arg1 parent:(id)arg2 documentState:(id)arg3;
+ (id)inheritanceListFor:(id)arg1 parent:(id)arg2 documentState:(id)arg3;
+ (id)overridingProperties:(id)arg1 parent:(id)arg2 property:(SEL)arg3 documentState:(id)arg4;
+ (id)propertiesAndOriginIn:(id)arg1 overridden:(SEL)arg2;
+ (BOOL)boolPropertyIn:(id)arg1 parent:(id)arg2 selector:(SEL)arg3 overridden:(SEL)arg4 documentState:(id)arg5;
+ (BOOL)boolPropertyIn:(id)arg1 selector:(SEL)arg2 overridden:(SEL)arg3;
+ (id)propertiesIn:(id)arg1 overridden:(SEL)arg2;
+ (void)mapItalicFrom:(id)arg1 to:(id)arg2 inheritanceList:(id)arg3 overridesOnly:(BOOL)arg4 rightToLeft:(BOOL)arg5;
+ (void)mapBoldFrom:(id)arg1 to:(id)arg2 inheritanceList:(id)arg3 overridesOnly:(BOOL)arg4 rightToLeft:(BOOL)arg5;
+ (BOOL)rightToLeftFrom:(id)arg1;
+ (void)mapLanguageFrom:(id)arg1 to:(id)arg2 languageType:(int)arg3 overridesOnly:(BOOL)arg4 documentState:(id)arg5;
+ (int)languageFrom:(id)arg1 languageType:(int)arg2 overridesOnly:(BOOL)arg3 documentState:(id)arg4;
+ (int)digInInheritenceList:(id)arg1 forLanguageMatching:(int)arg2 documentState:(id)arg3;
+ (BOOL)language:(int)arg1 matchesUseLang:(int)arg2;
+ (void)mapEmphasisMarkFrom:(id)arg1 to:(id)arg2 overridesOnly:(BOOL)arg3 documentState:(id)arg4;
+ (void)mapVerticalAlignFrom:(id)arg1 to:(id)arg2 overridesOnly:(BOOL)arg3 documentState:(id)arg4;
+ (void)mapCapitalizationFrom:(id)arg1 to:(id)arg2 overridesOnly:(BOOL)arg3 documentState:(id)arg4;
+ (void)mapUnderlineFrom:(id)arg1 to:(id)arg2 parent:(id)arg3 overridesOnly:(BOOL)arg4 documentState:(id)arg5;
+ (void)mapColorFrom:(id)arg1 to:(id)arg2 parent:(id)arg3 parentColor:(id)arg4 overridesOnly:(BOOL)arg5 documentState:(id)arg6;
+ (void)mapUnderlineFrom:(int)arg1 to:(int *)arg2 width:(float *)arg3 words:(char *)arg4;
+ (int)boolCharPropertyIn:(id)arg1 selector:(SEL)arg2 overridden:(SEL)arg3;

@end

