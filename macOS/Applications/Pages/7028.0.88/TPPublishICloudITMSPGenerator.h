//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSError, NSMutableArray, NSMutableDictionary, NSOperationQueue, NSString, NSURL, TPPublishSessionAuthenticator;
@protocol TPBookPublishingDelegate;

@interface TPPublishICloudITMSPGenerator : NSObject
{
    NSMutableArray *_tasks;
    NSOperationQueue *_URLSessionQueue;
    BOOL _uploadedCoverImage;
    BOOL _isInitialized;
    BOOL _uploadedFonts;
    BOOL _isCancelling;
    NSError *_error;
    TPPublishSessionAuthenticator *_authenticator;
    NSString *_outputLog;
    NSArray *_itmsWarnings;
    NSArray *_itmsErrors;
    id <TPBookPublishingDelegate> _delegate;
    NSURL *_apiURL;
    NSString *_sessionId;
    NSString *_publishJobId;
    NSURL *_epubDownloadURL;
    unsigned long long _jobRetryCount;
    NSMutableDictionary *_ttcFontCache;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableDictionary *ttcFontCache; // @synthesize ttcFontCache=_ttcFontCache;
@property(nonatomic) unsigned long long jobRetryCount; // @synthesize jobRetryCount=_jobRetryCount;
@property(nonatomic) BOOL isCancelling; // @synthesize isCancelling=_isCancelling;
@property(nonatomic) BOOL uploadedFonts; // @synthesize uploadedFonts=_uploadedFonts;
@property(retain, nonatomic) NSURL *epubDownloadURL; // @synthesize epubDownloadURL=_epubDownloadURL;
@property(copy, nonatomic) NSString *publishJobId; // @synthesize publishJobId=_publishJobId;
@property(copy, nonatomic) NSString *sessionId; // @synthesize sessionId=_sessionId;
@property(copy, nonatomic) NSURL *apiURL; // @synthesize apiURL=_apiURL;
@property(nonatomic) __weak id <TPBookPublishingDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) BOOL isInitialized; // @synthesize isInitialized=_isInitialized;
@property(nonatomic) BOOL uploadedCoverImage; // @synthesize uploadedCoverImage=_uploadedCoverImage;
@property(retain, nonatomic) NSArray *itmsErrors; // @synthesize itmsErrors=_itmsErrors;
@property(retain, nonatomic) NSArray *itmsWarnings; // @synthesize itmsWarnings=_itmsWarnings;
@property(retain, nonatomic) NSString *outputLog; // @synthesize outputLog=_outputLog;
@property(retain, nonatomic) TPPublishSessionAuthenticator *authenticator; // @synthesize authenticator=_authenticator;
@property(copy, nonatomic) NSError *error; // @synthesize error=_error;
- (void)resetError;
@property(readonly, nonatomic) BOOL hasSessionId;
- (void)postSendToApple:(id)arg1 sellerId:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)downloadSummaryFileErrors:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)resetPublishLogAndWarnings;
- (void)loadPublishingResultsOfOutputType:(unsigned long long)arg1 sessionId:(id)arg2 publishJobId:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)loadPublishLogAndWarnings:(id)arg1 publishJobId:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)postPublish:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)postInsertEPUB:(id)arg1 isSample:(BOOL)arg2 isForPreview:(BOOL)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)getCoverValidationError:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)downloadCoverImageFromURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)postInsertCoverImage:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)zippedDataForFonts:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)embeddableFontNamesInDocument;
- (void)postInsertFontsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)summaryFileURL:(id)arg1;
- (id)exportedDocumentURL:(id)arg1;
- (void)waitForJob:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)getJobStatus:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (unsigned long long)jobStatusFromString:(id)arg1;
- (void)postInitialize:(CDUnknownBlockType)arg1;
- (void)cancel;
- (void)postNSURLRequest:(id)arg1 responseHandler:(CDUnknownBlockType)arg2;
- (id)initWithDelegate:(id)arg1;

@end

