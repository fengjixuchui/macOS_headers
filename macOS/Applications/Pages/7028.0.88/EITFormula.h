//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface EITFormula : NSObject
{
}

+ (void)mapFormulaWarning:(id)arg1 to:(id)arg2 state:(id)arg3;
+ (unsigned long long)sheetIndexFromFormula:(id)arg1 workbook:(id)arg2;
+ (_Bool)formulaNeedsDefaultDecimalFormat:(id)arg1 state:(id)arg2;
+ (_Bool)processRangeWithState:(id)arg1;
+ (void)processParenWithState:(id)arg1;
+ (void)processUnionWithState:(id)arg1;
+ (void)processArea3DOperandWithTableID:(id)arg1 row1:(int)arg2 rowRelative1:(_Bool)arg3 column1:(int)arg4 columnRelative1:(_Bool)arg5 row2:(int)arg6 rowRelative2:(_Bool)arg7 column2:(int)arg8 columnRelative2:(_Bool)arg9 rowReference:(_Bool)arg10 columnReference:(_Bool)arg11 state:(id)arg12;
+ (void)processAreaOperandWithRow1:(int)arg1 rowRelative1:(_Bool)arg2 column1:(int)arg3 columnRelative1:(_Bool)arg4 row2:(int)arg5 rowRelative2:(_Bool)arg6 column2:(int)arg7 columnRelative2:(_Bool)arg8 rowReference:(_Bool)arg9 columnReference:(_Bool)arg10 state:(id)arg11;
+ (void)processReference3DOperandWithTableID:(id)arg1 row:(int)arg2 rowRelative:(_Bool)arg3 column:(int)arg4 columnRelative:(_Bool)arg5 state:(id)arg6;
+ (void)processReferenceOperandWithRow:(int)arg1 rowRelative:(_Bool)arg2 column:(int)arg3 columnRelative:(_Bool)arg4 state:(id)arg5;
+ (void)processArrayOperandWithRows:(unsigned int)arg1 columns:(unsigned short)arg2 state:(id)arg3;
+ (void)processArrayErrorValueWithState:(id)arg1;
+ (void)processArrayStringOperand:(id)arg1 state:(id)arg2;
+ (void)processArrayBooleanOperand:(BOOL)arg1 state:(id)arg2;
+ (void)processArrayNumberOperand:(double)arg1 state:(id)arg2;
+ (void)processFunctionWithName:(id)arg1 argumentCount:(int)arg2 state:(id)arg3;
+ (void)processOperator:(int)arg1 argumentCount:(int)arg2 state:(id)arg3;
+ (void)processBooleanOperand:(BOOL)arg1 state:(id)arg2;
+ (void)processStringOperand:(id)arg1 state:(id)arg2;
+ (void)processEmptyArgument:(id)arg1;
+ (void)processNumberOperand:(double)arg1 state:(id)arg2;
+ (struct TSCEASTNodeArray *)getTsNodeArray:(id)arg1 sheet:(id)arg2 inChart:(BOOL)arg3 arguments:(unsigned int *)arg4 rowNumber:(int)arg5 columnNumber:(int)arg6;
+ (void)map:(id)arg1 rowNumber:(int)arg2 columnNumber:(int)arg3 to:(id)arg4 state:(id)arg5;
+ (void)reportFunctionForAnalyticsWithState:(id)arg1 message:(id)arg2;
+ (void)reportFunctionForAnalytics:(id)arg1 inFormulaString:(id)arg2;
+ (void)mapFormulaWithState:(id)arg1;
+ (void)processFunction:(int)arg1 argumentCount:(int)arg2 state:(id)arg3;
+ (void)processArrayAtIndex:(unsigned int)arg1 state:(id)arg2;
+ (void)processControlAtIndex:(unsigned int)arg1 state:(id)arg2;
+ (void)processOperatorAtIndex:(unsigned int)arg1 state:(id)arg2;
+ (void)processOperandAtIndex:(unsigned int)arg1 state:(id)arg2;
+ (void)map:(id)arg1 tsNodeArray:(struct TSCEASTNodeArray *)arg2 sheet:(id)arg3 inChart:(BOOL)arg4 arguments:(unsigned int *)arg5 rowNumber:(int)arg6 columnNumber:(int)arg7;

@end

