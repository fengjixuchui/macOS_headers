//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class ICAccount, ICCloudSyncingObject, ICFolder, NFFolder, NSArray, NSMutableArray, NSMutableSet;

@interface ICMoveDecision : NSObject
{
    BOOL _hasSanitizedAndScreenedModernSourceObjects;
    BOOL _allowsManagedToUnmanagedMove;
    BOOL _allowsUnmanagedToManagedMove;
    NSArray *_modernSourceObjects;
    NSArray *_htmlSourceObjects;
    ICCloudSyncingObject *_modernDestination;
    NFFolder *_htmlDestinationFolder;
    unsigned long long _type;
    unsigned long long _additionalStep;
    NSArray *_guiltyObjects;
    NSMutableArray *_lockedObjectInSource;
    NSArray *_modernNotes;
    NSArray *_htmlNotes;
    NSMutableSet *_filteredModernSourceObjects;
    NSMutableArray *_sanitizedFilteredModernSourceObjects;
    NSMutableArray *_ownedSharedRootObjectsInSource;
    NSMutableArray *_joinedSharedRootObjectsInSource;
    NSMutableArray *_readWriteSharedSubObjectsInSource;
    NSMutableArray *_readOnlySharedSubObjectsInSource;
    NSArray *_modernFoldersInSource;
    NSMutableSet *_accountsOfModernSourceObjects;
    NSMutableSet *_accountsOfHTMLSourceObjects;
    NSMutableArray *_privateModernNoteWithAttachmentsInSource;
    NSMutableArray *_sharedObjectsInSource;
}

+ (BOOL)shouldCopyThenDeleteWhenMovingObject:(id)arg1 toNoteContainer:(id)arg2;
+ (BOOL)isValidHTMLDestinationObject:(id)arg1;
+ (BOOL)isValidModernDestinationObject:(id)arg1;
+ (BOOL)isValidHTMLSourceObject:(id)arg1;
+ (BOOL)isValidModernSourceObject:(id)arg1;
+ (id)objectsForMakingDecisionForNonSharedFolder:(id)arg1;
- (void).cxx_destruct;
@property(nonatomic) BOOL allowsUnmanagedToManagedMove; // @synthesize allowsUnmanagedToManagedMove=_allowsUnmanagedToManagedMove;
@property(nonatomic) BOOL allowsManagedToUnmanagedMove; // @synthesize allowsManagedToUnmanagedMove=_allowsManagedToUnmanagedMove;
@property(nonatomic) BOOL hasSanitizedAndScreenedModernSourceObjects; // @synthesize hasSanitizedAndScreenedModernSourceObjects=_hasSanitizedAndScreenedModernSourceObjects;
@property(retain, nonatomic) NSMutableArray *sharedObjectsInSource; // @synthesize sharedObjectsInSource=_sharedObjectsInSource;
@property(retain, nonatomic) NSMutableArray *privateModernNoteWithAttachmentsInSource; // @synthesize privateModernNoteWithAttachmentsInSource=_privateModernNoteWithAttachmentsInSource;
@property(retain, nonatomic) NSMutableSet *accountsOfHTMLSourceObjects; // @synthesize accountsOfHTMLSourceObjects=_accountsOfHTMLSourceObjects;
@property(retain, nonatomic) NSMutableSet *accountsOfModernSourceObjects; // @synthesize accountsOfModernSourceObjects=_accountsOfModernSourceObjects;
@property(retain, nonatomic) NSArray *modernFoldersInSource; // @synthesize modernFoldersInSource=_modernFoldersInSource;
@property(retain, nonatomic) NSMutableArray *readOnlySharedSubObjectsInSource; // @synthesize readOnlySharedSubObjectsInSource=_readOnlySharedSubObjectsInSource;
@property(retain, nonatomic) NSMutableArray *readWriteSharedSubObjectsInSource; // @synthesize readWriteSharedSubObjectsInSource=_readWriteSharedSubObjectsInSource;
@property(retain, nonatomic) NSMutableArray *joinedSharedRootObjectsInSource; // @synthesize joinedSharedRootObjectsInSource=_joinedSharedRootObjectsInSource;
@property(retain, nonatomic) NSMutableArray *ownedSharedRootObjectsInSource; // @synthesize ownedSharedRootObjectsInSource=_ownedSharedRootObjectsInSource;
@property(retain, nonatomic) NSMutableArray *sanitizedFilteredModernSourceObjects; // @synthesize sanitizedFilteredModernSourceObjects=_sanitizedFilteredModernSourceObjects;
@property(retain, nonatomic) NSMutableSet *filteredModernSourceObjects; // @synthesize filteredModernSourceObjects=_filteredModernSourceObjects;
@property(retain, nonatomic) NSArray *htmlNotes; // @synthesize htmlNotes=_htmlNotes;
@property(retain, nonatomic) NSArray *modernNotes; // @synthesize modernNotes=_modernNotes;
@property(retain, nonatomic) NSMutableArray *lockedObjectInSource; // @synthesize lockedObjectInSource=_lockedObjectInSource;
@property(readonly, nonatomic) NSArray *guiltyObjects; // @synthesize guiltyObjects=_guiltyObjects;
@property(readonly, nonatomic) unsigned long long additionalStep; // @synthesize additionalStep=_additionalStep;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
@property(readonly, nonatomic) NFFolder *htmlDestinationFolder; // @synthesize htmlDestinationFolder=_htmlDestinationFolder;
@property(readonly, nonatomic) ICCloudSyncingObject *modernDestination; // @synthesize modernDestination=_modernDestination;
@property(readonly, nonatomic) NSArray *htmlSourceObjects; // @synthesize htmlSourceObjects=_htmlSourceObjects;
@property(readonly, nonatomic) NSArray *modernSourceObjects; // @synthesize modernSourceObjects=_modernSourceObjects;
@property(readonly, nonatomic) ICAccount *modernDestinationAccount;
@property(readonly, nonatomic) ICFolder *modernDestinationFolder;
@property(readonly, nonatomic) BOOL shouldContinueDecisionMaking;
- (id)htmlAccountForObject:(id)arg1;
- (id)accountForObject:(id)arg1;
@property(readonly, nonatomic) BOOL hasLockedObjects;
- (void)_sanitizeAndScreenTheFilteredModernSourceObjectsIfNecessary;
- (void)_makeDecisionForMovingHTMLObjectsToHTMLDestination;
- (void)_makeDecisionForMovingHTMLObjectsToModernDestination;
- (void)_makeDecisionForMovingModernObjectsToHTMLDestination;
- (void)_makeDecisionForMovingModernObjectsToModernDestination;
- (void)_makeDecisionForMovingBetweenManagedAndUnmanagedAccounts;
- (id)typeString;
- (id)description;
@property(readonly, nonatomic) BOOL shouldProceed;
@property(readonly, nonatomic) BOOL shouldMove;
- (void)_setDecisionWithType:(unsigned long long)arg1 guiltyObjects:(id)arg2;
- (void)_setDecisionWithType:(unsigned long long)arg1 additionalStep:(unsigned long long)arg2 guiltyObjects:(id)arg3;
- (id)initWithSourceObjects:(id)arg1 destination:(id)arg2 allowsManagedToUnmanagedMove:(BOOL)arg3 allowsUnmanagedToManagedMove:(BOOL)arg4;
- (id)initWithSourceObjects:(id)arg1 destination:(id)arg2;

@end

