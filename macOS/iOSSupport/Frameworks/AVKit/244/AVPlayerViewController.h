//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <AVKit/AVContentOverlayViewDelegate-Protocol.h>
#import <AVKit/AVFullScreenViewControllerDelegate-Protocol.h>
#import <AVKit/AVPictureInPictureContentSource-Protocol.h>
#import <AVKit/AVPictureInPictureControllerDelegate-Protocol.h>
#import <AVKit/AVPlaybackControlsVisibilityControllerDelegate-Protocol.h>
#import <AVKit/AVTransitionControllerDelegate-Protocol.h>
#import <AVKit/UIGestureRecognizerDelegate-Protocol.h>
#import <AVKit/UIPopoverPresentationControllerDelegate-Protocol.h>

@class AVBehaviorStorage, AVContentOverlayView, AVFullScreenViewController, AVObservationController, AVPictureInPictureController, AVPlaybackControlsController, AVPlaybackControlsVisibilityController, AVPlayer, AVPlayerController, AVPlayerControllerVolumeAnimator, AVPlayerView, AVPlayerViewControllerContentView, AVPlayerViewControllerCustomControlsView, AVPresentationContext, AVSecondScreenConnection, AVTransitionController, NSArray, NSDictionary, NSMutableDictionary, NSNumber, NSString, NSValue, UIGestureRecognizer, UIPopoverPresentationController, UIView, UIWindow, __AVPlayerLayerView;
@protocol AVPlayerViewControllerContentTransitioning_NewsOnly, AVPlayerViewControllerDelegate, AVTouchBarMacHelper;

@interface AVPlayerViewController : UIViewController <AVPictureInPictureControllerDelegate, UIGestureRecognizerDelegate, UIPopoverPresentationControllerDelegate, AVPlaybackControlsVisibilityControllerDelegate, AVFullScreenViewControllerDelegate, AVTransitionControllerDelegate, AVPictureInPictureContentSource, AVContentOverlayViewDelegate>
{
    BOOL _playerShouldAutoplay;
    BOOL _showsPlaybackControls;
    BOOL _requiresLinearPlayback;
    long long _videoGravity;
    BOOL _allowsPictureInPicturePlayback;
    BOOL _hasClientSetVideoGravity;
    BOOL _canShowPictureInPictureButton;
    NSDictionary *_pixelBufferAttributes;
    AVSecondScreenConnection *_secondScreenConnection;
    AVPictureInPictureController *_pictureInPictureController;
    UIPopoverPresentationController *_mediaSelectionPopoverPresentationController;
    AVTransitionController *_transitionController;
    AVPlaybackControlsVisibilityController *_playbackControlsVisibilityController;
    AVPlaybackControlsController *_playbackControlsController;
    AVPlayerView *_playerViewControllerView;
    NSValue *_overrideLayoutMarginsWhenEmbeddedInline;
    struct CGAffineTransform _overrideTransformForProminentPlayButton;
    BOOL _canToggleVideoGravityWhenEmbeddedInline;
    BOOL _playbackControlsShouldControlSystemVolume;
    BOOL _updatesNowPlayingInfoCenter;
    BOOL _readyForDisplay;
    BOOL _entersFullScreenWhenPlaybackBegins;
    BOOL _exitsFullScreenWhenPlaybackEnds;
    BOOL _shouldUseNetworkingResourcesForLiveStreamingWhilePaused;
    BOOL __hasBegunObservation;
    BOOL _hasPerformedInitialSetup;
    BOOL _wasInitializedUsingWebKitSPI;
    BOOL _requiresImmediateAssetInspection;
    BOOL _showsTimecodes;
    BOOL _canPausePlaybackWhenExitingFullScreen;
    BOOL _playbackControlsIncludeVolumeControls;
    BOOL _canIncludePlaybackControlsWhenInline;
    BOOL _pictureInPictureActive;
    AVPlayer *_player;
    NSMutableDictionary *__targetVideoGravitiesForLayoutClass;
    AVPlayerController *_playerController;
    id <AVPlayerViewControllerDelegate> _delegate;
    AVContentOverlayView *__actualContentOverlayView;
    NSNumber *__defaultPlaybackRateStorage;
    CDUnknownBlockType _finishPreparingForInteractiveDismissalHandler;
    CDUnknownBlockType _interactiveDismissalCompletionHandler;
    AVObservationController *__observationController;
    AVBehaviorStorage *__behaviorStorage;
    long long __numberOfTrackedUserInteractions;
    UIGestureRecognizer *_hoverGestureRecognizer;
    NSMutableDictionary *__localizedDiscoverabilityTitleForKeyCommandLocalizationKey;
    unsigned long long _overrideRouteSharingPolicy;
    AVPlayerControllerVolumeAnimator *_volumeAnimator;
    __AVPlayerLayerView *_playerLayerView;
    id <AVTouchBarMacHelper> _touchBarHelper;
    NSString *_overrideRoutingContextUID;
    NSArray *_customControlItems;
    NSString *_overrideParentApplicationDisplayIdentifier;
    struct CGSize _secondScreenConnectionDisplaySize;
    struct CGRect _videoBounds;
}

+ (id)keyPathsForValuesAffectingPixelBufferAttributes;
+ (id)keyPathsForValuesAffectingVideoDisplaySize;
+ (id)keyPathsForValuesAffectingVideoGravity;
+ (id)keyPathsForValuesAffectingPictureInPictureWasStartedWhenEnteringBackground;
+ (id)keyPathsForValuesAffectingPictureInPictureSuspended;
+ (id)keyPathsForValuesAffectingPictureInPictureActive;
+ (id)keyPathsForValuesAffectingPictureInPicturePossible;
- (void).cxx_destruct;
@property(readonly, nonatomic, getter=isPictureInPictureActive) BOOL pictureInPictureActive; // @synthesize pictureInPictureActive=_pictureInPictureActive;
@property(nonatomic) BOOL canIncludePlaybackControlsWhenInline; // @synthesize canIncludePlaybackControlsWhenInline=_canIncludePlaybackControlsWhenInline;
@property(copy, nonatomic) NSString *overrideParentApplicationDisplayIdentifier; // @synthesize overrideParentApplicationDisplayIdentifier=_overrideParentApplicationDisplayIdentifier;
@property(copy, nonatomic) NSArray *customControlItems; // @synthesize customControlItems=_customControlItems;
@property(nonatomic) BOOL playbackControlsIncludeVolumeControls; // @synthesize playbackControlsIncludeVolumeControls=_playbackControlsIncludeVolumeControls;
@property(nonatomic) BOOL canPausePlaybackWhenExitingFullScreen; // @synthesize canPausePlaybackWhenExitingFullScreen=_canPausePlaybackWhenExitingFullScreen;
@property(nonatomic) BOOL showsTimecodes; // @synthesize showsTimecodes=_showsTimecodes;
@property(nonatomic) BOOL requiresImmediateAssetInspection; // @synthesize requiresImmediateAssetInspection=_requiresImmediateAssetInspection;
@property(copy, nonatomic) NSString *overrideRoutingContextUID; // @synthesize overrideRoutingContextUID=_overrideRoutingContextUID;
@property(retain, nonatomic) id <AVTouchBarMacHelper> touchBarHelper; // @synthesize touchBarHelper=_touchBarHelper;
@property(nonatomic) BOOL wasInitializedUsingWebKitSPI; // @synthesize wasInitializedUsingWebKitSPI=_wasInitializedUsingWebKitSPI;
@property(nonatomic) BOOL hasPerformedInitialSetup; // @synthesize hasPerformedInitialSetup=_hasPerformedInitialSetup;
@property(retain, nonatomic) __AVPlayerLayerView *playerLayerView; // @synthesize playerLayerView=_playerLayerView;
@property(retain, nonatomic) AVPlayerControllerVolumeAnimator *volumeAnimator; // @synthesize volumeAnimator=_volumeAnimator;
@property(nonatomic) struct CGSize secondScreenConnectionDisplaySize; // @synthesize secondScreenConnectionDisplaySize=_secondScreenConnectionDisplaySize;
@property(nonatomic) unsigned long long overrideRouteSharingPolicy; // @synthesize overrideRouteSharingPolicy=_overrideRouteSharingPolicy;
@property(readonly, nonatomic) NSMutableDictionary *_localizedDiscoverabilityTitleForKeyCommandLocalizationKey; // @synthesize _localizedDiscoverabilityTitleForKeyCommandLocalizationKey=__localizedDiscoverabilityTitleForKeyCommandLocalizationKey;
@property(retain, nonatomic) UIGestureRecognizer *hoverGestureRecognizer; // @synthesize hoverGestureRecognizer=_hoverGestureRecognizer;
@property(nonatomic, setter=_setNumberOfTrackedUserInteractions:) long long _numberOfTrackedUserInteractions; // @synthesize _numberOfTrackedUserInteractions=__numberOfTrackedUserInteractions;
@property(nonatomic) BOOL _hasBegunObservation; // @synthesize _hasBegunObservation=__hasBegunObservation;
@property(readonly, nonatomic) AVBehaviorStorage *_behaviorStorage; // @synthesize _behaviorStorage=__behaviorStorage;
@property(readonly, nonatomic) AVObservationController *_observationController; // @synthesize _observationController=__observationController;
@property(copy, nonatomic) CDUnknownBlockType interactiveDismissalCompletionHandler; // @synthesize interactiveDismissalCompletionHandler=_interactiveDismissalCompletionHandler;
@property(copy, nonatomic) CDUnknownBlockType finishPreparingForInteractiveDismissalHandler; // @synthesize finishPreparingForInteractiveDismissalHandler=_finishPreparingForInteractiveDismissalHandler;
@property(nonatomic) BOOL shouldUseNetworkingResourcesForLiveStreamingWhilePaused; // @synthesize shouldUseNetworkingResourcesForLiveStreamingWhilePaused=_shouldUseNetworkingResourcesForLiveStreamingWhilePaused;
@property(retain, nonatomic) NSNumber *_defaultPlaybackRateStorage; // @synthesize _defaultPlaybackRateStorage=__defaultPlaybackRateStorage;
@property(readonly, nonatomic) AVContentOverlayView *_actualContentOverlayView; // @synthesize _actualContentOverlayView=__actualContentOverlayView;
@property(nonatomic) __weak id <AVPlayerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) BOOL exitsFullScreenWhenPlaybackEnds; // @synthesize exitsFullScreenWhenPlaybackEnds=_exitsFullScreenWhenPlaybackEnds;
@property(nonatomic) BOOL entersFullScreenWhenPlaybackBegins; // @synthesize entersFullScreenWhenPlaybackBegins=_entersFullScreenWhenPlaybackBegins;
@property(nonatomic) struct CGRect videoBounds; // @synthesize videoBounds=_videoBounds;
@property(nonatomic, getter=isReadyForDisplay) BOOL readyForDisplay; // @synthesize readyForDisplay=_readyForDisplay;
@property(nonatomic) BOOL updatesNowPlayingInfoCenter; // @synthesize updatesNowPlayingInfoCenter=_updatesNowPlayingInfoCenter;
@property(retain, nonatomic) AVPlayerController *playerController; // @synthesize playerController=_playerController;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
- (void)contentOverlayViewDidAddOrRemoveSubview:(id)arg1;
- (id)keyCommandResponderForFullScreenViewController:(id)arg1;
- (long long)preferredStatusStyleForFullScreenViewController:(id)arg1;
- (BOOL)prefersStatusBarHiddenForFullScreenViewController:(id)arg1;
- (void)fullScreenViewController:(id)arg1 viewWillTransitionToSize:(struct CGSize)arg2 coordinator:(id)arg3;
- (id)playbackContainerViewForFullScreenViewController:(id)arg1;
- (id)viewForFullScreenViewController:(id)arg1;
- (void)fullScreenViewControllerWillEndFullScreenPresentation:(id)arg1;
- (void)fullScreenViewControllerWillBeginFullScreenPresentation:(id)arg1;
- (void)playbackControlsVisibilityController:(id)arg1 animateAlongsideVisibilityAnimationsWithAnimationCoordinator:(id)arg2 appearingViews:(id)arg3 disappearingViews:(id)arg4;
- (void)playbackControlsVisibilityController:(id)arg1 updateStatusBarAppearanceUsingAnimator:(id)arg2;
- (void)popoverPresentationControllerDidDismissPopover:(id)arg1;
- (void)prepareForPopoverPresentation:(id)arg1;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (void)pictureInPictureController:(id)arg1 restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)pictureInPictureControllerDidStopPictureInPicture:(id)arg1;
- (void)pictureInPictureControllerWillStopPictureInPicture:(id)arg1;
- (void)pictureInPictureController:(id)arg1 failedToStartPictureInPictureWithError:(id)arg2;
- (void)pictureInPictureControllerDidStartPictureInPicture:(id)arg1;
- (void)pictureInPictureControllerWillStartPictureInPicture:(id)arg1;
- (void)avkit_stopRoutingVideoToPictureInPictureViewController:(id)arg1;
- (void)avkit_startRoutingVideoToPictureInPictureViewController:(id)arg1;
- (id)avkit_makePlayerControllerIfNeeded:(id)arg1;
- (id)avkit_pictureInPictureViewController;
@property(readonly, nonatomic) BOOL avkit_isVisible;
@property(readonly, nonatomic) struct CGRect avkit_videoRectInWindow;
@property(readonly, nonatomic) UIWindow *avkit_window;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)_modalPresentationStyleIsFullScreen;
- (BOOL)_isTransitioningToOrFromFullScreen;
- (void)transitionController:(id)arg1 animationProgressDidChange:(float)arg2;
- (void)transitionController:(id)arg1 transitionWillComplete:(BOOL)arg2;
- (id)transitionControllerBackgroundViewBackgroundColor:(id)arg1;
- (id)transitionControllerPresentedViewBackgroundColor:(id)arg1;
- (BOOL)transitionControllerCanBeginInteractivePresentationTransition:(id)arg1;
- (BOOL)transitionControllerCanBeginInteractiveDismissalTransition:(id)arg1;
- (void)transitionControllerBeginInteractiveDismissalTransition:(id)arg1;
- (void)transitionControllerBeginInteractivePresentationTransition:(id)arg1;
- (void)transitionController:(id)arg1 prepareForFinishingInteractiveTransition:(CDUnknownBlockType)arg2;
- (id)transitionController:(id)arg1 targetViewForDismissingViewController:(id)arg2;
- (void)transitionController:(id)arg1 willBeginDismissingViewController:(id)arg2;
- (void)transitionController:(id)arg1 willBeginPresentingViewController:(id)arg2;
- (BOOL)transitionController:(id)arg1 gestureRecognizer:(id)arg2 shouldReceiveTouch:(id)arg3;
- (void)_transitionFromFullScreenAnimated:(BOOL)arg1 interactive:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_transitionFromFullScreenAnimated:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_transitionToFullScreenAnimated:(BOOL)arg1 interactive:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (BOOL)_canEnterFullScreen;
- (void)_transitionFromFullScreenWithReason:(long long)arg1 animated:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (BOOL)_isDescendantOfRootViewController;
@property(readonly, nonatomic) AVTransitionController *_transitionController;
- (id)_avkitPreferredTransitioningDelegate;
- (id)_transitionControllerIfLoaded;
@property(readonly, nonatomic) AVFullScreenViewController *fullScreenViewController;
- (void)exitFullScreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)enterFullScreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)showFullScreenPresentationFromView:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_updateContentOverlayViewSuperview;
- (void)_loadObservationControllerIfNeeded;
- (void)_updateTouchBarHelper;
- (void)_handleHoverGestureRecognizer:(id)arg1;
- (void)_contentViewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (BOOL)_delegateRespondsTo:(SEL)arg1;
- (void)_notifyOfMetricsCollectionEvent:(long long)arg1;
- (void)_mediaSelectionDoneButtonTapped:(id)arg1;
- (void)_togglePictureInPicture;
- (BOOL)_isTrackingUserInteractionWithInteractiveView;
- (BOOL)_isTrackingUserInteraction;
- (void)_endTrackingUserInteraction;
- (void)_beginTrackingUserInteraction;
- (void)_handleUserInteractionObservationRecognizer:(id)arg1;
- (void)_handleDoubleDoubleTapGesture:(id)arg1;
- (void)_handleSingleTapGesture:(id)arg1;
- (void)_handleDoubleTapGesture:(id)arg1;
- (BOOL)_shouldShowPictureInPictureButton;
- (void)_updatePlaybackControlsController;
- (void)_updateExternalPlaybackIndicatorView;
- (void)_updateAudioOnlyIndicatorView;
- (BOOL)_isAudioOnlyContent;
- (void)_updateUnsupportedContentIndicatorView;
- (BOOL)_isUnsupportedContent;
- (void)_addObservers;
- (void)_handleFastForwardKeyReleasedCommand:(id)arg1;
- (void)_handleFastForwardKeyPressedCommand:(id)arg1;
- (void)_handleRewindKeyReleasedCommand:(id)arg1;
- (void)_handleRewindKeyPressedCommand:(id)arg1;
- (void)_handleVolumeDownKeyReleasedCommand:(id)arg1;
- (void)_handleVolumeDownKeyPressedCommand:(id)arg1;
- (void)_handleVolumeUpKeyReleasedCommand:(id)arg1;
- (void)_handleVolumeUpKeyPressedCommand:(id)arg1;
- (void)_handleShowPreviousFrameKeyCommand:(id)arg1;
- (void)_handleGoToBeginningKeyCommand:(id)arg1;
- (void)_handleShowNextFrameKeyCommand:(id)arg1;
- (void)_handleSkipAhead15SecondsKeyCommand:(id)arg1;
- (void)_handleSkipBack15SecondsKeyCommand:(id)arg1;
- (void)_handlePlayPauseKeyCommand:(id)arg1;
- (void)_handleExitFullScreenKeyCommand:(id)arg1;
- (id)keyCommands;
- (BOOL)canBecomeFirstResponder;
- (id)makeTouchBar;
- (id)_presentationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (BOOL)_requiresCustomPresentationController;
- (long long)_preferredModalPresentationStyle;
- (id)transitioningDelegate;
- (BOOL)avkit_isEffectivelyFullScreen;
- (BOOL)prefersHomeIndicatorAutoHidden;
- (long long)preferredStatusBarStyle;
- (BOOL)prefersStatusBarHidden;
- (long long)preferredInterfaceOrientationForPresentation;
- (BOOL)modalPresentationCapturesStatusBarAppearance;
- (long long)preferredWhitePointAdaptivityStyle;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)didMoveToParentViewController:(id)arg1;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(BOOL)arg2;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)performInitialSetup;
- (void)performInitialSetupIfNeededAndPossible;
- (void)viewDidLoad;
- (void)loadView;
- (void)setView:(id)arg1;
- (void)_ensureBehaviorStorage;
@property(readonly, nonatomic) UIViewController *viewControllerForFullScreenPresentation;
- (id)_activeViewControllerForContentView;
@property(nonatomic) double defaultPlaybackRate;
@property(copy, nonatomic) CDUnknownBlockType playButtonHandlerForLazyPlayerLoading;
- (void)flashPlaybackControlsWithDuration:(double)arg1;
@property(nonatomic) BOOL volumeControlsCanShowSlider;
- (BOOL)playbackControlsIncludeVolumeControlsControls;
@property(nonatomic) BOOL playbackControlsIncludeDisplayModeControls;
@property(nonatomic) BOOL playbackControlsIncludeTransportControls;
@property(nonatomic) BOOL requiresLinearPlayback;
@property(nonatomic, setter=_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:) BOOL _inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused;
@property(nonatomic) BOOL showsMinimalPlaybackControlsWhenEmbeddedInline;
@property(nonatomic) BOOL allowsEnteringFullScreen;
@property(nonatomic) BOOL canHidePlaybackControls;
@property(readonly, nonatomic) BOOL canControlPlayback;
@property(readonly, nonatomic) BOOL hasCustomPlaybackControls;
@property(readonly, nonatomic) AVPlayerViewControllerCustomControlsView *customControlsView;
- (id)interactiveContentOverlayView;
@property(copy, nonatomic) NSDictionary *pixelBufferAttributes;
@property(nonatomic) BOOL allowsPictureInPicturePlayback;
@property(readonly, nonatomic) UIView *contentOverlayView;
@property(readonly, nonatomic) double videoDisplayScale;
@property(readonly, nonatomic) struct CGSize videoDisplaySize;
- (void)updateVideoBounds;
- (void)setVideoGravity:(id)arg1 forLayoutClass:(unsigned long long)arg2;
@property(readonly, nonatomic) NSMutableDictionary *_targetVideoGravitiesForLayoutClass; // @synthesize _targetVideoGravitiesForLayoutClass=__targetVideoGravitiesForLayoutClass;
@property(copy, nonatomic) NSString *videoGravity;
@property(nonatomic) BOOL showsPlaybackControls;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
@property(readonly, nonatomic) UIView *iAdPrerollView;
- (void)setWebKitOverrideRouteSharingPolicy:(unsigned long long)arg1 routingContextUID:(id)arg2;
@property(readonly, nonatomic) BOOL pictureInPictureWasStartedWhenEnteringBackground;
@property(readonly, nonatomic, getter=isPictureInPictureSuspended) BOOL pictureInPictureSuspended;
@property(readonly, nonatomic, getter=isPictureInPicturePossible) BOOL pictureInPicturePossible;
- (void)stopPictureInPicture;
- (void)startPictureInPicture;
- (void)exitFullScreenAnimated:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)enterFullScreenAnimated:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(nonatomic) BOOL playbackControlsShouldControlSystemVolume;
@property(nonatomic) BOOL showsExitFullScreenButton;
- (id)initWithPlayerLayerView:(id)arg1;
@property(nonatomic) BOOL canToggleVideoGravityWhenEmbeddedInline;
@property(retain, nonatomic) NSValue *overrideLayoutMarginsWhenEmbeddedInline;
@property(nonatomic) struct CGAffineTransform overrideTransformForProminentPlayButton;
- (void)activeContentViewDidChange;
@property(nonatomic) BOOL canShowPictureInPictureButton;
@property(readonly, nonatomic) AVPlaybackControlsController *playbackControlsController;
@property(readonly, nonatomic) AVPlaybackControlsVisibilityController *playbackControlsVisibilityController;
- (void)toggleMuted:(id)arg1;
- (void)pictureInPictureButtonTapped:(id)arg1;
- (void)fullScreenButtonTapped:(id)arg1;
- (void)mediaSelectionButtonTapped:(id)arg1;
- (void)togglePlayback:(id)arg1;
- (void)videoGravityButtonTapped:(id)arg1;
- (void)doneButtonTapped:(id)arg1;
@property(readonly, nonatomic) AVPresentationContext *presentationContext;
@property(readonly, nonatomic, getter=isPresentedFullScreen) BOOL presentedFullScreen;
@property(readonly, nonatomic, getter=isPresentingFullScreenFromInline) BOOL presentingFullScreenFromInline;
- (void)prepareForFinishingInteractiveTransition:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) AVPlayerViewControllerContentView *contentView;
@property(readonly, nonatomic) BOOL hasActiveTransition;
@property(nonatomic) BOOL entersFullScreenWhenTapped;
- (void)flashAutoplayControls;
- (void)exitAutoplayPhase;
- (void)enterAutoplayPhase;
@property(nonatomic) long long preferredUnobscuredArea;
- (id)_newsWidgetPlayerLegacyBehavior;
- (id)_newsWidgetPlayerBehaviorContext;
- (void)setVideoGravityForTransitioningContent:(id)arg1;
- (void)startContentTransition:(long long)arg1;
@property(nonatomic) __weak id <AVPlayerViewControllerContentTransitioning_NewsOnly> contentTransitioningDelegate;
@property(readonly, nonatomic) AVPlayer *contentTransitioningPlayer;
@property(readonly, nonatomic, getter=isContentTransitionInteractive) BOOL contentTransitionInteractive;
@property(readonly, nonatomic) UIView *contentTransitioningOverlayView;
@property(nonatomic, getter=isStartNextContentTransitionButtonEnabled) BOOL startNextContentTransitionButtonEnabled;
@property(nonatomic, getter=isStartPreviousContentTransitionButtonEnabled) BOOL startPreviousContentTransitionButtonEnabled;
@property(retain, nonatomic) UIView *customContentTransitioningInfoPanel;
@property(readonly, nonatomic) long long activeContentTransitionType;
@property(readonly, nonatomic) NSArray *behaviors;
- (void)removeBehavior:(id)arg1;
- (void)addBehavior:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

