//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <PencilKit/UIGestureRecognizerDelegate-Protocol.h>

@class NSString, PKRulerGestureRecognizer, PKRulerLayer, PKRulerView, UIView;
@protocol PKRulerDelegate, PKRulerHostingDelegate;

@interface PKRulerController : NSObject <UIGestureRecognizerDelegate>
{
    UIView *_rulerHostingView;
    BOOL _wantsSharedRuler;
    BOOL _isInteractingWithRuler;
    BOOL _rulerIsRotating;
    BOOL _rulerWasShownViaGesture;
    BOOL _canRulerSnapToAngle;
    BOOL _lastTouchWasMaskedByRuler;
    PKRulerGestureRecognizer *_rulerGestureRecognizer;
    id <PKRulerDelegate> _delegate;
    id <PKRulerHostingDelegate> _rulerHostingDelegate;
    PKRulerView *_rulerView;
    PKRulerLayer *_rulerLayer;
    CDStruct_59a83e79 _rulerState;
    CDStruct_59a83e79 _previousRulerState;
    struct CGAffineTransform _rulerStartTransform;
    struct CGAffineTransform _defaultRulerTransform;
}

+ (id)sharedRulerView;
- (void).cxx_destruct;
@property(nonatomic) BOOL lastTouchWasMaskedByRuler; // @synthesize lastTouchWasMaskedByRuler=_lastTouchWasMaskedByRuler;
@property(nonatomic) BOOL canRulerSnapToAngle; // @synthesize canRulerSnapToAngle=_canRulerSnapToAngle;
@property(nonatomic) BOOL rulerWasShownViaGesture; // @synthesize rulerWasShownViaGesture=_rulerWasShownViaGesture;
@property(nonatomic) CDStruct_59a83e79 previousRulerState; // @synthesize previousRulerState=_previousRulerState;
@property(nonatomic) CDStruct_59a83e79 rulerState; // @synthesize rulerState=_rulerState;
@property(retain, nonatomic) PKRulerLayer *rulerLayer; // @synthesize rulerLayer=_rulerLayer;
@property(nonatomic) struct CGAffineTransform defaultRulerTransform; // @synthesize defaultRulerTransform=_defaultRulerTransform;
@property(nonatomic) struct CGAffineTransform rulerStartTransform; // @synthesize rulerStartTransform=_rulerStartTransform;
@property(retain, nonatomic) PKRulerView *rulerView; // @synthesize rulerView=_rulerView;
@property(nonatomic) BOOL rulerIsRotating; // @synthesize rulerIsRotating=_rulerIsRotating;
@property(nonatomic) BOOL isInteractingWithRuler; // @synthesize isInteractingWithRuler=_isInteractingWithRuler;
@property(nonatomic) __weak id <PKRulerHostingDelegate> rulerHostingDelegate; // @synthesize rulerHostingDelegate=_rulerHostingDelegate;
@property(nonatomic) __weak id <PKRulerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) PKRulerGestureRecognizer *rulerGestureRecognizer; // @synthesize rulerGestureRecognizer=_rulerGestureRecognizer;
- (struct CGAffineTransform)_transformFromRulerViewToTiledView;
- (struct CGAffineTransform)angleSnapRulerTransform:(struct CGAffineTransform)arg1 aroundOrigin:(struct CGPoint)arg2;
- (struct CGAffineTransform)canvasTransform;
- (double)getRulerCenterTValueOnScreenForTransform:(struct CGAffineTransform)arg1;
- (struct CGAffineTransform)ensureRulerFullyOnscreen:(struct CGAffineTransform)arg1;
- (struct CGAffineTransform)pixelSnapRulerTransform:(struct CGAffineTransform)arg1;
- (BOOL)hitTest:(struct CGPoint)arg1;
- (void)resetRulerTouches;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)updateAngle:(id)arg1;
- (void)rulerMoveGesture:(id)arg1;
- (void)eatPencilGesture:(id)arg1;
- (void)updateRuler:(id)arg1;
- (void)hideUI;
- (void)setupGestures;
- (void)endRulerDrawing;
- (void)cancelNonDrawingGestures;
- (void)startRulerDrawing;
- (void)drawingCancelled:(CDUnknownBlockType)arg1;
- (void)drawingEnded:(id)arg1;
- (void)drawingMoved:(id)arg1 withEvent:(id)arg2;
- (void)drawingBegan:(id)arg1;
- (struct CGPoint)applyTransformToTouchLocation:(struct CGPoint)arg1;
- (void)resetRulerTransform;
- (void)resetRuler;
- (void)hideRulerAnimated:(BOOL)arg1;
- (void)hideRuler;
- (void)showRuler;
- (struct CGRect)_rulerFrame;
- (void)adjustFrames;
- (void)_adjustViewForHostingRulerView;
- (void)dealloc;
- (id)_viewForHostingRuler;
@property(readonly, nonatomic) BOOL rulerSelected;
- (BOOL)_enableRulerOnCanvasIfSharedRulerIsVisible;
- (void)_configureRuler;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

