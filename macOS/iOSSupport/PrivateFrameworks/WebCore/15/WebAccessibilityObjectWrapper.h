//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <WebCore/WebAccessibilityObjectWrapperBase.h>

__attribute__((visibility("hidden")))
@interface WebAccessibilityObjectWrapper : WebAccessibilityObjectWrapperBase
{
    int m_isAccessibilityElement;
    unsigned long long m_accessibilityTraitsFromAncestor;
}

- (id)description;
- (struct CGPoint)accessibilityClickPoint;
- (id)accessibilityMathType;
- (long long)accessibilityMathLineThickness;
- (BOOL)accessibilityIsMathTopObject;
- (id)accessibilityMathFencedCloseString;
- (id)accessibilityMathFencedOpenString;
- (id)accessibilityMathPrescripts;
- (id)accessibilityMathPostscripts;
- (id)accessibilityPlatformMathSuperscriptKey;
- (id)accessibilityPlatformMathSubscriptKey;
- (id)accessibilityMathOverObject;
- (id)accessibilityMathUnderObject;
- (id)accessibilityMathSuperscriptObject;
- (id)accessibilityMathSubscriptObject;
- (id)accessibilityMathBaseObject;
- (id)accessibilityMathDenominatorObject;
- (id)accessibilityMathNumeratorObject;
- (id)accessibilityMathRadicandObject;
- (id)accessibilityMathRootIndexObject;
- (id)accessibilitySortDirection;
- (id)accessibilityARIACurrentStatus;
- (id)accessibilityInvalidStatus;
- (BOOL)accessibilityIsShowingValidationMessage;
- (BOOL)accessibilityIsExpanded;
- (BOOL)accessibilitySupportsARIAExpanded;
- (BOOL)accessibilityIsPressed;
- (BOOL)accessibilitySupportsARIAPressed;
- (BOOL)accessibilityARIALiveRegionIsAtomic;
- (id)accessibilityARIARelevantStatus;
- (id)accessibilityARIALiveRegionStatus;
- (BOOL)accessibilityARIAIsBusy;
- (id)accessibilitySpeechHint;
- (id)accessibilityIdentifier;
- (id)accessibilityExpandedTextValue;
- (id)textMarkersForRange:(RefPtr_033e7b31)arg1;
- (id)textMarkerRangeForMarkers:(id)arg1;
- (id)startOrEndTextMarkerForTextMarkers:(id)arg1 isStart:(BOOL)arg2;
- (long long)lengthForTextMarkers:(id)arg1;
- (RefPtr_033e7b31)rangeForTextMarkers:(id)arg1;
- (id)previousMarkerForCharacterOffset:(struct CharacterOffset *)arg1;
- (id)nextMarkerForCharacterOffset:(struct CharacterOffset *)arg1;
- (id)textMarkerForPoint:(struct CGPoint)arg1;
- (id)rectsForSelectionRects:(const Vector_be121512 *)arg1;
- (id)textRectsFromMarkers:(id)arg1 withText:(id)arg2;
- (id)textMarkerRangeFromMarkers:(id)arg1 withText:(id)arg2;
- (RefPtr_033e7b31)rangeFromMarkers:(id)arg1 withText:(id)arg2;
- (struct CGRect)frameForTextMarkers:(id)arg1;
- (id)previousMarkerForMarker:(id)arg1;
- (id)nextMarkerForMarker:(id)arg1;
- (id)misspellingTextMarkerRange:(id)arg1 forward:(BOOL)arg2;
- (id)lineStartMarkerForMarker:(id)arg1;
- (id)lineEndMarkerForMarker:(id)arg1;
- (id)selectedTextMarker;
- (id)selectionRangeString;
- (id)elementsForRange:(struct _NSRange)arg1;
- (BOOL)accessibilityInsertText:(id)arg1;
- (BOOL)accessibilityReplaceRange:(struct _NSRange)arg1 withText:(id)arg2;
- (void)_accessibilitySetSelectedTextRange:(struct _NSRange)arg1;
- (struct _NSRange)_accessibilitySelectedTextRange;
- (id)attributedStringForElement;
- (id)attributedStringForRange:(struct _NSRange)arg1;
- (id)stringForRange:(struct _NSRange)arg1;
- (id)_stringForRange:(struct _NSRange)arg1 attributed:(BOOL)arg2;
- (id)_stringFromStartMarker:(id)arg1 toEndMarker:(id)arg2 attributed:(BOOL)arg3;
- (id)textMarkerForPosition:(long long)arg1;
- (id)textMarkerRangeForSelection;
- (id)accessibilityObjectForTextMarker:(id)arg1;
- (struct _NSRange)elementTextRange;
- (id)textMarkerRange;
- (long long)positionForTextMarker:(id)arg1;
- (RefPtr_033e7b31)_convertToDOMRange:(struct _NSRange)arg1;
- (struct _NSRange)_convertToNSRange:(struct Range *)arg1;
- (id)arrayOfTextForTextMarkers:(id)arg1 attributed:(BOOL)arg2;
- (id)stringForTextMarkers:(id)arg1;
- (void)_accessibilitySetValue:(id)arg1;
-     // Error parsing type: c32@0:8^{AccessibilityObject=^^?{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}I{Vector<WTF::RefPtr<WebCore::AXCoreObject, WTF::DumbPtrTraits<WebCore::AXCoreObject> >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>=^{RefPtr<WebCore::AXCoreObject, WTF::DumbPtrTraits<WebCore::AXCoreObject> >}II}Bii{AccessibilityIsIgnoredFromParentData=^{AXCoreObject}BBB}BB{RetainPtr<WebAccessibilityObjectWrapper>=^v}}16@24, name: _addAccessibilityObject:toTextMarkerArray:
- (void)accessibilityDecrement;
- (void)accessibilityIncrement;
- (void)accessibilityMoveSelectionToMarker:(id)arg1;
- (void)accessibilityDecreaseSelection:(int)arg1;
- (void)_accessibilitySetFocus:(BOOL)arg1;
- (void)accessibilityIncreaseSelection:(int)arg1;
- (void)accessibilityModifySelection:(int)arg1 increase:(BOOL)arg2;
- (id)accessibilityFindMatchingObjects:(id)arg1;
-     // Error parsing type: ^{AXCoreObject=^^?{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}}24@0:8^{AXCoreObject=^^?{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}}16, name: treeItemParentForObject:
-     // Error parsing type: ^{AXCoreObject=^^?{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}}24@0:8^{AccessibilityObject=^^?{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}I{Vector<WTF::RefPtr<WebCore::AXCoreObject, WTF::DumbPtrTraits<WebCore::AXCoreObject> >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>=^{RefPtr<WebCore::AXCoreObject, WTF::DumbPtrTraits<WebCore::AXCoreObject> >}II}Bii{AccessibilityIsIgnoredFromParentData=^{AXCoreObject}BBB}BB{RetainPtr<WebAccessibilityObjectWrapper>=^v}}16, name: detailParentForObject:
-     // Error parsing type: ^{AXCoreObject=^^?{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}}24@0:8^{AXCoreObject=^^?{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}}16, name: detailParentForSummaryObject:
- (struct CGRect)_accessibilityScrollVisibleRect;
- (struct CGSize)_accessibilityScrollSize;
- (struct CGPoint)_accessibilityScrollPosition;
- (void)postScrollStatusChangeNotification;
- (void)postExpandedChangedNotification;
- (void)postValueChangedNotification;
- (void)postInvalidStatusChangedNotification;
- (void)postChildrenChangedNotification;
- (void)postLoadCompleteNotification;
- (void)postLiveRegionCreatedNotification;
- (void)postLiveRegionChangeNotification;
- (void)postLayoutChangeNotification;
- (void)postSelectedTextChangeNotification;
- (void)postFocusChangeNotification;
- (id)_accessibilityParentForSubview:(id)arg1;
- (id)attachmentView;
- (BOOL)_accessibilityActivate;
- (id)accessibilityTextualContext;
- (BOOL)isAttachment;
- (id)accessibilityLinkedElement;
- (id)accessibilityFlowToElements;
- (BOOL)accessibilityRequired;
- (id)accessibilityLinkRelationshipType;
- (BOOL)accessibilityCanSetValue;
- (id)_accessibilityPreviousElementsWithCount:(unsigned int)arg1;
- (id)_accessibilityNextElementsWithCount:(unsigned int)arg1;
- (id)_accessibilityWebDocumentView;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityContainer;
- (BOOL)containsUnnaturallySegmentedChildren;
- (struct CGRect)accessibilityFrame;
- (struct CGPoint)accessibilityActivationPoint;
- (struct CGRect)accessibilityVisibleContentRect;
- (struct CGRect)accessibilityElementRect;
- (struct CGRect)_accessibilityRelativeFrame;
- (BOOL)accessibilityScroll:(long long)arg1;
- (BOOL)_accessibilityScrollToVisible;
- (struct CGPoint)_accessibilityConvertPointToViewSpace:(struct CGPoint)arg1;
- (id)accessibilityURL;
- (id)accessibilityHint;
- (BOOL)accessibilityIsComboBox;
- (BOOL)accessibilityIsAttachmentElement;
- (id)accessibilityValue;
- (id)accessibilityColorStringValue;
- (id)accessibilityPlaceholderValue;
- (id)accessibilityDatetimeValue;
- (unsigned long long)accessibilityBlockquoteLevel;
- (struct _NSRange)accessibilityColumnRange;
- (struct _NSRange)accessibilityRowRange;
- (unsigned long long)accessibilityARIAColumnIndex;
- (unsigned long long)accessibilityARIARowIndex;
- (unsigned long long)accessibilityARIAColumnCount;
- (unsigned long long)accessibilityARIARowCount;
- (unsigned long long)accessibilityColumnCount;
- (unsigned long long)accessibilityRowCount;
- (id)accessibilityElementForRow:(long long)arg1 andColumn:(long long)arg2;
- (id)accessibilityHeaderElements;
- (id)accessibilityTitleElement;
-     // Error parsing type: ^{AccessibilityTable=^^?{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}I{Vector<WTF::RefPtr<WebCore::AXCoreObject, WTF::DumbPtrTraits<WebCore::AXCoreObject> >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>=^{RefPtr<WebCore::AXCoreObject, WTF::DumbPtrTraits<WebCore::AXCoreObject> >}II}Bii{AccessibilityIsIgnoredFromParentData=^{AXCoreObject}BBB}BB{RetainPtr<WebAccessibilityObjectWrapper>=^v}ii^{Node}{WeakPtrFactory<WebCore::AccessibilityRenderObject>={RefPtr<WTF::WeakPtrImpl, WTF::DumbPtrTraits<WTF::WeakPtrImpl> >=^{WeakPtrImpl}}}{WeakPtr<WebCore::RenderObject>={RefPtr<WTF::WeakPtrImpl, WTF::DumbPtrTraits<WTF::WeakPtrImpl> >=^{WeakPtrImpl}}}{Vector<WTF::RefPtr<WebCore::AXCoreObject, WTF::DumbPtrTraits<WebCore::AXCoreObject> >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>=^{RefPtr<WebCore::AXCoreObject, WTF::DumbPtrTraits<WebCore::AXCoreObject> >}II}{Vector<WTF::RefPtr<WebCore::AXCoreObject, WTF::DumbPtrTraits<WebCore::AXCoreObject> >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>=^{RefPtr<WebCore::AXCoreObject, WTF::DumbPtrTraits<WebCore::AXCoreObject> >}II}{RefPtr<WebCore::AccessibilityObject, WTF::DumbPtrTraits<WebCore::AccessibilityObject> >=^{AccessibilityObject}}B}16@0:8, name: tableParent
-     // Error parsing type: ^{AccessibilityTableCell=^^?{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}I{Vector<WTF::RefPtr<WebCore::AXCoreObject, WTF::DumbPtrTraits<WebCore::AXCoreObject> >, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>=^{RefPtr<WebCore::AXCoreObject, WTF::DumbPtrTraits<WebCore::AXCoreObject> >}II}Bii{AccessibilityIsIgnoredFromParentData=^{AXCoreObject}BBB}BB{RetainPtr<WebAccessibilityObjectWrapper>=^v}ii^{Node}{WeakPtrFactory<WebCore::AccessibilityRenderObject>={RefPtr<WTF::WeakPtrImpl, WTF::DumbPtrTraits<WTF::WeakPtrImpl> >=^{WeakPtrImpl}}}{WeakPtr<WebCore::RenderObject>={RefPtr<WTF::WeakPtrImpl, WTF::DumbPtrTraits<WTF::WeakPtrImpl> >=^{WeakPtrImpl}}}ii}16@0:8, name: tableCellParent
- (id)accessibilityLabel;
- (id)accessibilityRoleDescription;
- (double)_accessibilityMaxValue;
- (double)_accessibilityMinValue;
- (BOOL)_accessibilityIsStrongPasswordField;
- (BOOL)_accessibilityValueIsAutofilled;
- (BOOL)_accessibilityHasTouchEventListener;
- (BOOL)stringValueShouldBeUsedInLabel;
- (BOOL)isAccessibilityElement;
- (BOOL)determineIsAccessibilityElement;
- (BOOL)isSVGGroupElement;
- (unsigned long long)accessibilityTraits;
- (unsigned long long)_accessibilityTextEntryTraits;
- (void)accessibilityVideoEnterFullscreen;
- (void)accessibilityToggleMuteForMedia;
- (BOOL)accessibilityIsMediaMuted;
- (BOOL)accessibilityIsMediaPlaying;
- (id)interactiveVideoDescription;
- (BOOL)accessibilityIsWebInteractiveVideo;
- (unsigned long long)_accessibilityTraitsFromAncestors;
- (id)_accessibilityFrameAncestor;
- (id)_accessibilityFieldsetAncestor;
- (BOOL)_accessibilityIsInTableCell;
- (id)_accessibilityTableAncestor;
- (id)_accessibilityLandmarkAncestor;
- (id)_accessibilityArticleAncestor;
- (id)_accessibilityListAncestor;
- (id)_accessibilityTreeAncestor;
- (BOOL)_accessibilityIsLandmarkRole:(int)arg1;
- (BOOL)accessibilityIsDialog;
- (id)accessibilityLanguage;
- (id)accessibilityPopupValue;
- (BOOL)accessibilityHasPopup;
- (struct CGPath *)_accessibilityPath;
- (long long)indexOfAccessibilityElement:(id)arg1;
- (id)accessibilityElementAtIndex:(long long)arg1;
- (long long)accessibilityElementCount;
- (void)disableAttributeCaching;
- (void)enableAttributeCaching;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityPostProcessHitTest:(struct CGPoint)arg1;
- (BOOL)accessibilityCanFuzzyHitTest;
- (unsigned long long)_axUpdatesFrequentlyTrait;
- (unsigned long long)_axTextAreaTrait;
- (unsigned long long)_axSearchFieldTrait;
- (unsigned long long)_axContainedByFieldsetTrait;
- (unsigned long long)_axRadioButtonTrait;
- (unsigned long long)_axNotEnabledTrait;
- (unsigned long long)_axSelectedTrait;
- (unsigned long long)_axMenuItemTrait;
- (unsigned long long)_axAdjustableTrait;
- (unsigned long long)_axStaticTextTrait;
- (unsigned long long)_axPopupButtonTrait;
- (unsigned long long)_axToggleTrait;
- (unsigned long long)_axButtonTrait;
- (unsigned long long)_axTabButtonTrait;
- (unsigned long long)_axImageTrait;
- (unsigned long long)_axTextOperationsAvailableTrait;
- (unsigned long long)_axHasTextCursorTrait;
- (unsigned long long)_axTextEntryTrait;
- (unsigned long long)_axSecureTextFieldTrait;
- (unsigned long long)_axWebContentTrait;
- (unsigned long long)_axContainedByLandmarkTrait;
- (unsigned long long)_axContainedByTableTrait;
- (unsigned long long)_axContainedByListTrait;
- (unsigned long long)_axHeaderTrait;
- (unsigned long long)_axVisitedTrait;
- (unsigned long long)_axLinkTrait;
- (BOOL)_prepareAccessibilityCall;
- (void)dealloc;
- (void)detach;
-     // Error parsing type: @24@0:8^{AXCoreObject=^^?{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int> >=AI}}}16, name: initWithAccessibilityObject:

@end

