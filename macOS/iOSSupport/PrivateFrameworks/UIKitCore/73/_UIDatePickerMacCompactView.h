//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKitCore/UIView.h>

#import <UIKitCore/UIGestureRecognizerDelegate-Protocol.h>
#import <UIKitCore/UINSOverlayDatePickerDelegate-Protocol.h>
#import <UIKitCore/UINSShadowDatePickerDelegate-Protocol.h>
#import <UIKitCore/UITextFieldDelegate-Protocol.h>
#import <UIKitCore/_UIDatePickerViewComponent-Protocol.h>

@class NSDate, NSMutableArray, NSString, UIColor, UIDatePicker, UITapGestureRecognizer, _UIDatePickerDataModel;
@protocol UINSOverlayDatePicker, UINSShadowDatePicker;

__attribute__((visibility("hidden")))
@interface _UIDatePickerMacCompactView : UIView <UINSOverlayDatePickerDelegate, UITextFieldDelegate, UIGestureRecognizerDelegate, UINSShadowDatePickerDelegate, _UIDatePickerViewComponent>
{
    BOOL _allowsZeroCountDownDuration;
    BOOL _allowsZeroTimeInterval;
    BOOL _isTimeIntervalMode;
    BOOL _isShowingMacOverlay;
    _UIDatePickerDataModel *_data;
    UIDatePicker *_datePicker;
    double _timeInterval;
    NSDate *_date;
    UITapGestureRecognizer *_tapGestureRecognizer;
    id <UINSOverlayDatePicker> _macOverlayDatePicker;
    id <UINSShadowDatePicker> _shadowDatePicker;
    NSMutableArray *_textFields;
    struct CGSize _calculatedContentSize;
    struct CGRect _textAreaRect;
}

- (void).cxx_destruct;
@property(nonatomic) struct CGSize calculatedContentSize; // @synthesize calculatedContentSize=_calculatedContentSize;
@property(nonatomic) struct CGRect textAreaRect; // @synthesize textAreaRect=_textAreaRect;
@property(nonatomic) BOOL isShowingMacOverlay; // @synthesize isShowingMacOverlay=_isShowingMacOverlay;
@property(retain, nonatomic) NSMutableArray *textFields; // @synthesize textFields=_textFields;
@property(retain, nonatomic) id <UINSShadowDatePicker> shadowDatePicker; // @synthesize shadowDatePicker=_shadowDatePicker;
@property(retain, nonatomic) id <UINSOverlayDatePicker> macOverlayDatePicker; // @synthesize macOverlayDatePicker=_macOverlayDatePicker;
@property(retain, nonatomic) UITapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
@property(copy, nonatomic) NSDate *date; // @synthesize date=_date;
@property(readonly, nonatomic, getter=_isTimeIntervalMode) BOOL isTimeIntervalMode; // @synthesize isTimeIntervalMode=_isTimeIntervalMode;
@property(nonatomic) __weak UIDatePicker *datePicker; // @synthesize datePicker=_datePicker;
@property(retain, nonatomic) _UIDatePickerDataModel *data; // @synthesize data=_data;
@property(nonatomic, getter=_allowsZeroTimeInterval, setter=_setAllowsZeroTimeInterval:) BOOL allowsZeroTimeInterval; // @synthesize allowsZeroTimeInterval=_allowsZeroTimeInterval;
@property(nonatomic, getter=_allowsZeroCountDownDuration, setter=_setAllowsZeroCountDownDuration:) BOOL allowsZeroCountDownDuration; // @synthesize allowsZeroCountDownDuration=_allowsZeroCountDownDuration;
- (void)didChangeTimeZone;
- (void)didChangeMode;
- (void)didChangeMinuteInterval;
- (void)didChangeMinimumDate;
- (void)didChangeMaximumDate;
- (void)didChangeLocale;
- (void)didChangeDateFrom:(id)arg1 animated:(BOOL)arg2;
- (void)didChangeCalendar;
@property(readonly, nonatomic) long long datePickerStyle;
- (void)_setHidesLabels:(BOOL)arg1;
- (void)_setEnabled:(BOOL)arg1;
- (BOOL)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (struct _NSRange)textField:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidChangeSelection:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldEditorDidChangeSelection:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (BOOL)textFieldShouldBeginEditing:(id)arg1;
- (struct CGRect)scaleRect:(struct CGRect)arg1 scale:(double)arg2;
- (id)adjustFontForVerticalColonIfNecessary:(id)arg1;
- (void)setUpTextFieldsToMatchDatePicker:(id)arg1 calendarValues:(id)arg2;
- (void)setUpTextFieldsToMatchData:(id)arg1;
- (void)shadowDatePickerDidChangeCalendarPreferences:(id)arg1;
- (void)datePickerDidClose:(id)arg1 withSelectedElement:(unsigned long long)arg2;
- (void)datePicker:(id)arg1 didChangeToDate:(id)arg2;
- (unsigned long long)uinsDatePickerModeForUIDatePickerMode:(long long)arg1;
- (BOOL)selectTextFieldWithElement:(unsigned long long)arg1;
- (void)selectNextResponderWithRightDirection:(BOOL)arg1;
- (void)rightArrowPressed:(id)arg1;
- (void)leftArrowPressed:(id)arg1;
- (void)downArrowPressed:(id)arg1;
- (void)upArrowPressed:(id)arg1;
- (id)keyCommands;
- (struct CGSize)intrinsicContentSize;
@property(readonly, nonatomic) double contentWidth;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)defaultSize;
- (BOOL)hasDefaultSize;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (BOOL)_contentHuggingDefault_isUsuallyFixedWidth;
- (struct CGSize)_sizeThatFits:(struct CGSize)arg1;
- (BOOL)isDateCompenentElement:(unsigned long long)arg1;
- (unsigned long long)selectedElement;
- (unsigned long long)elementForPoint:(struct CGPoint)arg1;
- (BOOL)createBridgedOverlayDatePickerIfNecessaryElement:(unsigned long long)arg1;
- (BOOL)createBridgedOverlayDatePickerIfNecessaryForClickOnPoint:(struct CGPoint)arg1;
- (void)gestureRecoginzerDidTap:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)tintColorDidChange;
@property(nonatomic) double timeInterval; // @synthesize timeInterval=_timeInterval;
- (void)setNumberOfTextFields:(unsigned long long)arg1;
- (void)commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic, getter=_highlightColor, setter=_setHighlightColor:) UIColor *highlightColor;
@property(retain, nonatomic, getter=_magnifierLineColor, setter=_setMagnifierLineColor:) UIColor *magnifierLineColor;
@property(readonly) Class superclass;
@property(retain, nonatomic, getter=_textColor, setter=_setTextColor:) UIColor *textColor;
@property(retain, nonatomic, getter=_textShadowColor, setter=_setTextShadowColor:) UIColor *textShadowColor;

@end

